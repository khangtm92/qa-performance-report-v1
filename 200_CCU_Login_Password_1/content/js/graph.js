/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 61307.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 1.0], [52.1, 1.0], [52.2, 1.0], [52.3, 1.0], [52.4, 1.0], [52.5, 1.0], [52.6, 1.0], [52.7, 1.0], [52.8, 1.0], [52.9, 1.0], [53.0, 1.0], [53.1, 1.0], [53.2, 1.0], [53.3, 1.0], [53.4, 1.0], [53.5, 1.0], [53.6, 1.0], [53.7, 1.0], [53.8, 1.0], [53.9, 1.0], [54.0, 1.0], [54.1, 1.0], [54.2, 1.0], [54.3, 1.0], [54.4, 1.0], [54.5, 1.0], [54.6, 1.0], [54.7, 1.0], [54.8, 1.0], [54.9, 1.0], [55.0, 1.0], [55.1, 1.0], [55.2, 1.0], [55.3, 1.0], [55.4, 1.0], [55.5, 1.0], [55.6, 1.0], [55.7, 1.0], [55.8, 1.0], [55.9, 1.0], [56.0, 1.0], [56.1, 1.0], [56.2, 1.0], [56.3, 1.0], [56.4, 1.0], [56.5, 1.0], [56.6, 1.0], [56.7, 1.0], [56.8, 1.0], [56.9, 1.0], [57.0, 1.0], [57.1, 1.0], [57.2, 1.0], [57.3, 1.0], [57.4, 1.0], [57.5, 1.0], [57.6, 1.0], [57.7, 1.0], [57.8, 1.0], [57.9, 1.0], [58.0, 1.0], [58.1, 1.0], [58.2, 1.0], [58.3, 1.0], [58.4, 1.0], [58.5, 1.0], [58.6, 1.0], [58.7, 1.0], [58.8, 1.0], [58.9, 1.0], [59.0, 1.0], [59.1, 1.0], [59.2, 1.0], [59.3, 1.0], [59.4, 1.0], [59.5, 1.0], [59.6, 1.0], [59.7, 1.0], [59.8, 1.0], [59.9, 1.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 2.0], [97.6, 2.0], [97.7, 2.0], [97.8, 2.0], [97.9, 2.0], [98.0, 2.0], [98.1, 2.0], [98.2, 2.0], [98.3, 2.0], [98.4, 2.0], [98.5, 8.0], [98.6, 8.0], [98.7, 8.0], [98.8, 8.0], [98.9, 8.0], [99.0, 10.0], [99.1, 10.0], [99.2, 10.0], [99.3, 10.0], [99.4, 10.0], [99.5, 10.0], [99.6, 10.0], [99.7, 10.0], [99.8, 10.0], [99.9, 10.0]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[0.0, 2545.0], [0.1, 2545.0], [0.2, 2545.0], [0.3, 2545.0], [0.4, 2545.0], [0.5, 2823.0], [0.6, 2823.0], [0.7, 2823.0], [0.8, 2823.0], [0.9, 2823.0], [1.0, 2874.0], [1.1, 2874.0], [1.2, 2874.0], [1.3, 2874.0], [1.4, 2874.0], [1.5, 2943.0], [1.6, 2943.0], [1.7, 2943.0], [1.8, 2943.0], [1.9, 2943.0], [2.0, 2962.0], [2.1, 2962.0], [2.2, 2962.0], [2.3, 2962.0], [2.4, 2962.0], [2.5, 3005.0], [2.6, 3005.0], [2.7, 3005.0], [2.8, 3005.0], [2.9, 3005.0], [3.0, 3225.0], [3.1, 3225.0], [3.2, 3225.0], [3.3, 3225.0], [3.4, 3225.0], [3.5, 3352.0], [3.6, 3352.0], [3.7, 3352.0], [3.8, 3352.0], [3.9, 3352.0], [4.0, 3406.0], [4.1, 3406.0], [4.2, 3406.0], [4.3, 3406.0], [4.4, 3406.0], [4.5, 3533.0], [4.6, 3533.0], [4.7, 3533.0], [4.8, 3533.0], [4.9, 3533.0], [5.0, 3584.0], [5.1, 3584.0], [5.2, 3584.0], [5.3, 3584.0], [5.4, 3584.0], [5.5, 3710.0], [5.6, 3710.0], [5.7, 3710.0], [5.8, 3710.0], [5.9, 3710.0], [6.0, 4198.0], [6.1, 4198.0], [6.2, 4198.0], [6.3, 4198.0], [6.4, 4198.0], [6.5, 4310.0], [6.6, 4310.0], [6.7, 4310.0], [6.8, 4310.0], [6.9, 4310.0], [7.0, 4410.0], [7.1, 4410.0], [7.2, 4410.0], [7.3, 4410.0], [7.4, 4410.0], [7.5, 4640.0], [7.6, 4640.0], [7.7, 4640.0], [7.8, 4640.0], [7.9, 4640.0], [8.0, 4791.0], [8.1, 4791.0], [8.2, 4791.0], [8.3, 4791.0], [8.4, 4791.0], [8.5, 4792.0], [8.6, 4792.0], [8.7, 4792.0], [8.8, 4792.0], [8.9, 4792.0], [9.0, 5075.0], [9.1, 5075.0], [9.2, 5075.0], [9.3, 5075.0], [9.4, 5075.0], [9.5, 5389.0], [9.6, 5389.0], [9.7, 5389.0], [9.8, 5389.0], [9.9, 5389.0], [10.0, 5412.0], [10.1, 5412.0], [10.2, 5412.0], [10.3, 5412.0], [10.4, 5412.0], [10.5, 5497.0], [10.6, 5497.0], [10.7, 5497.0], [10.8, 5497.0], [10.9, 5497.0], [11.0, 5529.0], [11.1, 5529.0], [11.2, 5529.0], [11.3, 5529.0], [11.4, 5529.0], [11.5, 5647.0], [11.6, 5647.0], [11.7, 5647.0], [11.8, 5647.0], [11.9, 5647.0], [12.0, 5777.0], [12.1, 5777.0], [12.2, 5777.0], [12.3, 5777.0], [12.4, 5777.0], [12.5, 5824.0], [12.6, 5824.0], [12.7, 5824.0], [12.8, 5824.0], [12.9, 5824.0], [13.0, 5901.0], [13.1, 5901.0], [13.2, 5901.0], [13.3, 5901.0], [13.4, 5901.0], [13.5, 5957.0], [13.6, 5957.0], [13.7, 5957.0], [13.8, 5957.0], [13.9, 5957.0], [14.0, 6091.0], [14.1, 6091.0], [14.2, 6091.0], [14.3, 6091.0], [14.4, 6091.0], [14.5, 6308.0], [14.6, 6308.0], [14.7, 6308.0], [14.8, 6308.0], [14.9, 6308.0], [15.0, 6326.0], [15.1, 6326.0], [15.2, 6326.0], [15.3, 6326.0], [15.4, 6326.0], [15.5, 6507.0], [15.6, 6507.0], [15.7, 6507.0], [15.8, 6507.0], [15.9, 6507.0], [16.0, 7037.0], [16.1, 7037.0], [16.2, 7037.0], [16.3, 7037.0], [16.4, 7037.0], [16.5, 7047.0], [16.6, 7047.0], [16.7, 7047.0], [16.8, 7047.0], [16.9, 7047.0], [17.0, 7132.0], [17.1, 7132.0], [17.2, 7132.0], [17.3, 7132.0], [17.4, 7132.0], [17.5, 7345.0], [17.6, 7345.0], [17.7, 7345.0], [17.8, 7345.0], [17.9, 7345.0], [18.0, 7596.0], [18.1, 7596.0], [18.2, 7596.0], [18.3, 7596.0], [18.4, 7596.0], [18.5, 7678.0], [18.6, 7678.0], [18.7, 7678.0], [18.8, 7678.0], [18.9, 7678.0], [19.0, 7722.0], [19.1, 7722.0], [19.2, 7722.0], [19.3, 7722.0], [19.4, 7722.0], [19.5, 7743.0], [19.6, 7743.0], [19.7, 7743.0], [19.8, 7743.0], [19.9, 7743.0], [20.0, 7782.0], [20.1, 7782.0], [20.2, 7782.0], [20.3, 7782.0], [20.4, 7782.0], [20.5, 7860.0], [20.6, 7860.0], [20.7, 7860.0], [20.8, 7860.0], [20.9, 7860.0], [21.0, 7861.0], [21.1, 7861.0], [21.2, 7861.0], [21.3, 7861.0], [21.4, 7861.0], [21.5, 7886.0], [21.6, 7886.0], [21.7, 7886.0], [21.8, 7886.0], [21.9, 7886.0], [22.0, 7892.0], [22.1, 7892.0], [22.2, 7892.0], [22.3, 7892.0], [22.4, 7892.0], [22.5, 8234.0], [22.6, 8234.0], [22.7, 8234.0], [22.8, 8234.0], [22.9, 8234.0], [23.0, 8442.0], [23.1, 8442.0], [23.2, 8442.0], [23.3, 8442.0], [23.4, 8442.0], [23.5, 8495.0], [23.6, 8495.0], [23.7, 8495.0], [23.8, 8495.0], [23.9, 8495.0], [24.0, 8531.0], [24.1, 8531.0], [24.2, 8531.0], [24.3, 8531.0], [24.4, 8531.0], [24.5, 8534.0], [24.6, 8534.0], [24.7, 8534.0], [24.8, 8534.0], [24.9, 8534.0], [25.0, 8554.0], [25.1, 8554.0], [25.2, 8554.0], [25.3, 8554.0], [25.4, 8554.0], [25.5, 8656.0], [25.6, 8656.0], [25.7, 8656.0], [25.8, 8656.0], [25.9, 8656.0], [26.0, 8742.0], [26.1, 8742.0], [26.2, 8742.0], [26.3, 8742.0], [26.4, 8742.0], [26.5, 8793.0], [26.6, 8793.0], [26.7, 8793.0], [26.8, 8793.0], [26.9, 8793.0], [27.0, 8805.0], [27.1, 8805.0], [27.2, 8805.0], [27.3, 8805.0], [27.4, 8805.0], [27.5, 9751.0], [27.6, 9751.0], [27.7, 9751.0], [27.8, 9751.0], [27.9, 9751.0], [28.0, 9962.0], [28.1, 9962.0], [28.2, 9962.0], [28.3, 9962.0], [28.4, 9962.0], [28.5, 10123.0], [28.6, 10123.0], [28.7, 10123.0], [28.8, 10123.0], [28.9, 10123.0], [29.0, 10344.0], [29.1, 10344.0], [29.2, 10344.0], [29.3, 10344.0], [29.4, 10344.0], [29.5, 10452.0], [29.6, 10452.0], [29.7, 10452.0], [29.8, 10452.0], [29.9, 10452.0], [30.0, 10492.0], [30.1, 10492.0], [30.2, 10492.0], [30.3, 10492.0], [30.4, 10492.0], [30.5, 10701.0], [30.6, 10701.0], [30.7, 10701.0], [30.8, 10701.0], [30.9, 10701.0], [31.0, 10980.0], [31.1, 10980.0], [31.2, 10980.0], [31.3, 10980.0], [31.4, 10980.0], [31.5, 10995.0], [31.6, 10995.0], [31.7, 10995.0], [31.8, 10995.0], [31.9, 10995.0], [32.0, 11148.0], [32.1, 11148.0], [32.2, 11148.0], [32.3, 11148.0], [32.4, 11148.0], [32.5, 11167.0], [32.6, 11167.0], [32.7, 11167.0], [32.8, 11167.0], [32.9, 11167.0], [33.0, 11227.0], [33.1, 11227.0], [33.2, 11227.0], [33.3, 11227.0], [33.4, 11227.0], [33.5, 11482.0], [33.6, 11482.0], [33.7, 11482.0], [33.8, 11482.0], [33.9, 11482.0], [34.0, 11761.0], [34.1, 11761.0], [34.2, 11761.0], [34.3, 11761.0], [34.4, 11761.0], [34.5, 11766.0], [34.6, 11766.0], [34.7, 11766.0], [34.8, 11766.0], [34.9, 11766.0], [35.0, 11837.0], [35.1, 11837.0], [35.2, 11837.0], [35.3, 11837.0], [35.4, 11837.0], [35.5, 11861.0], [35.6, 11861.0], [35.7, 11861.0], [35.8, 11861.0], [35.9, 11861.0], [36.0, 11929.0], [36.1, 11929.0], [36.2, 11929.0], [36.3, 11929.0], [36.4, 11929.0], [36.5, 11936.0], [36.6, 11936.0], [36.7, 11936.0], [36.8, 11936.0], [36.9, 11936.0], [37.0, 12023.0], [37.1, 12023.0], [37.2, 12023.0], [37.3, 12023.0], [37.4, 12023.0], [37.5, 12087.0], [37.6, 12087.0], [37.7, 12087.0], [37.8, 12087.0], [37.9, 12087.0], [38.0, 12108.0], [38.1, 12108.0], [38.2, 12108.0], [38.3, 12108.0], [38.4, 12108.0], [38.5, 12218.0], [38.6, 12218.0], [38.7, 12218.0], [38.8, 12218.0], [38.9, 12218.0], [39.0, 12222.0], [39.1, 12222.0], [39.2, 12222.0], [39.3, 12222.0], [39.4, 12222.0], [39.5, 12233.0], [39.6, 12233.0], [39.7, 12233.0], [39.8, 12233.0], [39.9, 12233.0], [40.0, 12358.0], [40.1, 12358.0], [40.2, 12358.0], [40.3, 12358.0], [40.4, 12358.0], [40.5, 12401.0], [40.6, 12401.0], [40.7, 12401.0], [40.8, 12401.0], [40.9, 12401.0], [41.0, 12480.0], [41.1, 12480.0], [41.2, 12480.0], [41.3, 12480.0], [41.4, 12480.0], [41.5, 12480.0], [41.6, 12480.0], [41.7, 12480.0], [41.8, 12480.0], [41.9, 12480.0], [42.0, 12483.0], [42.1, 12483.0], [42.2, 12483.0], [42.3, 12483.0], [42.4, 12483.0], [42.5, 12553.0], [42.6, 12553.0], [42.7, 12553.0], [42.8, 12553.0], [42.9, 12553.0], [43.0, 12828.0], [43.1, 12828.0], [43.2, 12828.0], [43.3, 12828.0], [43.4, 12828.0], [43.5, 12857.0], [43.6, 12857.0], [43.7, 12857.0], [43.8, 12857.0], [43.9, 12857.0], [44.0, 12900.0], [44.1, 12900.0], [44.2, 12900.0], [44.3, 12900.0], [44.4, 12900.0], [44.5, 12985.0], [44.6, 12985.0], [44.7, 12985.0], [44.8, 12985.0], [44.9, 12985.0], [45.0, 12998.0], [45.1, 12998.0], [45.2, 12998.0], [45.3, 12998.0], [45.4, 12998.0], [45.5, 13009.0], [45.6, 13009.0], [45.7, 13009.0], [45.8, 13009.0], [45.9, 13009.0], [46.0, 13039.0], [46.1, 13039.0], [46.2, 13039.0], [46.3, 13039.0], [46.4, 13039.0], [46.5, 13096.0], [46.6, 13096.0], [46.7, 13096.0], [46.8, 13096.0], [46.9, 13096.0], [47.0, 13162.0], [47.1, 13162.0], [47.2, 13162.0], [47.3, 13162.0], [47.4, 13162.0], [47.5, 13185.0], [47.6, 13185.0], [47.7, 13185.0], [47.8, 13185.0], [47.9, 13185.0], [48.0, 13250.0], [48.1, 13250.0], [48.2, 13250.0], [48.3, 13250.0], [48.4, 13250.0], [48.5, 13275.0], [48.6, 13275.0], [48.7, 13275.0], [48.8, 13275.0], [48.9, 13275.0], [49.0, 13284.0], [49.1, 13284.0], [49.2, 13284.0], [49.3, 13284.0], [49.4, 13284.0], [49.5, 13296.0], [49.6, 13296.0], [49.7, 13296.0], [49.8, 13296.0], [49.9, 13296.0], [50.0, 13485.0], [50.1, 13485.0], [50.2, 13485.0], [50.3, 13485.0], [50.4, 13485.0], [50.5, 13567.0], [50.6, 13567.0], [50.7, 13567.0], [50.8, 13567.0], [50.9, 13567.0], [51.0, 13572.0], [51.1, 13572.0], [51.2, 13572.0], [51.3, 13572.0], [51.4, 13572.0], [51.5, 13755.0], [51.6, 13755.0], [51.7, 13755.0], [51.8, 13755.0], [51.9, 13755.0], [52.0, 13801.0], [52.1, 13801.0], [52.2, 13801.0], [52.3, 13801.0], [52.4, 13801.0], [52.5, 16639.0], [52.6, 16639.0], [52.7, 16639.0], [52.8, 16639.0], [52.9, 16639.0], [53.0, 16951.0], [53.1, 16951.0], [53.2, 16951.0], [53.3, 16951.0], [53.4, 16951.0], [53.5, 17895.0], [53.6, 17895.0], [53.7, 17895.0], [53.8, 17895.0], [53.9, 17895.0], [54.0, 19456.0], [54.1, 19456.0], [54.2, 19456.0], [54.3, 19456.0], [54.4, 19456.0], [54.5, 19613.0], [54.6, 19613.0], [54.7, 19613.0], [54.8, 19613.0], [54.9, 19613.0], [55.0, 20348.0], [55.1, 20348.0], [55.2, 20348.0], [55.3, 20348.0], [55.4, 20348.0], [55.5, 21877.0], [55.6, 21877.0], [55.7, 21877.0], [55.8, 21877.0], [55.9, 21877.0], [56.0, 22145.0], [56.1, 22145.0], [56.2, 22145.0], [56.3, 22145.0], [56.4, 22145.0], [56.5, 22862.0], [56.6, 22862.0], [56.7, 22862.0], [56.8, 22862.0], [56.9, 22862.0], [57.0, 23514.0], [57.1, 23514.0], [57.2, 23514.0], [57.3, 23514.0], [57.4, 23514.0], [57.5, 23780.0], [57.6, 23780.0], [57.7, 23780.0], [57.8, 23780.0], [57.9, 23780.0], [58.0, 23932.0], [58.1, 23932.0], [58.2, 23932.0], [58.3, 23932.0], [58.4, 23932.0], [58.5, 24180.0], [58.6, 24180.0], [58.7, 24180.0], [58.8, 24180.0], [58.9, 24180.0], [59.0, 24386.0], [59.1, 24386.0], [59.2, 24386.0], [59.3, 24386.0], [59.4, 24386.0], [59.5, 24595.0], [59.6, 24595.0], [59.7, 24595.0], [59.8, 24595.0], [59.9, 24595.0], [60.0, 24611.0], [60.1, 24611.0], [60.2, 24611.0], [60.3, 24611.0], [60.4, 24611.0], [60.5, 25064.0], [60.6, 25064.0], [60.7, 25064.0], [60.8, 25064.0], [60.9, 25064.0], [61.0, 25098.0], [61.1, 25098.0], [61.2, 25098.0], [61.3, 25098.0], [61.4, 25098.0], [61.5, 26346.0], [61.6, 26346.0], [61.7, 26346.0], [61.8, 26346.0], [61.9, 26346.0], [62.0, 27077.0], [62.1, 27077.0], [62.2, 27077.0], [62.3, 27077.0], [62.4, 27077.0], [62.5, 27441.0], [62.6, 27441.0], [62.7, 27441.0], [62.8, 27441.0], [62.9, 27441.0], [63.0, 27463.0], [63.1, 27463.0], [63.2, 27463.0], [63.3, 27463.0], [63.4, 27463.0], [63.5, 27508.0], [63.6, 27508.0], [63.7, 27508.0], [63.8, 27508.0], [63.9, 27508.0], [64.0, 27605.0], [64.1, 27605.0], [64.2, 27605.0], [64.3, 27605.0], [64.4, 27605.0], [64.5, 27614.0], [64.6, 27614.0], [64.7, 27614.0], [64.8, 27614.0], [64.9, 27614.0], [65.0, 27664.0], [65.1, 27664.0], [65.2, 27664.0], [65.3, 27664.0], [65.4, 27664.0], [65.5, 27664.0], [65.6, 27664.0], [65.7, 27664.0], [65.8, 27664.0], [65.9, 27664.0], [66.0, 27695.0], [66.1, 27695.0], [66.2, 27695.0], [66.3, 27695.0], [66.4, 27695.0], [66.5, 27707.0], [66.6, 27707.0], [66.7, 27707.0], [66.8, 27707.0], [66.9, 27707.0], [67.0, 27712.0], [67.1, 27712.0], [67.2, 27712.0], [67.3, 27712.0], [67.4, 27712.0], [67.5, 27754.0], [67.6, 27754.0], [67.7, 27754.0], [67.8, 27754.0], [67.9, 27754.0], [68.0, 27818.0], [68.1, 27818.0], [68.2, 27818.0], [68.3, 27818.0], [68.4, 27818.0], [68.5, 27983.0], [68.6, 27983.0], [68.7, 27983.0], [68.8, 27983.0], [68.9, 27983.0], [69.0, 27992.0], [69.1, 27992.0], [69.2, 27992.0], [69.3, 27992.0], [69.4, 27992.0], [69.5, 28015.0], [69.6, 28015.0], [69.7, 28015.0], [69.8, 28015.0], [69.9, 28015.0], [70.0, 28145.0], [70.1, 28145.0], [70.2, 28145.0], [70.3, 28145.0], [70.4, 28145.0], [70.5, 28154.0], [70.6, 28154.0], [70.7, 28154.0], [70.8, 28154.0], [70.9, 28154.0], [71.0, 28170.0], [71.1, 28170.0], [71.2, 28170.0], [71.3, 28170.0], [71.4, 28170.0], [71.5, 28221.0], [71.6, 28221.0], [71.7, 28221.0], [71.8, 28221.0], [71.9, 28221.0], [72.0, 28469.0], [72.1, 28469.0], [72.2, 28469.0], [72.3, 28469.0], [72.4, 28469.0], [72.5, 28473.0], [72.6, 28473.0], [72.7, 28473.0], [72.8, 28473.0], [72.9, 28473.0], [73.0, 28474.0], [73.1, 28474.0], [73.2, 28474.0], [73.3, 28474.0], [73.4, 28474.0], [73.5, 28580.0], [73.6, 28580.0], [73.7, 28580.0], [73.8, 28580.0], [73.9, 28580.0], [74.0, 28582.0], [74.1, 28582.0], [74.2, 28582.0], [74.3, 28582.0], [74.4, 28582.0], [74.5, 28634.0], [74.6, 28634.0], [74.7, 28634.0], [74.8, 28634.0], [74.9, 28634.0], [75.0, 28653.0], [75.1, 28653.0], [75.2, 28653.0], [75.3, 28653.0], [75.4, 28653.0], [75.5, 28704.0], [75.6, 28704.0], [75.7, 28704.0], [75.8, 28704.0], [75.9, 28704.0], [76.0, 28704.0], [76.1, 28704.0], [76.2, 28704.0], [76.3, 28704.0], [76.4, 28704.0], [76.5, 28708.0], [76.6, 28708.0], [76.7, 28708.0], [76.8, 28708.0], [76.9, 28708.0], [77.0, 28796.0], [77.1, 28796.0], [77.2, 28796.0], [77.3, 28796.0], [77.4, 28796.0], [77.5, 28799.0], [77.6, 28799.0], [77.7, 28799.0], [77.8, 28799.0], [77.9, 28799.0], [78.0, 28834.0], [78.1, 28834.0], [78.2, 28834.0], [78.3, 28834.0], [78.4, 28834.0], [78.5, 28868.0], [78.6, 28868.0], [78.7, 28868.0], [78.8, 28868.0], [78.9, 28868.0], [79.0, 28904.0], [79.1, 28904.0], [79.2, 28904.0], [79.3, 28904.0], [79.4, 28904.0], [79.5, 28945.0], [79.6, 28945.0], [79.7, 28945.0], [79.8, 28945.0], [79.9, 28945.0], [80.0, 28994.0], [80.1, 28994.0], [80.2, 28994.0], [80.3, 28994.0], [80.4, 28994.0], [80.5, 29012.0], [80.6, 29012.0], [80.7, 29012.0], [80.8, 29012.0], [80.9, 29012.0], [81.0, 29018.0], [81.1, 29018.0], [81.2, 29018.0], [81.3, 29018.0], [81.4, 29018.0], [81.5, 29021.0], [81.6, 29021.0], [81.7, 29021.0], [81.8, 29021.0], [81.9, 29021.0], [82.0, 29022.0], [82.1, 29022.0], [82.2, 29022.0], [82.3, 29022.0], [82.4, 29022.0], [82.5, 29022.0], [82.6, 29022.0], [82.7, 29022.0], [82.8, 29022.0], [82.9, 29022.0], [83.0, 29039.0], [83.1, 29039.0], [83.2, 29039.0], [83.3, 29039.0], [83.4, 29039.0], [83.5, 29047.0], [83.6, 29047.0], [83.7, 29047.0], [83.8, 29047.0], [83.9, 29047.0], [84.0, 29153.0], [84.1, 29153.0], [84.2, 29153.0], [84.3, 29153.0], [84.4, 29153.0], [84.5, 29168.0], [84.6, 29168.0], [84.7, 29168.0], [84.8, 29168.0], [84.9, 29168.0], [85.0, 29192.0], [85.1, 29192.0], [85.2, 29192.0], [85.3, 29192.0], [85.4, 29192.0], [85.5, 29202.0], [85.6, 29202.0], [85.7, 29202.0], [85.8, 29202.0], [85.9, 29202.0], [86.0, 29205.0], [86.1, 29205.0], [86.2, 29205.0], [86.3, 29205.0], [86.4, 29205.0], [86.5, 29214.0], [86.6, 29214.0], [86.7, 29214.0], [86.8, 29214.0], [86.9, 29214.0], [87.0, 29229.0], [87.1, 29229.0], [87.2, 29229.0], [87.3, 29229.0], [87.4, 29229.0], [87.5, 29240.0], [87.6, 29240.0], [87.7, 29240.0], [87.8, 29240.0], [87.9, 29240.0], [88.0, 29277.0], [88.1, 29277.0], [88.2, 29277.0], [88.3, 29277.0], [88.4, 29277.0], [88.5, 29307.0], [88.6, 29307.0], [88.7, 29307.0], [88.8, 29307.0], [88.9, 29307.0], [89.0, 29338.0], [89.1, 29338.0], [89.2, 29338.0], [89.3, 29338.0], [89.4, 29338.0], [89.5, 29386.0], [89.6, 29386.0], [89.7, 29386.0], [89.8, 29386.0], [89.9, 29386.0], [90.0, 29422.0], [90.1, 29422.0], [90.2, 29422.0], [90.3, 29422.0], [90.4, 29422.0], [90.5, 29424.0], [90.6, 29424.0], [90.7, 29424.0], [90.8, 29424.0], [90.9, 29424.0], [91.0, 29459.0], [91.1, 29459.0], [91.2, 29459.0], [91.3, 29459.0], [91.4, 29459.0], [91.5, 29463.0], [91.6, 29463.0], [91.7, 29463.0], [91.8, 29463.0], [91.9, 29463.0], [92.0, 29464.0], [92.1, 29464.0], [92.2, 29464.0], [92.3, 29464.0], [92.4, 29464.0], [92.5, 29469.0], [92.6, 29469.0], [92.7, 29469.0], [92.8, 29469.0], [92.9, 29469.0], [93.0, 29476.0], [93.1, 29476.0], [93.2, 29476.0], [93.3, 29476.0], [93.4, 29476.0], [93.5, 29515.0], [93.6, 29515.0], [93.7, 29515.0], [93.8, 29515.0], [93.9, 29515.0], [94.0, 29519.0], [94.1, 29519.0], [94.2, 29519.0], [94.3, 29519.0], [94.4, 29519.0], [94.5, 29543.0], [94.6, 29543.0], [94.7, 29543.0], [94.8, 29543.0], [94.9, 29543.0], [95.0, 29579.0], [95.1, 29579.0], [95.2, 29579.0], [95.3, 29579.0], [95.4, 29579.0], [95.5, 29702.0], [95.6, 29702.0], [95.7, 29702.0], [95.8, 29702.0], [95.9, 29702.0], [96.0, 29742.0], [96.1, 29742.0], [96.2, 29742.0], [96.3, 29742.0], [96.4, 29742.0], [96.5, 29776.0], [96.6, 29776.0], [96.7, 29776.0], [96.8, 29776.0], [96.9, 29776.0], [97.0, 29785.0], [97.1, 29785.0], [97.2, 29785.0], [97.3, 29785.0], [97.4, 29785.0], [97.5, 29826.0], [97.6, 29826.0], [97.7, 29826.0], [97.8, 29826.0], [97.9, 29826.0], [98.0, 29935.0], [98.1, 29935.0], [98.2, 29935.0], [98.3, 29935.0], [98.4, 29935.0], [98.5, 29952.0], [98.6, 29952.0], [98.7, 29952.0], [98.8, 29952.0], [98.9, 29952.0], [99.0, 30018.0], [99.1, 30018.0], [99.2, 30018.0], [99.3, 30018.0], [99.4, 30018.0], [99.5, 33113.0], [99.6, 33113.0], [99.7, 33113.0], [99.8, 33113.0], [99.9, 33113.0]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[0.0, 8944.0], [0.1, 8944.0], [0.2, 8944.0], [0.3, 8944.0], [0.4, 8944.0], [0.5, 8972.0], [0.6, 8972.0], [0.7, 8972.0], [0.8, 8972.0], [0.9, 8972.0], [1.0, 10309.0], [1.1, 10309.0], [1.2, 10309.0], [1.3, 10309.0], [1.4, 10309.0], [1.5, 10377.0], [1.6, 10377.0], [1.7, 10377.0], [1.8, 10377.0], [1.9, 10377.0], [2.0, 10813.0], [2.1, 10813.0], [2.2, 10813.0], [2.3, 10813.0], [2.4, 10813.0], [2.5, 11625.0], [2.6, 11625.0], [2.7, 11625.0], [2.8, 11625.0], [2.9, 11625.0], [3.0, 12742.0], [3.1, 12742.0], [3.2, 12742.0], [3.3, 12742.0], [3.4, 12742.0], [3.5, 12962.0], [3.6, 12962.0], [3.7, 12962.0], [3.8, 12962.0], [3.9, 12962.0], [4.0, 13018.0], [4.1, 13018.0], [4.2, 13018.0], [4.3, 13018.0], [4.4, 13018.0], [4.5, 13811.0], [4.6, 13811.0], [4.7, 13811.0], [4.8, 13811.0], [4.9, 13811.0], [5.0, 13952.0], [5.1, 13952.0], [5.2, 13952.0], [5.3, 13952.0], [5.4, 13952.0], [5.5, 14074.0], [5.6, 14074.0], [5.7, 14074.0], [5.8, 14074.0], [5.9, 14074.0], [6.0, 14750.0], [6.1, 14750.0], [6.2, 14750.0], [6.3, 14750.0], [6.4, 14750.0], [6.5, 14802.0], [6.6, 14802.0], [6.7, 14802.0], [6.8, 14802.0], [6.9, 14802.0], [7.0, 15049.0], [7.1, 15049.0], [7.2, 15049.0], [7.3, 15049.0], [7.4, 15049.0], [7.5, 15889.0], [7.6, 15889.0], [7.7, 15889.0], [7.8, 15889.0], [7.9, 15889.0], [8.0, 19653.0], [8.1, 19653.0], [8.2, 19653.0], [8.3, 19653.0], [8.4, 19653.0], [8.5, 24295.0], [8.6, 24295.0], [8.7, 24295.0], [8.8, 24295.0], [8.9, 24295.0], [9.0, 25258.0], [9.1, 25258.0], [9.2, 25258.0], [9.3, 25258.0], [9.4, 25258.0], [9.5, 25280.0], [9.6, 25280.0], [9.7, 25280.0], [9.8, 25280.0], [9.9, 25280.0], [10.0, 25343.0], [10.1, 25343.0], [10.2, 25343.0], [10.3, 25343.0], [10.4, 25343.0], [10.5, 25385.0], [10.6, 25385.0], [10.7, 25385.0], [10.8, 25385.0], [10.9, 25385.0], [11.0, 25437.0], [11.1, 25437.0], [11.2, 25437.0], [11.3, 25437.0], [11.4, 25437.0], [11.5, 25468.0], [11.6, 25468.0], [11.7, 25468.0], [11.8, 25468.0], [11.9, 25468.0], [12.0, 25473.0], [12.1, 25473.0], [12.2, 25473.0], [12.3, 25473.0], [12.4, 25473.0], [12.5, 25566.0], [12.6, 25566.0], [12.7, 25566.0], [12.8, 25566.0], [12.9, 25566.0], [13.0, 25707.0], [13.1, 25707.0], [13.2, 25707.0], [13.3, 25707.0], [13.4, 25707.0], [13.5, 26128.0], [13.6, 26128.0], [13.7, 26128.0], [13.8, 26128.0], [13.9, 26128.0], [14.0, 27021.0], [14.1, 27021.0], [14.2, 27021.0], [14.3, 27021.0], [14.4, 27021.0], [14.5, 27051.0], [14.6, 27051.0], [14.7, 27051.0], [14.8, 27051.0], [14.9, 27051.0], [15.0, 27127.0], [15.1, 27127.0], [15.2, 27127.0], [15.3, 27127.0], [15.4, 27127.0], [15.5, 27222.0], [15.6, 27222.0], [15.7, 27222.0], [15.8, 27222.0], [15.9, 27222.0], [16.0, 27446.0], [16.1, 27446.0], [16.2, 27446.0], [16.3, 27446.0], [16.4, 27446.0], [16.5, 27486.0], [16.6, 27486.0], [16.7, 27486.0], [16.8, 27486.0], [16.9, 27486.0], [17.0, 27583.0], [17.1, 27583.0], [17.2, 27583.0], [17.3, 27583.0], [17.4, 27583.0], [17.5, 27586.0], [17.6, 27586.0], [17.7, 27586.0], [17.8, 27586.0], [17.9, 27586.0], [18.0, 27665.0], [18.1, 27665.0], [18.2, 27665.0], [18.3, 27665.0], [18.4, 27665.0], [18.5, 27682.0], [18.6, 27682.0], [18.7, 27682.0], [18.8, 27682.0], [18.9, 27682.0], [19.0, 27693.0], [19.1, 27693.0], [19.2, 27693.0], [19.3, 27693.0], [19.4, 27693.0], [19.5, 27823.0], [19.6, 27823.0], [19.7, 27823.0], [19.8, 27823.0], [19.9, 27823.0], [20.0, 27928.0], [20.1, 27928.0], [20.2, 27928.0], [20.3, 27928.0], [20.4, 27928.0], [20.5, 28008.0], [20.6, 28008.0], [20.7, 28008.0], [20.8, 28008.0], [20.9, 28008.0], [21.0, 28016.0], [21.1, 28016.0], [21.2, 28016.0], [21.3, 28016.0], [21.4, 28016.0], [21.5, 28094.0], [21.6, 28094.0], [21.7, 28094.0], [21.8, 28094.0], [21.9, 28094.0], [22.0, 28099.0], [22.1, 28099.0], [22.2, 28099.0], [22.3, 28099.0], [22.4, 28099.0], [22.5, 28119.0], [22.6, 28119.0], [22.7, 28119.0], [22.8, 28119.0], [22.9, 28119.0], [23.0, 28121.0], [23.1, 28121.0], [23.2, 28121.0], [23.3, 28121.0], [23.4, 28121.0], [23.5, 28152.0], [23.6, 28152.0], [23.7, 28152.0], [23.8, 28152.0], [23.9, 28152.0], [24.0, 28154.0], [24.1, 28154.0], [24.2, 28154.0], [24.3, 28154.0], [24.4, 28154.0], [24.5, 28238.0], [24.6, 28238.0], [24.7, 28238.0], [24.8, 28238.0], [24.9, 28238.0], [25.0, 28257.0], [25.1, 28257.0], [25.2, 28257.0], [25.3, 28257.0], [25.4, 28257.0], [25.5, 28277.0], [25.6, 28277.0], [25.7, 28277.0], [25.8, 28277.0], [25.9, 28277.0], [26.0, 28296.0], [26.1, 28296.0], [26.2, 28296.0], [26.3, 28296.0], [26.4, 28296.0], [26.5, 28299.0], [26.6, 28299.0], [26.7, 28299.0], [26.8, 28299.0], [26.9, 28299.0], [27.0, 28344.0], [27.1, 28344.0], [27.2, 28344.0], [27.3, 28344.0], [27.4, 28344.0], [27.5, 28367.0], [27.6, 28367.0], [27.7, 28367.0], [27.8, 28367.0], [27.9, 28367.0], [28.0, 28369.0], [28.1, 28369.0], [28.2, 28369.0], [28.3, 28369.0], [28.4, 28369.0], [28.5, 28376.0], [28.6, 28376.0], [28.7, 28376.0], [28.8, 28376.0], [28.9, 28376.0], [29.0, 28379.0], [29.1, 28379.0], [29.2, 28379.0], [29.3, 28379.0], [29.4, 28379.0], [29.5, 28396.0], [29.6, 28396.0], [29.7, 28396.0], [29.8, 28396.0], [29.9, 28396.0], [30.0, 28435.0], [30.1, 28435.0], [30.2, 28435.0], [30.3, 28435.0], [30.4, 28435.0], [30.5, 28438.0], [30.6, 28438.0], [30.7, 28438.0], [30.8, 28438.0], [30.9, 28438.0], [31.0, 28477.0], [31.1, 28477.0], [31.2, 28477.0], [31.3, 28477.0], [31.4, 28477.0], [31.5, 28484.0], [31.6, 28484.0], [31.7, 28484.0], [31.8, 28484.0], [31.9, 28484.0], [32.0, 28488.0], [32.1, 28488.0], [32.2, 28488.0], [32.3, 28488.0], [32.4, 28488.0], [32.5, 28510.0], [32.6, 28510.0], [32.7, 28510.0], [32.8, 28510.0], [32.9, 28510.0], [33.0, 28569.0], [33.1, 28569.0], [33.2, 28569.0], [33.3, 28569.0], [33.4, 28569.0], [33.5, 28581.0], [33.6, 28581.0], [33.7, 28581.0], [33.8, 28581.0], [33.9, 28581.0], [34.0, 28581.0], [34.1, 28581.0], [34.2, 28581.0], [34.3, 28581.0], [34.4, 28581.0], [34.5, 28590.0], [34.6, 28590.0], [34.7, 28590.0], [34.8, 28590.0], [34.9, 28590.0], [35.0, 28597.0], [35.1, 28597.0], [35.2, 28597.0], [35.3, 28597.0], [35.4, 28597.0], [35.5, 28652.0], [35.6, 28652.0], [35.7, 28652.0], [35.8, 28652.0], [35.9, 28652.0], [36.0, 28677.0], [36.1, 28677.0], [36.2, 28677.0], [36.3, 28677.0], [36.4, 28677.0], [36.5, 28682.0], [36.6, 28682.0], [36.7, 28682.0], [36.8, 28682.0], [36.9, 28682.0], [37.0, 28713.0], [37.1, 28713.0], [37.2, 28713.0], [37.3, 28713.0], [37.4, 28713.0], [37.5, 28721.0], [37.6, 28721.0], [37.7, 28721.0], [37.8, 28721.0], [37.9, 28721.0], [38.0, 28762.0], [38.1, 28762.0], [38.2, 28762.0], [38.3, 28762.0], [38.4, 28762.0], [38.5, 28789.0], [38.6, 28789.0], [38.7, 28789.0], [38.8, 28789.0], [38.9, 28789.0], [39.0, 28790.0], [39.1, 28790.0], [39.2, 28790.0], [39.3, 28790.0], [39.4, 28790.0], [39.5, 28811.0], [39.6, 28811.0], [39.7, 28811.0], [39.8, 28811.0], [39.9, 28811.0], [40.0, 28839.0], [40.1, 28839.0], [40.2, 28839.0], [40.3, 28839.0], [40.4, 28839.0], [40.5, 28859.0], [40.6, 28859.0], [40.7, 28859.0], [40.8, 28859.0], [40.9, 28859.0], [41.0, 28881.0], [41.1, 28881.0], [41.2, 28881.0], [41.3, 28881.0], [41.4, 28881.0], [41.5, 28889.0], [41.6, 28889.0], [41.7, 28889.0], [41.8, 28889.0], [41.9, 28889.0], [42.0, 28896.0], [42.1, 28896.0], [42.2, 28896.0], [42.3, 28896.0], [42.4, 28896.0], [42.5, 28926.0], [42.6, 28926.0], [42.7, 28926.0], [42.8, 28926.0], [42.9, 28926.0], [43.0, 28929.0], [43.1, 28929.0], [43.2, 28929.0], [43.3, 28929.0], [43.4, 28929.0], [43.5, 28950.0], [43.6, 28950.0], [43.7, 28950.0], [43.8, 28950.0], [43.9, 28950.0], [44.0, 28973.0], [44.1, 28973.0], [44.2, 28973.0], [44.3, 28973.0], [44.4, 28973.0], [44.5, 29001.0], [44.6, 29001.0], [44.7, 29001.0], [44.8, 29001.0], [44.9, 29001.0], [45.0, 29006.0], [45.1, 29006.0], [45.2, 29006.0], [45.3, 29006.0], [45.4, 29006.0], [45.5, 29033.0], [45.6, 29033.0], [45.7, 29033.0], [45.8, 29033.0], [45.9, 29033.0], [46.0, 29034.0], [46.1, 29034.0], [46.2, 29034.0], [46.3, 29034.0], [46.4, 29034.0], [46.5, 29038.0], [46.6, 29038.0], [46.7, 29038.0], [46.8, 29038.0], [46.9, 29038.0], [47.0, 29042.0], [47.1, 29042.0], [47.2, 29042.0], [47.3, 29042.0], [47.4, 29042.0], [47.5, 29067.0], [47.6, 29067.0], [47.7, 29067.0], [47.8, 29067.0], [47.9, 29067.0], [48.0, 29084.0], [48.1, 29084.0], [48.2, 29084.0], [48.3, 29084.0], [48.4, 29084.0], [48.5, 29085.0], [48.6, 29085.0], [48.7, 29085.0], [48.8, 29085.0], [48.9, 29085.0], [49.0, 29118.0], [49.1, 29118.0], [49.2, 29118.0], [49.3, 29118.0], [49.4, 29118.0], [49.5, 29127.0], [49.6, 29127.0], [49.7, 29127.0], [49.8, 29127.0], [49.9, 29127.0], [50.0, 29160.0], [50.1, 29160.0], [50.2, 29160.0], [50.3, 29160.0], [50.4, 29160.0], [50.5, 29191.0], [50.6, 29191.0], [50.7, 29191.0], [50.8, 29191.0], [50.9, 29191.0], [51.0, 29264.0], [51.1, 29264.0], [51.2, 29264.0], [51.3, 29264.0], [51.4, 29264.0], [51.5, 29286.0], [51.6, 29286.0], [51.7, 29286.0], [51.8, 29286.0], [51.9, 29286.0], [52.0, 29468.0], [52.1, 29468.0], [52.2, 29468.0], [52.3, 29468.0], [52.4, 29468.0], [52.5, 29508.0], [52.6, 29508.0], [52.7, 29508.0], [52.8, 29508.0], [52.9, 29508.0], [53.0, 29560.0], [53.1, 29560.0], [53.2, 29560.0], [53.3, 29560.0], [53.4, 29560.0], [53.5, 29591.0], [53.6, 29591.0], [53.7, 29591.0], [53.8, 29591.0], [53.9, 29591.0], [54.0, 29608.0], [54.1, 29608.0], [54.2, 29608.0], [54.3, 29608.0], [54.4, 29608.0], [54.5, 29652.0], [54.6, 29652.0], [54.7, 29652.0], [54.8, 29652.0], [54.9, 29652.0], [55.0, 29695.0], [55.1, 29695.0], [55.2, 29695.0], [55.3, 29695.0], [55.4, 29695.0], [55.5, 29697.0], [55.6, 29697.0], [55.7, 29697.0], [55.8, 29697.0], [55.9, 29697.0], [56.0, 29759.0], [56.1, 29759.0], [56.2, 29759.0], [56.3, 29759.0], [56.4, 29759.0], [56.5, 29764.0], [56.6, 29764.0], [56.7, 29764.0], [56.8, 29764.0], [56.9, 29764.0], [57.0, 29783.0], [57.1, 29783.0], [57.2, 29783.0], [57.3, 29783.0], [57.4, 29783.0], [57.5, 29819.0], [57.6, 29819.0], [57.7, 29819.0], [57.8, 29819.0], [57.9, 29819.0], [58.0, 29849.0], [58.1, 29849.0], [58.2, 29849.0], [58.3, 29849.0], [58.4, 29849.0], [58.5, 29868.0], [58.6, 29868.0], [58.7, 29868.0], [58.8, 29868.0], [58.9, 29868.0], [59.0, 29869.0], [59.1, 29869.0], [59.2, 29869.0], [59.3, 29869.0], [59.4, 29869.0], [59.5, 29900.0], [59.6, 29900.0], [59.7, 29900.0], [59.8, 29900.0], [59.9, 29900.0], [60.0, 29901.0], [60.1, 29901.0], [60.2, 29901.0], [60.3, 29901.0], [60.4, 29901.0], [60.5, 29920.0], [60.6, 29920.0], [60.7, 29920.0], [60.8, 29920.0], [60.9, 29920.0], [61.0, 29966.0], [61.1, 29966.0], [61.2, 29966.0], [61.3, 29966.0], [61.4, 29966.0], [61.5, 29993.0], [61.6, 29993.0], [61.7, 29993.0], [61.8, 29993.0], [61.9, 29993.0], [62.0, 30030.0], [62.1, 30030.0], [62.2, 30030.0], [62.3, 30030.0], [62.4, 30030.0], [62.5, 30094.0], [62.6, 30094.0], [62.7, 30094.0], [62.8, 30094.0], [62.9, 30094.0], [63.0, 30104.0], [63.1, 30104.0], [63.2, 30104.0], [63.3, 30104.0], [63.4, 30104.0], [63.5, 30138.0], [63.6, 30138.0], [63.7, 30138.0], [63.8, 30138.0], [63.9, 30138.0], [64.0, 30149.0], [64.1, 30149.0], [64.2, 30149.0], [64.3, 30149.0], [64.4, 30149.0], [64.5, 30222.0], [64.6, 30222.0], [64.7, 30222.0], [64.8, 30222.0], [64.9, 30222.0], [65.0, 30230.0], [65.1, 30230.0], [65.2, 30230.0], [65.3, 30230.0], [65.4, 30230.0], [65.5, 30232.0], [65.6, 30232.0], [65.7, 30232.0], [65.8, 30232.0], [65.9, 30232.0], [66.0, 30285.0], [66.1, 30285.0], [66.2, 30285.0], [66.3, 30285.0], [66.4, 30285.0], [66.5, 30285.0], [66.6, 30285.0], [66.7, 30285.0], [66.8, 30285.0], [66.9, 30285.0], [67.0, 30287.0], [67.1, 30287.0], [67.2, 30287.0], [67.3, 30287.0], [67.4, 30287.0], [67.5, 30289.0], [67.6, 30289.0], [67.7, 30289.0], [67.8, 30289.0], [67.9, 30289.0], [68.0, 30322.0], [68.1, 30322.0], [68.2, 30322.0], [68.3, 30322.0], [68.4, 30322.0], [68.5, 30351.0], [68.6, 30351.0], [68.7, 30351.0], [68.8, 30351.0], [68.9, 30351.0], [69.0, 30352.0], [69.1, 30352.0], [69.2, 30352.0], [69.3, 30352.0], [69.4, 30352.0], [69.5, 30383.0], [69.6, 30383.0], [69.7, 30383.0], [69.8, 30383.0], [69.9, 30383.0], [70.0, 30413.0], [70.1, 30413.0], [70.2, 30413.0], [70.3, 30413.0], [70.4, 30413.0], [70.5, 30419.0], [70.6, 30419.0], [70.7, 30419.0], [70.8, 30419.0], [70.9, 30419.0], [71.0, 30667.0], [71.1, 30667.0], [71.2, 30667.0], [71.3, 30667.0], [71.4, 30667.0], [71.5, 30685.0], [71.6, 30685.0], [71.7, 30685.0], [71.8, 30685.0], [71.9, 30685.0], [72.0, 30734.0], [72.1, 30734.0], [72.2, 30734.0], [72.3, 30734.0], [72.4, 30734.0], [72.5, 30750.0], [72.6, 30750.0], [72.7, 30750.0], [72.8, 30750.0], [72.9, 30750.0], [73.0, 30765.0], [73.1, 30765.0], [73.2, 30765.0], [73.3, 30765.0], [73.4, 30765.0], [73.5, 30787.0], [73.6, 30787.0], [73.7, 30787.0], [73.8, 30787.0], [73.9, 30787.0], [74.0, 30814.0], [74.1, 30814.0], [74.2, 30814.0], [74.3, 30814.0], [74.4, 30814.0], [74.5, 30876.0], [74.6, 30876.0], [74.7, 30876.0], [74.8, 30876.0], [74.9, 30876.0], [75.0, 30891.0], [75.1, 30891.0], [75.2, 30891.0], [75.3, 30891.0], [75.4, 30891.0], [75.5, 30965.0], [75.6, 30965.0], [75.7, 30965.0], [75.8, 30965.0], [75.9, 30965.0], [76.0, 30970.0], [76.1, 30970.0], [76.2, 30970.0], [76.3, 30970.0], [76.4, 30970.0], [76.5, 30986.0], [76.6, 30986.0], [76.7, 30986.0], [76.8, 30986.0], [76.9, 30986.0], [77.0, 31017.0], [77.1, 31017.0], [77.2, 31017.0], [77.3, 31017.0], [77.4, 31017.0], [77.5, 31034.0], [77.6, 31034.0], [77.7, 31034.0], [77.8, 31034.0], [77.9, 31034.0], [78.0, 31036.0], [78.1, 31036.0], [78.2, 31036.0], [78.3, 31036.0], [78.4, 31036.0], [78.5, 31038.0], [78.6, 31038.0], [78.7, 31038.0], [78.8, 31038.0], [78.9, 31038.0], [79.0, 31073.0], [79.1, 31073.0], [79.2, 31073.0], [79.3, 31073.0], [79.4, 31073.0], [79.5, 31099.0], [79.6, 31099.0], [79.7, 31099.0], [79.8, 31099.0], [79.9, 31099.0], [80.0, 31174.0], [80.1, 31174.0], [80.2, 31174.0], [80.3, 31174.0], [80.4, 31174.0], [80.5, 31194.0], [80.6, 31194.0], [80.7, 31194.0], [80.8, 31194.0], [80.9, 31194.0], [81.0, 31223.0], [81.1, 31223.0], [81.2, 31223.0], [81.3, 31223.0], [81.4, 31223.0], [81.5, 31262.0], [81.6, 31262.0], [81.7, 31262.0], [81.8, 31262.0], [81.9, 31262.0], [82.0, 31279.0], [82.1, 31279.0], [82.2, 31279.0], [82.3, 31279.0], [82.4, 31279.0], [82.5, 31308.0], [82.6, 31308.0], [82.7, 31308.0], [82.8, 31308.0], [82.9, 31308.0], [83.0, 31385.0], [83.1, 31385.0], [83.2, 31385.0], [83.3, 31385.0], [83.4, 31385.0], [83.5, 31445.0], [83.6, 31445.0], [83.7, 31445.0], [83.8, 31445.0], [83.9, 31445.0], [84.0, 31517.0], [84.1, 31517.0], [84.2, 31517.0], [84.3, 31517.0], [84.4, 31517.0], [84.5, 31564.0], [84.6, 31564.0], [84.7, 31564.0], [84.8, 31564.0], [84.9, 31564.0], [85.0, 31641.0], [85.1, 31641.0], [85.2, 31641.0], [85.3, 31641.0], [85.4, 31641.0], [85.5, 31740.0], [85.6, 31740.0], [85.7, 31740.0], [85.8, 31740.0], [85.9, 31740.0], [86.0, 31750.0], [86.1, 31750.0], [86.2, 31750.0], [86.3, 31750.0], [86.4, 31750.0], [86.5, 31850.0], [86.6, 31850.0], [86.7, 31850.0], [86.8, 31850.0], [86.9, 31850.0], [87.0, 31871.0], [87.1, 31871.0], [87.2, 31871.0], [87.3, 31871.0], [87.4, 31871.0], [87.5, 31892.0], [87.6, 31892.0], [87.7, 31892.0], [87.8, 31892.0], [87.9, 31892.0], [88.0, 31933.0], [88.1, 31933.0], [88.2, 31933.0], [88.3, 31933.0], [88.4, 31933.0], [88.5, 31940.0], [88.6, 31940.0], [88.7, 31940.0], [88.8, 31940.0], [88.9, 31940.0], [89.0, 31969.0], [89.1, 31969.0], [89.2, 31969.0], [89.3, 31969.0], [89.4, 31969.0], [89.5, 32132.0], [89.6, 32132.0], [89.7, 32132.0], [89.8, 32132.0], [89.9, 32132.0], [90.0, 32144.0], [90.1, 32144.0], [90.2, 32144.0], [90.3, 32144.0], [90.4, 32144.0], [90.5, 32190.0], [90.6, 32190.0], [90.7, 32190.0], [90.8, 32190.0], [90.9, 32190.0], [91.0, 32447.0], [91.1, 32447.0], [91.2, 32447.0], [91.3, 32447.0], [91.4, 32447.0], [91.5, 32544.0], [91.6, 32544.0], [91.7, 32544.0], [91.8, 32544.0], [91.9, 32544.0], [92.0, 32553.0], [92.1, 32553.0], [92.2, 32553.0], [92.3, 32553.0], [92.4, 32553.0], [92.5, 32765.0], [92.6, 32765.0], [92.7, 32765.0], [92.8, 32765.0], [92.9, 32765.0], [93.0, 32772.0], [93.1, 32772.0], [93.2, 32772.0], [93.3, 32772.0], [93.4, 32772.0], [93.5, 32994.0], [93.6, 32994.0], [93.7, 32994.0], [93.8, 32994.0], [93.9, 32994.0], [94.0, 33066.0], [94.1, 33066.0], [94.2, 33066.0], [94.3, 33066.0], [94.4, 33066.0], [94.5, 33142.0], [94.6, 33142.0], [94.7, 33142.0], [94.8, 33142.0], [94.9, 33142.0], [95.0, 33555.0], [95.1, 33555.0], [95.2, 33555.0], [95.3, 33555.0], [95.4, 33555.0], [95.5, 33676.0], [95.6, 33676.0], [95.7, 33676.0], [95.8, 33676.0], [95.9, 33676.0], [96.0, 33913.0], [96.1, 33913.0], [96.2, 33913.0], [96.3, 33913.0], [96.4, 33913.0], [96.5, 34054.0], [96.6, 34054.0], [96.7, 34054.0], [96.8, 34054.0], [96.9, 34054.0], [97.0, 34232.0], [97.1, 34232.0], [97.2, 34232.0], [97.3, 34232.0], [97.4, 34232.0], [97.5, 34376.0], [97.6, 34376.0], [97.7, 34376.0], [97.8, 34376.0], [97.9, 34376.0], [98.0, 34532.0], [98.1, 34532.0], [98.2, 34532.0], [98.3, 34532.0], [98.4, 34532.0], [98.5, 34560.0], [98.6, 34560.0], [98.7, 34560.0], [98.8, 34560.0], [98.9, 34560.0], [99.0, 34957.0], [99.1, 34957.0], [99.2, 34957.0], [99.3, 34957.0], [99.4, 34957.0], [99.5, 36173.0], [99.6, 36173.0], [99.7, 36173.0], [99.8, 36173.0], [99.9, 36173.0]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[0.0, 11527.0], [0.1, 11527.0], [0.2, 11527.0], [0.3, 11527.0], [0.4, 11527.0], [0.5, 11775.0], [0.6, 11775.0], [0.7, 11775.0], [0.8, 11775.0], [0.9, 11775.0], [1.0, 13183.0], [1.1, 13183.0], [1.2, 13183.0], [1.3, 13183.0], [1.4, 13183.0], [1.5, 13330.0], [1.6, 13330.0], [1.7, 13330.0], [1.8, 13330.0], [1.9, 13330.0], [2.0, 13775.0], [2.1, 13775.0], [2.2, 13775.0], [2.3, 13775.0], [2.4, 13775.0], [2.5, 14850.0], [2.6, 14850.0], [2.7, 14850.0], [2.8, 14850.0], [2.9, 14850.0], [3.0, 16149.0], [3.1, 16149.0], [3.2, 16149.0], [3.3, 16149.0], [3.4, 16149.0], [3.5, 16315.0], [3.6, 16315.0], [3.7, 16315.0], [3.8, 16315.0], [3.9, 16315.0], [4.0, 16728.0], [4.1, 16728.0], [4.2, 16728.0], [4.3, 16728.0], [4.4, 16728.0], [4.5, 17079.0], [4.6, 17079.0], [4.7, 17079.0], [4.8, 17079.0], [4.9, 17079.0], [5.0, 18121.0], [5.1, 18121.0], [5.2, 18121.0], [5.3, 18121.0], [5.4, 18121.0], [5.5, 18151.0], [5.6, 18151.0], [5.7, 18151.0], [5.8, 18151.0], [5.9, 18151.0], [6.0, 18335.0], [6.1, 18335.0], [6.2, 18335.0], [6.3, 18335.0], [6.4, 18335.0], [6.5, 19161.0], [6.6, 19161.0], [6.7, 19161.0], [6.8, 19161.0], [6.9, 19161.0], [7.0, 19473.0], [7.1, 19473.0], [7.2, 19473.0], [7.3, 19473.0], [7.4, 19473.0], [7.5, 19841.0], [7.6, 19841.0], [7.7, 19841.0], [7.8, 19841.0], [7.9, 19841.0], [8.0, 24445.0], [8.1, 24445.0], [8.2, 24445.0], [8.3, 24445.0], [8.4, 24445.0], [8.5, 28936.0], [8.6, 28936.0], [8.7, 28936.0], [8.8, 28936.0], [8.9, 28936.0], [9.0, 30355.0], [9.1, 30355.0], [9.2, 30355.0], [9.3, 30355.0], [9.4, 30355.0], [9.5, 33457.0], [9.6, 33457.0], [9.7, 33457.0], [9.8, 33457.0], [9.9, 33457.0], [10.0, 33510.0], [10.1, 33510.0], [10.2, 33510.0], [10.3, 33510.0], [10.4, 33510.0], [10.5, 34139.0], [10.6, 34139.0], [10.7, 34139.0], [10.8, 34139.0], [10.9, 34139.0], [11.0, 34153.0], [11.1, 34153.0], [11.2, 34153.0], [11.3, 34153.0], [11.4, 34153.0], [11.5, 34405.0], [11.6, 34405.0], [11.7, 34405.0], [11.8, 34405.0], [11.9, 34405.0], [12.0, 34884.0], [12.1, 34884.0], [12.2, 34884.0], [12.3, 34884.0], [12.4, 34884.0], [12.5, 35427.0], [12.6, 35427.0], [12.7, 35427.0], [12.8, 35427.0], [12.9, 35427.0], [13.0, 35784.0], [13.1, 35784.0], [13.2, 35784.0], [13.3, 35784.0], [13.4, 35784.0], [13.5, 35935.0], [13.6, 35935.0], [13.7, 35935.0], [13.8, 35935.0], [13.9, 35935.0], [14.0, 36634.0], [14.1, 36634.0], [14.2, 36634.0], [14.3, 36634.0], [14.4, 36634.0], [14.5, 36801.0], [14.6, 36801.0], [14.7, 36801.0], [14.8, 36801.0], [14.9, 36801.0], [15.0, 36809.0], [15.1, 36809.0], [15.2, 36809.0], [15.3, 36809.0], [15.4, 36809.0], [15.5, 36831.0], [15.6, 36831.0], [15.7, 36831.0], [15.8, 36831.0], [15.9, 36831.0], [16.0, 36871.0], [16.1, 36871.0], [16.2, 36871.0], [16.3, 36871.0], [16.4, 36871.0], [16.5, 37269.0], [16.6, 37269.0], [16.7, 37269.0], [16.8, 37269.0], [16.9, 37269.0], [17.0, 37273.0], [17.1, 37273.0], [17.2, 37273.0], [17.3, 37273.0], [17.4, 37273.0], [17.5, 37345.0], [17.6, 37345.0], [17.7, 37345.0], [17.8, 37345.0], [17.9, 37345.0], [18.0, 37399.0], [18.1, 37399.0], [18.2, 37399.0], [18.3, 37399.0], [18.4, 37399.0], [18.5, 37503.0], [18.6, 37503.0], [18.7, 37503.0], [18.8, 37503.0], [18.9, 37503.0], [19.0, 37578.0], [19.1, 37578.0], [19.2, 37578.0], [19.3, 37578.0], [19.4, 37578.0], [19.5, 37583.0], [19.6, 37583.0], [19.7, 37583.0], [19.8, 37583.0], [19.9, 37583.0], [20.0, 37646.0], [20.1, 37646.0], [20.2, 37646.0], [20.3, 37646.0], [20.4, 37646.0], [20.5, 37695.0], [20.6, 37695.0], [20.7, 37695.0], [20.8, 37695.0], [20.9, 37695.0], [21.0, 37706.0], [21.1, 37706.0], [21.2, 37706.0], [21.3, 37706.0], [21.4, 37706.0], [21.5, 37772.0], [21.6, 37772.0], [21.7, 37772.0], [21.8, 37772.0], [21.9, 37772.0], [22.0, 37782.0], [22.1, 37782.0], [22.2, 37782.0], [22.3, 37782.0], [22.4, 37782.0], [22.5, 37785.0], [22.6, 37785.0], [22.7, 37785.0], [22.8, 37785.0], [22.9, 37785.0], [23.0, 37791.0], [23.1, 37791.0], [23.2, 37791.0], [23.3, 37791.0], [23.4, 37791.0], [23.5, 37859.0], [23.6, 37859.0], [23.7, 37859.0], [23.8, 37859.0], [23.9, 37859.0], [24.0, 37881.0], [24.1, 37881.0], [24.2, 37881.0], [24.3, 37881.0], [24.4, 37881.0], [24.5, 37890.0], [24.6, 37890.0], [24.7, 37890.0], [24.8, 37890.0], [24.9, 37890.0], [25.0, 37953.0], [25.1, 37953.0], [25.2, 37953.0], [25.3, 37953.0], [25.4, 37953.0], [25.5, 38028.0], [25.6, 38028.0], [25.7, 38028.0], [25.8, 38028.0], [25.9, 38028.0], [26.0, 38202.0], [26.1, 38202.0], [26.2, 38202.0], [26.3, 38202.0], [26.4, 38202.0], [26.5, 38394.0], [26.6, 38394.0], [26.7, 38394.0], [26.8, 38394.0], [26.9, 38394.0], [27.0, 38437.0], [27.1, 38437.0], [27.2, 38437.0], [27.3, 38437.0], [27.4, 38437.0], [27.5, 38654.0], [27.6, 38654.0], [27.7, 38654.0], [27.8, 38654.0], [27.9, 38654.0], [28.0, 38921.0], [28.1, 38921.0], [28.2, 38921.0], [28.3, 38921.0], [28.4, 38921.0], [28.5, 39068.0], [28.6, 39068.0], [28.7, 39068.0], [28.8, 39068.0], [28.9, 39068.0], [29.0, 39372.0], [29.1, 39372.0], [29.2, 39372.0], [29.3, 39372.0], [29.4, 39372.0], [29.5, 39616.0], [29.6, 39616.0], [29.7, 39616.0], [29.8, 39616.0], [29.9, 39616.0], [30.0, 39856.0], [30.1, 39856.0], [30.2, 39856.0], [30.3, 39856.0], [30.4, 39856.0], [30.5, 40058.0], [30.6, 40058.0], [30.7, 40058.0], [30.8, 40058.0], [30.9, 40058.0], [31.0, 40305.0], [31.1, 40305.0], [31.2, 40305.0], [31.3, 40305.0], [31.4, 40305.0], [31.5, 40417.0], [31.6, 40417.0], [31.7, 40417.0], [31.8, 40417.0], [31.9, 40417.0], [32.0, 40491.0], [32.1, 40491.0], [32.2, 40491.0], [32.3, 40491.0], [32.4, 40491.0], [32.5, 40814.0], [32.6, 40814.0], [32.7, 40814.0], [32.8, 40814.0], [32.9, 40814.0], [33.0, 40951.0], [33.1, 40951.0], [33.2, 40951.0], [33.3, 40951.0], [33.4, 40951.0], [33.5, 41061.0], [33.6, 41061.0], [33.7, 41061.0], [33.8, 41061.0], [33.9, 41061.0], [34.0, 41163.0], [34.1, 41163.0], [34.2, 41163.0], [34.3, 41163.0], [34.4, 41163.0], [34.5, 41301.0], [34.6, 41301.0], [34.7, 41301.0], [34.8, 41301.0], [34.9, 41301.0], [35.0, 41359.0], [35.1, 41359.0], [35.2, 41359.0], [35.3, 41359.0], [35.4, 41359.0], [35.5, 41381.0], [35.6, 41381.0], [35.7, 41381.0], [35.8, 41381.0], [35.9, 41381.0], [36.0, 41385.0], [36.1, 41385.0], [36.2, 41385.0], [36.3, 41385.0], [36.4, 41385.0], [36.5, 41430.0], [36.6, 41430.0], [36.7, 41430.0], [36.8, 41430.0], [36.9, 41430.0], [37.0, 41620.0], [37.1, 41620.0], [37.2, 41620.0], [37.3, 41620.0], [37.4, 41620.0], [37.5, 41711.0], [37.6, 41711.0], [37.7, 41711.0], [37.8, 41711.0], [37.9, 41711.0], [38.0, 41714.0], [38.1, 41714.0], [38.2, 41714.0], [38.3, 41714.0], [38.4, 41714.0], [38.5, 41725.0], [38.6, 41725.0], [38.7, 41725.0], [38.8, 41725.0], [38.9, 41725.0], [39.0, 41760.0], [39.1, 41760.0], [39.2, 41760.0], [39.3, 41760.0], [39.4, 41760.0], [39.5, 41854.0], [39.6, 41854.0], [39.7, 41854.0], [39.8, 41854.0], [39.9, 41854.0], [40.0, 41977.0], [40.1, 41977.0], [40.2, 41977.0], [40.3, 41977.0], [40.4, 41977.0], [40.5, 41982.0], [40.6, 41982.0], [40.7, 41982.0], [40.8, 41982.0], [40.9, 41982.0], [41.0, 41982.0], [41.1, 41982.0], [41.2, 41982.0], [41.3, 41982.0], [41.4, 41982.0], [41.5, 41988.0], [41.6, 41988.0], [41.7, 41988.0], [41.8, 41988.0], [41.9, 41988.0], [42.0, 42012.0], [42.1, 42012.0], [42.2, 42012.0], [42.3, 42012.0], [42.4, 42012.0], [42.5, 42224.0], [42.6, 42224.0], [42.7, 42224.0], [42.8, 42224.0], [42.9, 42224.0], [43.0, 42317.0], [43.1, 42317.0], [43.2, 42317.0], [43.3, 42317.0], [43.4, 42317.0], [43.5, 42321.0], [43.6, 42321.0], [43.7, 42321.0], [43.8, 42321.0], [43.9, 42321.0], [44.0, 42351.0], [44.1, 42351.0], [44.2, 42351.0], [44.3, 42351.0], [44.4, 42351.0], [44.5, 42391.0], [44.6, 42391.0], [44.7, 42391.0], [44.8, 42391.0], [44.9, 42391.0], [45.0, 42414.0], [45.1, 42414.0], [45.2, 42414.0], [45.3, 42414.0], [45.4, 42414.0], [45.5, 42426.0], [45.6, 42426.0], [45.7, 42426.0], [45.8, 42426.0], [45.9, 42426.0], [46.0, 42500.0], [46.1, 42500.0], [46.2, 42500.0], [46.3, 42500.0], [46.4, 42500.0], [46.5, 42523.0], [46.6, 42523.0], [46.7, 42523.0], [46.8, 42523.0], [46.9, 42523.0], [47.0, 42622.0], [47.1, 42622.0], [47.2, 42622.0], [47.3, 42622.0], [47.4, 42622.0], [47.5, 42637.0], [47.6, 42637.0], [47.7, 42637.0], [47.8, 42637.0], [47.9, 42637.0], [48.0, 42954.0], [48.1, 42954.0], [48.2, 42954.0], [48.3, 42954.0], [48.4, 42954.0], [48.5, 43118.0], [48.6, 43118.0], [48.7, 43118.0], [48.8, 43118.0], [48.9, 43118.0], [49.0, 43256.0], [49.1, 43256.0], [49.2, 43256.0], [49.3, 43256.0], [49.4, 43256.0], [49.5, 43634.0], [49.6, 43634.0], [49.7, 43634.0], [49.8, 43634.0], [49.9, 43634.0], [50.0, 43717.0], [50.1, 43717.0], [50.2, 43717.0], [50.3, 43717.0], [50.4, 43717.0], [50.5, 45396.0], [50.6, 45396.0], [50.7, 45396.0], [50.8, 45396.0], [50.9, 45396.0], [51.0, 46062.0], [51.1, 46062.0], [51.2, 46062.0], [51.3, 46062.0], [51.4, 46062.0], [51.5, 46116.0], [51.6, 46116.0], [51.7, 46116.0], [51.8, 46116.0], [51.9, 46116.0], [52.0, 47956.0], [52.1, 47956.0], [52.2, 47956.0], [52.3, 47956.0], [52.4, 47956.0], [52.5, 49724.0], [52.6, 49724.0], [52.7, 49724.0], [52.8, 49724.0], [52.9, 49724.0], [53.0, 52455.0], [53.1, 52455.0], [53.2, 52455.0], [53.3, 52455.0], [53.4, 52455.0], [53.5, 52813.0], [53.6, 52813.0], [53.7, 52813.0], [53.8, 52813.0], [53.9, 52813.0], [54.0, 53011.0], [54.1, 53011.0], [54.2, 53011.0], [54.3, 53011.0], [54.4, 53011.0], [54.5, 53343.0], [54.6, 53343.0], [54.7, 53343.0], [54.8, 53343.0], [54.9, 53343.0], [55.0, 53846.0], [55.1, 53846.0], [55.2, 53846.0], [55.3, 53846.0], [55.4, 53846.0], [55.5, 54085.0], [55.6, 54085.0], [55.7, 54085.0], [55.8, 54085.0], [55.9, 54085.0], [56.0, 54338.0], [56.1, 54338.0], [56.2, 54338.0], [56.3, 54338.0], [56.4, 54338.0], [56.5, 54408.0], [56.6, 54408.0], [56.7, 54408.0], [56.8, 54408.0], [56.9, 54408.0], [57.0, 54464.0], [57.1, 54464.0], [57.2, 54464.0], [57.3, 54464.0], [57.4, 54464.0], [57.5, 54485.0], [57.6, 54485.0], [57.7, 54485.0], [57.8, 54485.0], [57.9, 54485.0], [58.0, 54579.0], [58.1, 54579.0], [58.2, 54579.0], [58.3, 54579.0], [58.4, 54579.0], [58.5, 54627.0], [58.6, 54627.0], [58.7, 54627.0], [58.8, 54627.0], [58.9, 54627.0], [59.0, 54734.0], [59.1, 54734.0], [59.2, 54734.0], [59.3, 54734.0], [59.4, 54734.0], [59.5, 54746.0], [59.6, 54746.0], [59.7, 54746.0], [59.8, 54746.0], [59.9, 54746.0], [60.0, 55072.0], [60.1, 55072.0], [60.2, 55072.0], [60.3, 55072.0], [60.4, 55072.0], [60.5, 55146.0], [60.6, 55146.0], [60.7, 55146.0], [60.8, 55146.0], [60.9, 55146.0], [61.0, 55223.0], [61.1, 55223.0], [61.2, 55223.0], [61.3, 55223.0], [61.4, 55223.0], [61.5, 55646.0], [61.6, 55646.0], [61.7, 55646.0], [61.8, 55646.0], [61.9, 55646.0], [62.0, 55665.0], [62.1, 55665.0], [62.2, 55665.0], [62.3, 55665.0], [62.4, 55665.0], [62.5, 55810.0], [62.6, 55810.0], [62.7, 55810.0], [62.8, 55810.0], [62.9, 55810.0], [63.0, 55857.0], [63.1, 55857.0], [63.2, 55857.0], [63.3, 55857.0], [63.4, 55857.0], [63.5, 55932.0], [63.6, 55932.0], [63.7, 55932.0], [63.8, 55932.0], [63.9, 55932.0], [64.0, 56095.0], [64.1, 56095.0], [64.2, 56095.0], [64.3, 56095.0], [64.4, 56095.0], [64.5, 56167.0], [64.6, 56167.0], [64.7, 56167.0], [64.8, 56167.0], [64.9, 56167.0], [65.0, 56341.0], [65.1, 56341.0], [65.2, 56341.0], [65.3, 56341.0], [65.4, 56341.0], [65.5, 56379.0], [65.6, 56379.0], [65.7, 56379.0], [65.8, 56379.0], [65.9, 56379.0], [66.0, 56383.0], [66.1, 56383.0], [66.2, 56383.0], [66.3, 56383.0], [66.4, 56383.0], [66.5, 56385.0], [66.6, 56385.0], [66.7, 56385.0], [66.8, 56385.0], [66.9, 56385.0], [67.0, 56498.0], [67.1, 56498.0], [67.2, 56498.0], [67.3, 56498.0], [67.4, 56498.0], [67.5, 56571.0], [67.6, 56571.0], [67.7, 56571.0], [67.8, 56571.0], [67.9, 56571.0], [68.0, 56590.0], [68.1, 56590.0], [68.2, 56590.0], [68.3, 56590.0], [68.4, 56590.0], [68.5, 56699.0], [68.6, 56699.0], [68.7, 56699.0], [68.8, 56699.0], [68.9, 56699.0], [69.0, 56729.0], [69.1, 56729.0], [69.2, 56729.0], [69.3, 56729.0], [69.4, 56729.0], [69.5, 56730.0], [69.6, 56730.0], [69.7, 56730.0], [69.8, 56730.0], [69.9, 56730.0], [70.0, 56779.0], [70.1, 56779.0], [70.2, 56779.0], [70.3, 56779.0], [70.4, 56779.0], [70.5, 56793.0], [70.6, 56793.0], [70.7, 56793.0], [70.8, 56793.0], [70.9, 56793.0], [71.0, 56804.0], [71.1, 56804.0], [71.2, 56804.0], [71.3, 56804.0], [71.4, 56804.0], [71.5, 56853.0], [71.6, 56853.0], [71.7, 56853.0], [71.8, 56853.0], [71.9, 56853.0], [72.0, 56949.0], [72.1, 56949.0], [72.2, 56949.0], [72.3, 56949.0], [72.4, 56949.0], [72.5, 56953.0], [72.6, 56953.0], [72.7, 56953.0], [72.8, 56953.0], [72.9, 56953.0], [73.0, 57082.0], [73.1, 57082.0], [73.2, 57082.0], [73.3, 57082.0], [73.4, 57082.0], [73.5, 57239.0], [73.6, 57239.0], [73.7, 57239.0], [73.8, 57239.0], [73.9, 57239.0], [74.0, 57417.0], [74.1, 57417.0], [74.2, 57417.0], [74.3, 57417.0], [74.4, 57417.0], [74.5, 57456.0], [74.6, 57456.0], [74.7, 57456.0], [74.8, 57456.0], [74.9, 57456.0], [75.0, 57487.0], [75.1, 57487.0], [75.2, 57487.0], [75.3, 57487.0], [75.4, 57487.0], [75.5, 57544.0], [75.6, 57544.0], [75.7, 57544.0], [75.8, 57544.0], [75.9, 57544.0], [76.0, 57579.0], [76.1, 57579.0], [76.2, 57579.0], [76.3, 57579.0], [76.4, 57579.0], [76.5, 57677.0], [76.6, 57677.0], [76.7, 57677.0], [76.8, 57677.0], [76.9, 57677.0], [77.0, 57844.0], [77.1, 57844.0], [77.2, 57844.0], [77.3, 57844.0], [77.4, 57844.0], [77.5, 57958.0], [77.6, 57958.0], [77.7, 57958.0], [77.8, 57958.0], [77.9, 57958.0], [78.0, 58054.0], [78.1, 58054.0], [78.2, 58054.0], [78.3, 58054.0], [78.4, 58054.0], [78.5, 58080.0], [78.6, 58080.0], [78.7, 58080.0], [78.8, 58080.0], [78.9, 58080.0], [79.0, 58081.0], [79.1, 58081.0], [79.2, 58081.0], [79.3, 58081.0], [79.4, 58081.0], [79.5, 58149.0], [79.6, 58149.0], [79.7, 58149.0], [79.8, 58149.0], [79.9, 58149.0], [80.0, 58253.0], [80.1, 58253.0], [80.2, 58253.0], [80.3, 58253.0], [80.4, 58253.0], [80.5, 58308.0], [80.6, 58308.0], [80.7, 58308.0], [80.8, 58308.0], [80.9, 58308.0], [81.0, 58345.0], [81.1, 58345.0], [81.2, 58345.0], [81.3, 58345.0], [81.4, 58345.0], [81.5, 58360.0], [81.6, 58360.0], [81.7, 58360.0], [81.8, 58360.0], [81.9, 58360.0], [82.0, 58360.0], [82.1, 58360.0], [82.2, 58360.0], [82.3, 58360.0], [82.4, 58360.0], [82.5, 58373.0], [82.6, 58373.0], [82.7, 58373.0], [82.8, 58373.0], [82.9, 58373.0], [83.0, 58468.0], [83.1, 58468.0], [83.2, 58468.0], [83.3, 58468.0], [83.4, 58468.0], [83.5, 58524.0], [83.6, 58524.0], [83.7, 58524.0], [83.8, 58524.0], [83.9, 58524.0], [84.0, 58544.0], [84.1, 58544.0], [84.2, 58544.0], [84.3, 58544.0], [84.4, 58544.0], [84.5, 58637.0], [84.6, 58637.0], [84.7, 58637.0], [84.8, 58637.0], [84.9, 58637.0], [85.0, 58660.0], [85.1, 58660.0], [85.2, 58660.0], [85.3, 58660.0], [85.4, 58660.0], [85.5, 58919.0], [85.6, 58919.0], [85.7, 58919.0], [85.8, 58919.0], [85.9, 58919.0], [86.0, 58953.0], [86.1, 58953.0], [86.2, 58953.0], [86.3, 58953.0], [86.4, 58953.0], [86.5, 59060.0], [86.6, 59060.0], [86.7, 59060.0], [86.8, 59060.0], [86.9, 59060.0], [87.0, 59116.0], [87.1, 59116.0], [87.2, 59116.0], [87.3, 59116.0], [87.4, 59116.0], [87.5, 59225.0], [87.6, 59225.0], [87.7, 59225.0], [87.8, 59225.0], [87.9, 59225.0], [88.0, 59260.0], [88.1, 59260.0], [88.2, 59260.0], [88.3, 59260.0], [88.4, 59260.0], [88.5, 59434.0], [88.6, 59434.0], [88.7, 59434.0], [88.8, 59434.0], [88.9, 59434.0], [89.0, 59497.0], [89.1, 59497.0], [89.2, 59497.0], [89.3, 59497.0], [89.4, 59497.0], [89.5, 59526.0], [89.6, 59526.0], [89.7, 59526.0], [89.8, 59526.0], [89.9, 59526.0], [90.0, 59553.0], [90.1, 59553.0], [90.2, 59553.0], [90.3, 59553.0], [90.4, 59553.0], [90.5, 59596.0], [90.6, 59596.0], [90.7, 59596.0], [90.8, 59596.0], [90.9, 59596.0], [91.0, 59608.0], [91.1, 59608.0], [91.2, 59608.0], [91.3, 59608.0], [91.4, 59608.0], [91.5, 59616.0], [91.6, 59616.0], [91.7, 59616.0], [91.8, 59616.0], [91.9, 59616.0], [92.0, 59781.0], [92.1, 59781.0], [92.2, 59781.0], [92.3, 59781.0], [92.4, 59781.0], [92.5, 59852.0], [92.6, 59852.0], [92.7, 59852.0], [92.8, 59852.0], [92.9, 59852.0], [93.0, 59903.0], [93.1, 59903.0], [93.2, 59903.0], [93.3, 59903.0], [93.4, 59903.0], [93.5, 59944.0], [93.6, 59944.0], [93.7, 59944.0], [93.8, 59944.0], [93.9, 59944.0], [94.0, 60018.0], [94.1, 60018.0], [94.2, 60018.0], [94.3, 60018.0], [94.4, 60018.0], [94.5, 60099.0], [94.6, 60099.0], [94.7, 60099.0], [94.8, 60099.0], [94.9, 60099.0], [95.0, 60114.0], [95.1, 60114.0], [95.2, 60114.0], [95.3, 60114.0], [95.4, 60114.0], [95.5, 60134.0], [95.6, 60134.0], [95.7, 60134.0], [95.8, 60134.0], [95.9, 60134.0], [96.0, 60138.0], [96.1, 60138.0], [96.2, 60138.0], [96.3, 60138.0], [96.4, 60138.0], [96.5, 60138.0], [96.6, 60138.0], [96.7, 60138.0], [96.8, 60138.0], [96.9, 60138.0], [97.0, 60171.0], [97.1, 60171.0], [97.2, 60171.0], [97.3, 60171.0], [97.4, 60171.0], [97.5, 60176.0], [97.6, 60176.0], [97.7, 60176.0], [97.8, 60176.0], [97.9, 60176.0], [98.0, 60580.0], [98.1, 60580.0], [98.2, 60580.0], [98.3, 60580.0], [98.4, 60580.0], [98.5, 60749.0], [98.6, 60749.0], [98.7, 60749.0], [98.8, 60749.0], [98.9, 60749.0], [99.0, 60807.0], [99.1, 60807.0], [99.2, 60807.0], [99.3, 60807.0], [99.4, 60807.0], [99.5, 61307.0], [99.6, 61307.0], [99.7, 61307.0], [99.8, 61307.0], [99.9, 61307.0]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 200.0, "series": [{"data": [[0.0, 200.0]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[33100.0, 1.0], [2500.0, 1.0], [2800.0, 2.0], [2900.0, 2.0], [3000.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3400.0, 1.0], [3500.0, 2.0], [3700.0, 1.0], [4300.0, 1.0], [4100.0, 1.0], [4400.0, 1.0], [4600.0, 1.0], [4700.0, 2.0], [5000.0, 1.0], [5300.0, 1.0], [5400.0, 2.0], [5500.0, 1.0], [5600.0, 1.0], [5700.0, 1.0], [5800.0, 1.0], [5900.0, 2.0], [6000.0, 1.0], [6300.0, 2.0], [6500.0, 1.0], [7000.0, 2.0], [7100.0, 1.0], [7300.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7700.0, 3.0], [7800.0, 4.0], [8700.0, 2.0], [8400.0, 2.0], [8200.0, 1.0], [8500.0, 3.0], [8600.0, 1.0], [8800.0, 1.0], [9700.0, 1.0], [9900.0, 1.0], [10100.0, 1.0], [10400.0, 2.0], [10300.0, 1.0], [10700.0, 1.0], [10900.0, 2.0], [11100.0, 2.0], [11200.0, 1.0], [11400.0, 1.0], [11700.0, 2.0], [12000.0, 2.0], [11900.0, 2.0], [11800.0, 2.0], [12200.0, 3.0], [12100.0, 1.0], [12400.0, 4.0], [12300.0, 1.0], [12500.0, 1.0], [13000.0, 3.0], [13200.0, 4.0], [13100.0, 2.0], [12900.0, 3.0], [12800.0, 2.0], [13400.0, 1.0], [13800.0, 1.0], [13500.0, 2.0], [13700.0, 1.0], [16600.0, 1.0], [16900.0, 1.0], [17800.0, 1.0], [19400.0, 1.0], [19600.0, 1.0], [20300.0, 1.0], [21800.0, 1.0], [22100.0, 1.0], [22800.0, 1.0], [23500.0, 1.0], [23700.0, 1.0], [23900.0, 1.0], [24100.0, 1.0], [24500.0, 1.0], [24300.0, 1.0], [24600.0, 1.0], [25000.0, 2.0], [26300.0, 1.0], [27000.0, 1.0], [27400.0, 2.0], [27500.0, 1.0], [27600.0, 5.0], [27900.0, 2.0], [27700.0, 3.0], [28100.0, 3.0], [27800.0, 1.0], [28000.0, 1.0], [28200.0, 1.0], [28500.0, 2.0], [28400.0, 3.0], [28600.0, 2.0], [28900.0, 3.0], [28700.0, 5.0], [29000.0, 7.0], [28800.0, 2.0], [29200.0, 6.0], [29400.0, 7.0], [29300.0, 3.0], [29500.0, 4.0], [29100.0, 3.0], [29700.0, 4.0], [29800.0, 1.0], [29900.0, 2.0], [30000.0, 1.0]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[8900.0, 2.0], [10300.0, 2.0], [10800.0, 1.0], [11600.0, 1.0], [12700.0, 1.0], [12900.0, 1.0], [13000.0, 1.0], [13800.0, 1.0], [14000.0, 1.0], [13900.0, 1.0], [14800.0, 1.0], [14700.0, 1.0], [15000.0, 1.0], [15800.0, 1.0], [19600.0, 1.0], [24200.0, 1.0], [25200.0, 2.0], [25400.0, 3.0], [25300.0, 2.0], [25500.0, 1.0], [26100.0, 1.0], [25700.0, 1.0], [27500.0, 2.0], [27000.0, 2.0], [27400.0, 2.0], [27600.0, 3.0], [27200.0, 1.0], [27100.0, 1.0], [27900.0, 1.0], [28100.0, 4.0], [28300.0, 6.0], [28200.0, 5.0], [28500.0, 6.0], [28000.0, 4.0], [27800.0, 1.0], [28400.0, 5.0], [28600.0, 3.0], [28900.0, 4.0], [29100.0, 4.0], [29600.0, 4.0], [29000.0, 9.0], [28700.0, 5.0], [28800.0, 6.0], [29200.0, 2.0], [29400.0, 1.0], [29500.0, 3.0], [29700.0, 3.0], [30200.0, 7.0], [30700.0, 4.0], [30000.0, 2.0], [30400.0, 2.0], [30300.0, 4.0], [29900.0, 5.0], [30100.0, 3.0], [29800.0, 4.0], [30600.0, 2.0], [30800.0, 3.0], [31200.0, 3.0], [31300.0, 2.0], [31100.0, 2.0], [31700.0, 2.0], [30900.0, 3.0], [31600.0, 1.0], [31500.0, 2.0], [31000.0, 6.0], [31400.0, 1.0], [31900.0, 3.0], [32500.0, 2.0], [32700.0, 2.0], [32100.0, 3.0], [32400.0, 1.0], [31800.0, 3.0], [34500.0, 2.0], [33100.0, 1.0], [33000.0, 1.0], [33900.0, 1.0], [33500.0, 1.0], [32900.0, 1.0], [34200.0, 1.0], [34000.0, 1.0], [34300.0, 1.0], [33600.0, 1.0], [34900.0, 1.0], [36100.0, 1.0]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[33500.0, 1.0], [34100.0, 2.0], [35700.0, 1.0], [35900.0, 1.0], [37300.0, 2.0], [37700.0, 5.0], [37500.0, 3.0], [37900.0, 1.0], [38300.0, 1.0], [38900.0, 1.0], [39300.0, 1.0], [40300.0, 1.0], [40900.0, 1.0], [41900.0, 4.0], [41300.0, 4.0], [41700.0, 4.0], [42900.0, 1.0], [42500.0, 2.0], [42300.0, 4.0], [41100.0, 1.0], [43100.0, 1.0], [43700.0, 1.0], [45300.0, 1.0], [46100.0, 1.0], [47900.0, 1.0], [49700.0, 1.0], [53300.0, 1.0], [54700.0, 2.0], [55100.0, 1.0], [54500.0, 1.0], [54300.0, 1.0], [56900.0, 2.0], [56300.0, 4.0], [55900.0, 1.0], [56700.0, 4.0], [56500.0, 2.0], [56100.0, 1.0], [57500.0, 2.0], [58900.0, 2.0], [58100.0, 1.0], [59100.0, 1.0], [58300.0, 5.0], [58500.0, 2.0], [57900.0, 1.0], [59900.0, 2.0], [60100.0, 6.0], [59500.0, 3.0], [60500.0, 1.0], [59700.0, 1.0], [61300.0, 1.0], [60700.0, 1.0], [11500.0, 1.0], [11700.0, 1.0], [13100.0, 1.0], [13300.0, 1.0], [13700.0, 1.0], [14800.0, 1.0], [16100.0, 1.0], [16300.0, 1.0], [16700.0, 1.0], [17000.0, 1.0], [18100.0, 2.0], [18300.0, 1.0], [19400.0, 1.0], [19100.0, 1.0], [19800.0, 1.0], [24400.0, 1.0], [28900.0, 1.0], [30300.0, 1.0], [33400.0, 1.0], [34400.0, 1.0], [34800.0, 1.0], [35400.0, 1.0], [36800.0, 4.0], [36600.0, 1.0], [37800.0, 3.0], [37200.0, 2.0], [37600.0, 2.0], [38200.0, 1.0], [38000.0, 1.0], [38400.0, 1.0], [38600.0, 1.0], [39000.0, 1.0], [39600.0, 1.0], [39800.0, 1.0], [40000.0, 1.0], [40800.0, 1.0], [40400.0, 2.0], [41400.0, 1.0], [41800.0, 1.0], [42600.0, 2.0], [42000.0, 1.0], [42400.0, 2.0], [41600.0, 1.0], [42200.0, 1.0], [41000.0, 1.0], [43600.0, 1.0], [43200.0, 1.0], [46000.0, 1.0], [52400.0, 1.0], [52800.0, 1.0], [53000.0, 1.0], [53800.0, 1.0], [54000.0, 1.0], [54400.0, 3.0], [55000.0, 1.0], [55200.0, 1.0], [54600.0, 1.0], [55600.0, 2.0], [55800.0, 2.0], [56400.0, 1.0], [56800.0, 2.0], [57200.0, 1.0], [56000.0, 1.0], [56600.0, 1.0], [57000.0, 1.0], [57400.0, 3.0], [57600.0, 1.0], [58000.0, 3.0], [58600.0, 2.0], [59200.0, 2.0], [59000.0, 1.0], [57800.0, 1.0], [58400.0, 1.0], [58200.0, 1.0], [59600.0, 2.0], [59400.0, 2.0], [60000.0, 2.0], [59800.0, 1.0], [60800.0, 1.0]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 61300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 14.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 386.0, "series": [{"data": [[0.0, 200.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 386.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 14.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 123.51890034364268, "minX": 1.74842448E12, "maxY": 168.64678899082577, "series": [{"data": [[1.74842448E12, 168.64678899082577], [1.74842454E12, 123.51890034364268]], "isOverall": false, "label": "192.168.1.7-Wallet", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842454E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 61307.0, "series": [{"data": [[53.0, 10.0], [57.0, 8.0], [61.0, 10.0], [62.0, 0.0], [63.0, 0.0], [70.0, 0.0], [73.0, 0.5], [76.0, 1.0], [79.0, 0.0], [81.0, 0.0], [84.0, 0.0], [98.0, 0.0], [101.0, 1.0], [104.0, 1.0], [107.0, 0.0], [111.0, 1.0], [113.0, 1.0], [121.0, 0.0], [125.0, 0.0], [130.0, 0.0], [131.0, 0.0], [135.0, 0.0], [137.0, 0.0], [138.0, 0.5], [141.0, 0.0], [150.0, 0.0], [151.0, 1.0], [156.0, 1.0], [157.0, 1.0], [166.0, 1.0], [167.0, 0.0], [168.0, 0.25], [174.0, 0.6], [173.0, 0.25], [172.0, 0.6470588235294118], [171.0, 0.0], [170.0, 0.5555555555555556], [169.0, 0.4], [177.0, 0.5], [181.0, 0.21428571428571427], [183.0, 0.4285714285714286], [182.0, 0.6666666666666667], [179.0, 0.4], [178.0, 1.0], [176.0, 0.4285714285714286], [186.0, 0.0], [190.0, 0.5714285714285714], [191.0, 0.16666666666666669], [189.0, 0.0], [184.0, 0.6], [192.0, 0.6], [196.0, 0.375], [197.0, 0.0], [199.0, 0.0], [198.0, 0.33333333333333337], [195.0, 1.0], [194.0, 0.46153846153846156], [200.0, 0.8333333333333333]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[171.12, 0.6149999999999999]], "isOverall": false, "label": "Send 2FA-Aggregated", "isController": false}, {"data": [[52.0, 2545.0], [57.0, 2823.0], [61.0, 2943.0], [62.0, 2874.0], [63.0, 2962.0], [70.0, 3225.0], [73.0, 3178.5], [76.0, 3406.0], [79.0, 3584.0], [81.0, 3533.0], [84.0, 3710.0], [98.0, 4310.0], [101.0, 4198.0], [104.0, 4410.0], [107.0, 4792.0], [111.0, 4640.0], [113.0, 4791.0], [121.0, 5075.0], [125.0, 5497.0], [130.0, 5389.0], [131.0, 5529.0], [135.0, 5412.0], [137.0, 5777.0], [138.0, 19380.0], [141.0, 5862.5], [150.0, 6091.0], [151.0, 5957.0], [156.0, 6308.0], [157.0, 6326.0], [166.0, 21816.666666666668], [167.0, 29464.0], [168.0, 23980.0], [174.0, 28998.2], [173.0, 29438.5], [172.0, 29289.999999999996], [171.0, 29776.0], [170.0, 29074.666666666668], [169.0, 29365.0], [177.0, 17596.0], [181.0, 26055.857142857138], [183.0, 22636.85714285714], [182.0, 24655.666666666668], [179.0, 27949.8], [178.0, 28262.0], [176.0, 28637.42857142857], [186.0, 7596.0], [190.0, 12825.214285714286], [191.0, 12121.666666666666], [189.0, 13572.0], [184.0, 18110.8], [192.0, 11591.8], [196.0, 9985.874999999998], [197.0, 7860.0], [199.0, 8793.0], [198.0, 9945.333333333334], [195.0, 11309.0], [194.0, 12083.999999999998], [200.0, 8386.0]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[171.11499999999995, 17783.51499999999]], "isOverall": false, "label": "Post Request-code-login-Aggregated", "isController": false}, {"data": [[2.0, 30814.0], [3.0, 31564.0], [4.0, 30750.0], [5.0, 31385.0], [6.0, 31099.0], [7.0, 31034.0], [8.0, 30351.0], [9.0, 30970.0], [10.0, 29900.0], [11.0, 30322.0], [12.0, 30352.0], [13.0, 29508.0], [14.0, 29819.0], [15.0, 31279.0], [16.0, 31871.0], [17.0, 28789.0], [18.0, 31194.0], [19.0, 28438.0], [20.0, 30289.0], [21.0, 28839.0], [22.0, 28889.0], [23.0, 31517.0], [24.0, 31073.0], [25.0, 29560.0], [26.0, 29286.0], [27.0, 28652.0], [28.0, 28119.0], [29.0, 28379.0], [30.0, 28257.0], [31.0, 29001.0], [33.0, 29591.0], [32.0, 30965.0], [35.0, 31036.0], [34.0, 29191.0], [37.0, 28713.0], [36.0, 28811.0], [39.0, 29006.0], [38.0, 32190.0], [41.0, 29901.0], [40.0, 28597.0], [43.0, 30787.0], [42.0, 28762.0], [45.0, 31892.0], [44.0, 27586.0], [47.0, 30667.0], [46.0, 32144.0], [49.0, 31445.0], [48.0, 29033.0], [51.0, 27127.0], [50.0, 34532.0], [53.0, 29468.0], [52.0, 25473.0], [55.0, 33066.0], [54.0, 30138.0], [57.0, 28682.0], [56.0, 25437.0], [59.0, 28369.0], [58.0, 28477.0], [61.0, 25566.0], [60.0, 25343.0], [63.0, 27222.0], [62.0, 29084.0], [67.0, 29652.0], [66.0, 29085.0], [65.0, 28152.0], [64.0, 25385.0], [71.0, 28721.0], [70.0, 25258.0], [69.0, 28859.0], [68.0, 25707.0], [75.0, 30976.5], [73.0, 26128.0], [72.0, 27665.0], [79.0, 34376.0], [78.0, 25468.0], [77.0, 31850.0], [76.0, 28677.0], [83.0, 28344.0], [82.0, 31740.0], [81.0, 27682.0], [80.0, 30383.0], [87.0, 30891.0], [86.0, 32132.0], [85.0, 34054.0], [84.0, 32447.0], [91.0, 32994.0], [90.0, 34232.0], [89.0, 31940.0], [88.0, 29868.0], [95.0, 32772.0], [94.0, 34560.0], [93.0, 36173.0], [92.0, 33555.0], [99.0, 30149.0], [98.0, 32765.0], [97.0, 32544.0], [96.0, 34957.0], [103.0, 29042.0], [102.0, 29264.0], [101.0, 28881.0], [100.0, 33913.0], [107.0, 31038.0], [106.0, 31017.0], [105.0, 28973.0], [104.0, 30685.0], [111.0, 29869.0], [110.0, 28569.0], [109.0, 28896.0], [108.0, 33142.0], [115.0, 28590.0], [114.0, 30413.0], [113.0, 31969.0], [112.0, 28929.0], [119.0, 28581.0], [118.0, 29759.0], [117.0, 28484.0], [116.0, 29993.0], [123.0, 28510.0], [122.0, 28435.0], [121.0, 29127.0], [120.0, 28154.0], [127.0, 31641.0], [126.0, 28094.0], [125.0, 29158.0], [135.0, 32553.0], [134.0, 28008.0], [133.0, 30986.0], [132.0, 29849.0], [131.0, 28950.0], [130.0, 29067.0], [129.0, 30222.0], [128.0, 29160.0], [143.0, 27693.0], [142.0, 28367.0], [141.0, 31174.0], [140.0, 30104.0], [139.0, 31750.0], [138.0, 28296.0], [137.0, 28790.0], [136.0, 28488.0], [151.0, 29038.0], [150.0, 31262.0], [149.0, 27583.0], [148.0, 27823.0], [147.0, 27051.0], [146.0, 27446.0], [145.0, 30876.0], [144.0, 27486.0], [159.0, 30030.0], [158.0, 30094.0], [157.0, 29783.0], [156.0, 30419.0], [155.0, 29695.0], [154.0, 29966.0], [153.0, 29697.0], [152.0, 30285.0], [167.0, 28099.0], [166.0, 29292.0], [164.0, 30734.0], [163.0, 28016.0], [162.0, 29034.0], [161.0, 30232.0], [160.0, 30230.0], [175.0, 30287.0], [174.0, 29118.0], [173.0, 29608.0], [172.0, 31223.0], [171.0, 29764.0], [170.0, 31933.0], [169.0, 31308.0], [168.0, 30765.0], [183.0, 24295.0], [182.0, 25280.0], [181.0, 27928.0], [180.0, 28121.0], [179.0, 28376.0], [178.0, 28238.0], [177.0, 28581.0], [176.0, 28926.0], [191.0, 14074.0], [190.0, 13811.0], [189.0, 14802.0], [188.0, 13952.0], [187.0, 15889.0], [186.0, 14750.0], [185.0, 15049.0], [184.0, 19653.0], [199.0, 8944.0], [198.0, 10309.0], [197.0, 10377.0], [196.0, 10813.0], [195.0, 11625.0], [194.0, 12742.0], [193.0, 12962.0], [192.0, 13018.0], [200.0, 8972.0], [1.0, 27021.0]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[100.51500000000007, 28312.185]], "isOverall": false, "label": "Post Authen-Aggregated", "isController": false}, {"data": [[2.0, 60749.0], [3.0, 61307.0], [4.0, 59225.0], [5.0, 60807.0], [6.0, 60138.0], [7.0, 59903.0], [8.0, 59553.0], [9.0, 60176.0], [10.0, 59852.0], [11.0, 59781.0], [12.0, 60138.0], [13.0, 59526.0], [14.0, 58524.0], [15.0, 60114.0], [16.0, 60580.0], [17.0, 58253.0], [18.0, 60099.0], [19.0, 57958.0], [20.0, 59596.0], [21.0, 58080.0], [22.0, 58468.0], [23.0, 60171.0], [24.0, 60018.0], [25.0, 58360.0], [26.0, 58308.0], [27.0, 57844.0], [28.0, 57544.0], [29.0, 58081.0], [30.0, 57487.0], [31.0, 58544.0], [33.0, 59060.0], [32.0, 59434.0], [35.0, 59616.0], [34.0, 58360.0], [37.0, 57417.0], [36.0, 58637.0], [39.0, 58345.0], [38.0, 59944.0], [41.0, 59116.0], [40.0, 58373.0], [43.0, 59260.0], [42.0, 58149.0], [45.0, 59497.0], [44.0, 56383.0], [47.0, 58660.0], [46.0, 59608.0], [49.0, 58953.0], [48.0, 58054.0], [51.0, 56590.0], [50.0, 58919.0], [53.0, 57082.0], [52.0, 54627.0], [55.0, 57677.0], [54.0, 57579.0], [57.0, 56853.0], [56.0, 54485.0], [59.0, 56953.0], [58.0, 56699.0], [61.0, 54579.0], [60.0, 54338.0], [63.0, 55857.0], [62.0, 56779.0], [67.0, 56730.0], [66.0, 56793.0], [65.0, 56167.0], [64.0, 54408.0], [71.0, 56385.0], [70.0, 54734.0], [69.0, 56571.0], [68.0, 55223.0], [75.0, 56775.5], [73.0, 55146.0], [72.0, 55810.0], [79.0, 57239.0], [78.0, 54746.0], [77.0, 56949.0], [76.0, 56341.0], [83.0, 56498.0], [82.0, 56804.0], [81.0, 55665.0], [80.0, 56729.0], [87.0, 55072.0], [86.0, 55646.0], [85.0, 55932.0], [84.0, 56379.0], [91.0, 53343.0], [90.0, 53846.0], [89.0, 54085.0], [88.0, 54464.0], [95.0, 49724.0], [94.0, 52455.0], [93.0, 52813.0], [92.0, 53011.0], [99.0, 43717.0], [98.0, 46062.0], [97.0, 46116.0], [96.0, 47956.0], [103.0, 42317.0], [102.0, 42426.0], [101.0, 42637.0], [100.0, 45396.0], [107.0, 43256.0], [106.0, 42954.0], [105.0, 42012.0], [104.0, 42523.0], [111.0, 41977.0], [110.0, 41854.0], [109.0, 41725.0], [108.0, 43634.0], [115.0, 42391.0], [114.0, 42500.0], [113.0, 43118.0], [112.0, 42414.0], [119.0, 41061.0], [118.0, 41982.0], [117.0, 41385.0], [116.0, 42351.0], [123.0, 41760.0], [122.0, 41620.0], [121.0, 42224.0], [120.0, 41163.0], [127.0, 42622.0], [126.0, 40951.0], [125.0, 41851.0], [135.0, 41359.0], [134.0, 40491.0], [133.0, 41982.0], [132.0, 41711.0], [131.0, 41430.0], [130.0, 41301.0], [129.0, 41988.0], [128.0, 41714.0], [143.0, 38921.0], [142.0, 39068.0], [141.0, 39616.0], [140.0, 39856.0], [139.0, 40305.0], [138.0, 40058.0], [137.0, 40814.0], [136.0, 40417.0], [151.0, 37695.0], [150.0, 38394.0], [149.0, 37706.0], [148.0, 37785.0], [147.0, 37503.0], [146.0, 37791.0], [145.0, 39372.0], [144.0, 38654.0], [159.0, 37890.0], [158.0, 37772.0], [157.0, 37646.0], [156.0, 38202.0], [155.0, 38437.0], [154.0, 37859.0], [153.0, 37583.0], [152.0, 38028.0], [167.0, 36634.0], [166.0, 37356.0], [164.0, 37782.0], [163.0, 36809.0], [162.0, 37269.0], [161.0, 37578.0], [160.0, 37953.0], [175.0, 35784.0], [174.0, 35427.0], [173.0, 35935.0], [172.0, 36871.0], [171.0, 36801.0], [170.0, 37345.0], [169.0, 37399.0], [168.0, 37273.0], [183.0, 28936.0], [182.0, 30355.0], [181.0, 33457.0], [180.0, 33510.0], [179.0, 34153.0], [178.0, 34139.0], [177.0, 34405.0], [176.0, 34884.0], [191.0, 17079.0], [190.0, 18121.0], [189.0, 18335.0], [188.0, 18151.0], [187.0, 19473.0], [186.0, 19161.0], [185.0, 19841.0], [184.0, 24445.0], [199.0, 11775.0], [198.0, 13183.0], [197.0, 13330.0], [196.0, 13775.0], [195.0, 14850.0], [194.0, 16149.0], [193.0, 16315.0], [192.0, 16728.0], [200.0, 11527.0], [1.0, 60134.0]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}, {"data": [[100.51500000000007, 46096.31499999997]], "isOverall": false, "label": "AUTHENTICATOR-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1182.0666666666666, "minX": 1.74842448E12, "maxY": 9758.1, "series": [{"data": [[1.74842448E12, 1528.2666666666667], [1.74842454E12, 9758.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74842448E12, 1182.0666666666666], [1.74842454E12, 3474.5]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842454E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.5049504950495048, "minX": 1.74842448E12, "maxY": 47760.80000000001, "series": [{"data": [[1.74842448E12, 0.7272727272727272], [1.74842454E12, 0.5049504950495048]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[1.74842448E12, 8678.20202020202], [1.74842454E12, 26708.524752475256]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[1.74842448E12, 11383.6], [1.74842454E12, 29203.16315789473]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[1.74842448E12, 14471.1], [1.74842454E12, 47760.80000000001]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842454E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74842448E12, "maxY": 47760.17368421053, "series": [{"data": [[1.74842448E12, 0.0], [1.74842454E12, 0.0]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[1.74842448E12, 8678.131313131313], [1.74842454E12, 26708.47524752475]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[1.74842448E12, 11383.400000000001], [1.74842454E12, 29203.089473684206]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[1.74842448E12, 14467.900000000001], [1.74842454E12, 47760.17368421053]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842454E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74842448E12, "maxY": 133.5, "series": [{"data": [[1.74842448E12, 0.0], [1.74842454E12, 0.0]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[1.74842448E12, 122.74747474747474], [1.74842454E12, 120.98019801980199]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[1.74842448E12, 0.0], [1.74842454E12, 0.0]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[1.74842448E12, 133.5], [1.74842454E12, 121.24210526315794]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842454E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74842448E12, "maxY": 36173.0, "series": [{"data": [[1.74842448E12, 14074.0], [1.74842454E12, 36173.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74842448E12, 12480.0], [1.74842454E12, 31196.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74842448E12, 13772.56], [1.74842454E12, 34537.88]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74842448E12, 13013.95], [1.74842454E12, 32146.3]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74842448E12, 0.0], [1.74842454E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74842448E12, 2983.5], [1.74842454E12, 28355.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842454E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 1442.0, "minX": 1.0, "maxY": 32772.0, "series": [{"data": [[8.0, 2205.5], [2.0, 24604.0], [37.0, 28799.0], [10.0, 2951.0], [11.0, 29920.0], [47.0, 28704.0], [12.0, 3931.5], [3.0, 30771.5], [14.0, 8486.5], [15.0, 20030.0], [16.0, 6584.5], [1.0, 32772.0], [4.0, 28392.0], [17.0, 1442.0], [18.0, 28423.0], [19.0, 28904.0], [5.0, 2823.0], [20.0, 11972.5], [21.0, 29695.0], [22.0, 27609.5], [6.0, 7030.5], [25.0, 27992.0], [28.0, 12654.0], [7.0, 24113.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[19.0, 29042.0], [11.0, 28094.0], [3.0, 31588.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 47.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 1437.0, "minX": 1.0, "maxY": 32772.0, "series": [{"data": [[8.0, 2205.0], [2.0, 24604.0], [37.0, 28799.0], [10.0, 2950.5], [11.0, 29920.0], [47.0, 28704.0], [12.0, 3930.5], [3.0, 30771.5], [14.0, 8486.5], [15.0, 20030.0], [16.0, 6584.0], [1.0, 32772.0], [4.0, 28392.0], [17.0, 1437.0], [18.0, 28423.0], [19.0, 28904.0], [5.0, 2823.0], [20.0, 11972.5], [21.0, 29695.0], [22.0, 27609.5], [6.0, 7030.5], [25.0, 27992.0], [28.0, 12653.5], [7.0, 24113.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[19.0, 29042.0], [11.0, 28094.0], [3.0, 31588.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 47.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.3666666666666667, "minX": 1.74842448E12, "maxY": 6.633333333333334, "series": [{"data": [[1.74842448E12, 6.633333333333334], [1.74842454E12, 3.3666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842454E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.466666666666667, "minX": 1.74842448E12, "maxY": 6.533333333333333, "series": [{"data": [[1.74842448E12, 3.466666666666667], [1.74842454E12, 6.533333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842454E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.16666666666666666, "minX": 1.74842448E12, "maxY": 2.933333333333333, "series": [{"data": [[1.74842448E12, 1.65], [1.74842454E12, 1.6833333333333333]], "isOverall": false, "label": "Post Request-code-login-success", "isController": false}, {"data": [[1.74842448E12, 0.16666666666666666], [1.74842454E12, 2.933333333333333]], "isOverall": false, "label": "AUTHENTICATOR-success", "isController": true}, {"data": [[1.74842454E12, 0.23333333333333334]], "isOverall": false, "label": "AUTHENTICATOR-failure", "isController": true}, {"data": [[1.74842448E12, 1.65], [1.74842454E12, 1.6833333333333333]], "isOverall": false, "label": "Send 2FA-success", "isController": false}, {"data": [[1.74842448E12, 0.16666666666666666], [1.74842454E12, 2.933333333333333]], "isOverall": false, "label": "Post Authen-success", "isController": false}, {"data": [[1.74842454E12, 0.23333333333333334]], "isOverall": false, "label": "Post Authen-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842454E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.4666666666666667, "minX": 1.74842448E12, "maxY": 9.233333333333333, "series": [{"data": [[1.74842448E12, 3.6333333333333333], [1.74842454E12, 9.233333333333333]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.74842454E12, 0.4666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842454E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

