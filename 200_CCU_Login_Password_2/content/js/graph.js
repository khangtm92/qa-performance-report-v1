/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 0.0, "minX": 0.0, "maxY": 43704.0, "series": [{"data": [[0.0, 0.0], [0.1, 0.0], [0.2, 0.0], [0.3, 0.0], [0.4, 0.0], [0.5, 0.0], [0.6, 0.0], [0.7, 0.0], [0.8, 0.0], [0.9, 0.0], [1.0, 0.0], [1.1, 0.0], [1.2, 0.0], [1.3, 0.0], [1.4, 0.0], [1.5, 0.0], [1.6, 0.0], [1.7, 0.0], [1.8, 0.0], [1.9, 0.0], [2.0, 0.0], [2.1, 0.0], [2.2, 0.0], [2.3, 0.0], [2.4, 0.0], [2.5, 0.0], [2.6, 0.0], [2.7, 0.0], [2.8, 0.0], [2.9, 0.0], [3.0, 0.0], [3.1, 0.0], [3.2, 0.0], [3.3, 0.0], [3.4, 0.0], [3.5, 0.0], [3.6, 0.0], [3.7, 0.0], [3.8, 0.0], [3.9, 0.0], [4.0, 0.0], [4.1, 0.0], [4.2, 0.0], [4.3, 0.0], [4.4, 0.0], [4.5, 0.0], [4.6, 0.0], [4.7, 0.0], [4.8, 0.0], [4.9, 0.0], [5.0, 0.0], [5.1, 0.0], [5.2, 0.0], [5.3, 0.0], [5.4, 0.0], [5.5, 0.0], [5.6, 0.0], [5.7, 0.0], [5.8, 0.0], [5.9, 0.0], [6.0, 0.0], [6.1, 0.0], [6.2, 0.0], [6.3, 0.0], [6.4, 0.0], [6.5, 0.0], [6.6, 0.0], [6.7, 0.0], [6.8, 0.0], [6.9, 0.0], [7.0, 0.0], [7.1, 0.0], [7.2, 0.0], [7.3, 0.0], [7.4, 0.0], [7.5, 0.0], [7.6, 0.0], [7.7, 0.0], [7.8, 0.0], [7.9, 0.0], [8.0, 0.0], [8.1, 0.0], [8.2, 0.0], [8.3, 0.0], [8.4, 0.0], [8.5, 0.0], [8.6, 0.0], [8.7, 0.0], [8.8, 0.0], [8.9, 0.0], [9.0, 0.0], [9.1, 0.0], [9.2, 0.0], [9.3, 0.0], [9.4, 0.0], [9.5, 0.0], [9.6, 0.0], [9.7, 0.0], [9.8, 0.0], [9.9, 0.0], [10.0, 0.0], [10.1, 0.0], [10.2, 0.0], [10.3, 0.0], [10.4, 0.0], [10.5, 0.0], [10.6, 0.0], [10.7, 0.0], [10.8, 0.0], [10.9, 0.0], [11.0, 0.0], [11.1, 0.0], [11.2, 0.0], [11.3, 0.0], [11.4, 0.0], [11.5, 0.0], [11.6, 0.0], [11.7, 0.0], [11.8, 0.0], [11.9, 0.0], [12.0, 0.0], [12.1, 0.0], [12.2, 0.0], [12.3, 0.0], [12.4, 0.0], [12.5, 0.0], [12.6, 0.0], [12.7, 0.0], [12.8, 0.0], [12.9, 0.0], [13.0, 0.0], [13.1, 0.0], [13.2, 0.0], [13.3, 0.0], [13.4, 0.0], [13.5, 0.0], [13.6, 0.0], [13.7, 0.0], [13.8, 0.0], [13.9, 0.0], [14.0, 0.0], [14.1, 0.0], [14.2, 0.0], [14.3, 0.0], [14.4, 0.0], [14.5, 0.0], [14.6, 0.0], [14.7, 0.0], [14.8, 0.0], [14.9, 0.0], [15.0, 0.0], [15.1, 0.0], [15.2, 0.0], [15.3, 0.0], [15.4, 0.0], [15.5, 0.0], [15.6, 0.0], [15.7, 0.0], [15.8, 0.0], [15.9, 0.0], [16.0, 0.0], [16.1, 0.0], [16.2, 0.0], [16.3, 0.0], [16.4, 0.0], [16.5, 0.0], [16.6, 0.0], [16.7, 0.0], [16.8, 0.0], [16.9, 0.0], [17.0, 0.0], [17.1, 0.0], [17.2, 0.0], [17.3, 0.0], [17.4, 0.0], [17.5, 0.0], [17.6, 0.0], [17.7, 0.0], [17.8, 0.0], [17.9, 0.0], [18.0, 0.0], [18.1, 0.0], [18.2, 0.0], [18.3, 0.0], [18.4, 0.0], [18.5, 0.0], [18.6, 0.0], [18.7, 0.0], [18.8, 0.0], [18.9, 0.0], [19.0, 0.0], [19.1, 0.0], [19.2, 0.0], [19.3, 0.0], [19.4, 0.0], [19.5, 0.0], [19.6, 0.0], [19.7, 0.0], [19.8, 0.0], [19.9, 0.0], [20.0, 0.0], [20.1, 0.0], [20.2, 0.0], [20.3, 0.0], [20.4, 0.0], [20.5, 0.0], [20.6, 0.0], [20.7, 0.0], [20.8, 0.0], [20.9, 0.0], [21.0, 0.0], [21.1, 0.0], [21.2, 0.0], [21.3, 0.0], [21.4, 0.0], [21.5, 0.0], [21.6, 0.0], [21.7, 0.0], [21.8, 0.0], [21.9, 0.0], [22.0, 0.0], [22.1, 0.0], [22.2, 0.0], [22.3, 0.0], [22.4, 0.0], [22.5, 0.0], [22.6, 0.0], [22.7, 0.0], [22.8, 0.0], [22.9, 0.0], [23.0, 0.0], [23.1, 0.0], [23.2, 0.0], [23.3, 0.0], [23.4, 0.0], [23.5, 0.0], [23.6, 0.0], [23.7, 0.0], [23.8, 0.0], [23.9, 0.0], [24.0, 0.0], [24.1, 0.0], [24.2, 0.0], [24.3, 0.0], [24.4, 0.0], [24.5, 0.0], [24.6, 0.0], [24.7, 0.0], [24.8, 0.0], [24.9, 0.0], [25.0, 0.0], [25.1, 0.0], [25.2, 0.0], [25.3, 0.0], [25.4, 0.0], [25.5, 0.0], [25.6, 0.0], [25.7, 0.0], [25.8, 0.0], [25.9, 0.0], [26.0, 0.0], [26.1, 0.0], [26.2, 0.0], [26.3, 0.0], [26.4, 0.0], [26.5, 0.0], [26.6, 0.0], [26.7, 0.0], [26.8, 0.0], [26.9, 0.0], [27.0, 0.0], [27.1, 0.0], [27.2, 0.0], [27.3, 0.0], [27.4, 0.0], [27.5, 0.0], [27.6, 0.0], [27.7, 0.0], [27.8, 0.0], [27.9, 0.0], [28.0, 0.0], [28.1, 0.0], [28.2, 0.0], [28.3, 0.0], [28.4, 0.0], [28.5, 0.0], [28.6, 0.0], [28.7, 0.0], [28.8, 0.0], [28.9, 0.0], [29.0, 0.0], [29.1, 0.0], [29.2, 0.0], [29.3, 0.0], [29.4, 0.0], [29.5, 0.0], [29.6, 0.0], [29.7, 0.0], [29.8, 0.0], [29.9, 0.0], [30.0, 0.0], [30.1, 0.0], [30.2, 0.0], [30.3, 0.0], [30.4, 0.0], [30.5, 0.0], [30.6, 0.0], [30.7, 0.0], [30.8, 0.0], [30.9, 0.0], [31.0, 0.0], [31.1, 0.0], [31.2, 0.0], [31.3, 0.0], [31.4, 0.0], [31.5, 0.0], [31.6, 0.0], [31.7, 0.0], [31.8, 0.0], [31.9, 0.0], [32.0, 0.0], [32.1, 0.0], [32.2, 0.0], [32.3, 0.0], [32.4, 0.0], [32.5, 0.0], [32.6, 0.0], [32.7, 0.0], [32.8, 0.0], [32.9, 0.0], [33.0, 0.0], [33.1, 0.0], [33.2, 0.0], [33.3, 0.0], [33.4, 0.0], [33.5, 0.0], [33.6, 0.0], [33.7, 0.0], [33.8, 0.0], [33.9, 0.0], [34.0, 0.0], [34.1, 0.0], [34.2, 0.0], [34.3, 0.0], [34.4, 0.0], [34.5, 0.0], [34.6, 0.0], [34.7, 0.0], [34.8, 0.0], [34.9, 0.0], [35.0, 0.0], [35.1, 0.0], [35.2, 0.0], [35.3, 0.0], [35.4, 0.0], [35.5, 0.0], [35.6, 0.0], [35.7, 0.0], [35.8, 0.0], [35.9, 0.0], [36.0, 0.0], [36.1, 0.0], [36.2, 0.0], [36.3, 0.0], [36.4, 0.0], [36.5, 0.0], [36.6, 0.0], [36.7, 0.0], [36.8, 0.0], [36.9, 0.0], [37.0, 0.0], [37.1, 0.0], [37.2, 0.0], [37.3, 0.0], [37.4, 0.0], [37.5, 0.0], [37.6, 0.0], [37.7, 0.0], [37.8, 0.0], [37.9, 0.0], [38.0, 0.0], [38.1, 0.0], [38.2, 0.0], [38.3, 0.0], [38.4, 0.0], [38.5, 0.0], [38.6, 0.0], [38.7, 0.0], [38.8, 0.0], [38.9, 0.0], [39.0, 0.0], [39.1, 0.0], [39.2, 0.0], [39.3, 0.0], [39.4, 0.0], [39.5, 0.0], [39.6, 0.0], [39.7, 0.0], [39.8, 0.0], [39.9, 0.0], [40.0, 0.0], [40.1, 0.0], [40.2, 0.0], [40.3, 0.0], [40.4, 0.0], [40.5, 0.0], [40.6, 0.0], [40.7, 0.0], [40.8, 0.0], [40.9, 0.0], [41.0, 0.0], [41.1, 0.0], [41.2, 0.0], [41.3, 0.0], [41.4, 0.0], [41.5, 0.0], [41.6, 0.0], [41.7, 0.0], [41.8, 0.0], [41.9, 0.0], [42.0, 0.0], [42.1, 0.0], [42.2, 0.0], [42.3, 0.0], [42.4, 0.0], [42.5, 0.0], [42.6, 0.0], [42.7, 0.0], [42.8, 0.0], [42.9, 0.0], [43.0, 0.0], [43.1, 0.0], [43.2, 0.0], [43.3, 0.0], [43.4, 0.0], [43.5, 0.0], [43.6, 0.0], [43.7, 0.0], [43.8, 0.0], [43.9, 0.0], [44.0, 0.0], [44.1, 0.0], [44.2, 0.0], [44.3, 0.0], [44.4, 0.0], [44.5, 0.0], [44.6, 0.0], [44.7, 0.0], [44.8, 0.0], [44.9, 0.0], [45.0, 0.0], [45.1, 0.0], [45.2, 0.0], [45.3, 0.0], [45.4, 0.0], [45.5, 0.0], [45.6, 0.0], [45.7, 0.0], [45.8, 0.0], [45.9, 0.0], [46.0, 0.0], [46.1, 0.0], [46.2, 0.0], [46.3, 0.0], [46.4, 0.0], [46.5, 0.0], [46.6, 0.0], [46.7, 0.0], [46.8, 0.0], [46.9, 0.0], [47.0, 0.0], [47.1, 0.0], [47.2, 0.0], [47.3, 0.0], [47.4, 0.0], [47.5, 0.0], [47.6, 0.0], [47.7, 0.0], [47.8, 0.0], [47.9, 0.0], [48.0, 0.0], [48.1, 0.0], [48.2, 0.0], [48.3, 0.0], [48.4, 0.0], [48.5, 0.0], [48.6, 0.0], [48.7, 0.0], [48.8, 0.0], [48.9, 0.0], [49.0, 0.0], [49.1, 0.0], [49.2, 0.0], [49.3, 0.0], [49.4, 0.0], [49.5, 0.0], [49.6, 0.0], [49.7, 0.0], [49.8, 0.0], [49.9, 0.0], [50.0, 0.0], [50.1, 0.0], [50.2, 0.0], [50.3, 0.0], [50.4, 0.0], [50.5, 0.0], [50.6, 0.0], [50.7, 0.0], [50.8, 0.0], [50.9, 0.0], [51.0, 0.0], [51.1, 0.0], [51.2, 0.0], [51.3, 0.0], [51.4, 0.0], [51.5, 0.0], [51.6, 0.0], [51.7, 0.0], [51.8, 0.0], [51.9, 0.0], [52.0, 0.0], [52.1, 0.0], [52.2, 0.0], [52.3, 0.0], [52.4, 0.0], [52.5, 0.0], [52.6, 0.0], [52.7, 0.0], [52.8, 0.0], [52.9, 0.0], [53.0, 0.0], [53.1, 0.0], [53.2, 0.0], [53.3, 0.0], [53.4, 0.0], [53.5, 0.0], [53.6, 0.0], [53.7, 0.0], [53.8, 0.0], [53.9, 0.0], [54.0, 0.0], [54.1, 0.0], [54.2, 0.0], [54.3, 0.0], [54.4, 0.0], [54.5, 0.0], [54.6, 0.0], [54.7, 0.0], [54.8, 0.0], [54.9, 0.0], [55.0, 0.0], [55.1, 0.0], [55.2, 0.0], [55.3, 0.0], [55.4, 0.0], [55.5, 0.0], [55.6, 0.0], [55.7, 0.0], [55.8, 0.0], [55.9, 0.0], [56.0, 0.0], [56.1, 0.0], [56.2, 0.0], [56.3, 0.0], [56.4, 0.0], [56.5, 0.0], [56.6, 0.0], [56.7, 0.0], [56.8, 0.0], [56.9, 0.0], [57.0, 0.0], [57.1, 0.0], [57.2, 0.0], [57.3, 0.0], [57.4, 0.0], [57.5, 0.0], [57.6, 0.0], [57.7, 0.0], [57.8, 0.0], [57.9, 0.0], [58.0, 0.0], [58.1, 0.0], [58.2, 0.0], [58.3, 0.0], [58.4, 0.0], [58.5, 0.0], [58.6, 0.0], [58.7, 0.0], [58.8, 0.0], [58.9, 0.0], [59.0, 0.0], [59.1, 0.0], [59.2, 0.0], [59.3, 0.0], [59.4, 0.0], [59.5, 0.0], [59.6, 0.0], [59.7, 0.0], [59.8, 0.0], [59.9, 0.0], [60.0, 1.0], [60.1, 1.0], [60.2, 1.0], [60.3, 1.0], [60.4, 1.0], [60.5, 1.0], [60.6, 1.0], [60.7, 1.0], [60.8, 1.0], [60.9, 1.0], [61.0, 1.0], [61.1, 1.0], [61.2, 1.0], [61.3, 1.0], [61.4, 1.0], [61.5, 1.0], [61.6, 1.0], [61.7, 1.0], [61.8, 1.0], [61.9, 1.0], [62.0, 1.0], [62.1, 1.0], [62.2, 1.0], [62.3, 1.0], [62.4, 1.0], [62.5, 1.0], [62.6, 1.0], [62.7, 1.0], [62.8, 1.0], [62.9, 1.0], [63.0, 1.0], [63.1, 1.0], [63.2, 1.0], [63.3, 1.0], [63.4, 1.0], [63.5, 1.0], [63.6, 1.0], [63.7, 1.0], [63.8, 1.0], [63.9, 1.0], [64.0, 1.0], [64.1, 1.0], [64.2, 1.0], [64.3, 1.0], [64.4, 1.0], [64.5, 1.0], [64.6, 1.0], [64.7, 1.0], [64.8, 1.0], [64.9, 1.0], [65.0, 1.0], [65.1, 1.0], [65.2, 1.0], [65.3, 1.0], [65.4, 1.0], [65.5, 1.0], [65.6, 1.0], [65.7, 1.0], [65.8, 1.0], [65.9, 1.0], [66.0, 1.0], [66.1, 1.0], [66.2, 1.0], [66.3, 1.0], [66.4, 1.0], [66.5, 1.0], [66.6, 1.0], [66.7, 1.0], [66.8, 1.0], [66.9, 1.0], [67.0, 1.0], [67.1, 1.0], [67.2, 1.0], [67.3, 1.0], [67.4, 1.0], [67.5, 1.0], [67.6, 1.0], [67.7, 1.0], [67.8, 1.0], [67.9, 1.0], [68.0, 1.0], [68.1, 1.0], [68.2, 1.0], [68.3, 1.0], [68.4, 1.0], [68.5, 1.0], [68.6, 1.0], [68.7, 1.0], [68.8, 1.0], [68.9, 1.0], [69.0, 1.0], [69.1, 1.0], [69.2, 1.0], [69.3, 1.0], [69.4, 1.0], [69.5, 1.0], [69.6, 1.0], [69.7, 1.0], [69.8, 1.0], [69.9, 1.0], [70.0, 1.0], [70.1, 1.0], [70.2, 1.0], [70.3, 1.0], [70.4, 1.0], [70.5, 1.0], [70.6, 1.0], [70.7, 1.0], [70.8, 1.0], [70.9, 1.0], [71.0, 1.0], [71.1, 1.0], [71.2, 1.0], [71.3, 1.0], [71.4, 1.0], [71.5, 1.0], [71.6, 1.0], [71.7, 1.0], [71.8, 1.0], [71.9, 1.0], [72.0, 1.0], [72.1, 1.0], [72.2, 1.0], [72.3, 1.0], [72.4, 1.0], [72.5, 1.0], [72.6, 1.0], [72.7, 1.0], [72.8, 1.0], [72.9, 1.0], [73.0, 1.0], [73.1, 1.0], [73.2, 1.0], [73.3, 1.0], [73.4, 1.0], [73.5, 1.0], [73.6, 1.0], [73.7, 1.0], [73.8, 1.0], [73.9, 1.0], [74.0, 1.0], [74.1, 1.0], [74.2, 1.0], [74.3, 1.0], [74.4, 1.0], [74.5, 1.0], [74.6, 1.0], [74.7, 1.0], [74.8, 1.0], [74.9, 1.0], [75.0, 1.0], [75.1, 1.0], [75.2, 1.0], [75.3, 1.0], [75.4, 1.0], [75.5, 1.0], [75.6, 1.0], [75.7, 1.0], [75.8, 1.0], [75.9, 1.0], [76.0, 1.0], [76.1, 1.0], [76.2, 1.0], [76.3, 1.0], [76.4, 1.0], [76.5, 1.0], [76.6, 1.0], [76.7, 1.0], [76.8, 1.0], [76.9, 1.0], [77.0, 1.0], [77.1, 1.0], [77.2, 1.0], [77.3, 1.0], [77.4, 1.0], [77.5, 1.0], [77.6, 1.0], [77.7, 1.0], [77.8, 1.0], [77.9, 1.0], [78.0, 1.0], [78.1, 1.0], [78.2, 1.0], [78.3, 1.0], [78.4, 1.0], [78.5, 1.0], [78.6, 1.0], [78.7, 1.0], [78.8, 1.0], [78.9, 1.0], [79.0, 1.0], [79.1, 1.0], [79.2, 1.0], [79.3, 1.0], [79.4, 1.0], [79.5, 1.0], [79.6, 1.0], [79.7, 1.0], [79.8, 1.0], [79.9, 1.0], [80.0, 1.0], [80.1, 1.0], [80.2, 1.0], [80.3, 1.0], [80.4, 1.0], [80.5, 1.0], [80.6, 1.0], [80.7, 1.0], [80.8, 1.0], [80.9, 1.0], [81.0, 1.0], [81.1, 1.0], [81.2, 1.0], [81.3, 1.0], [81.4, 1.0], [81.5, 1.0], [81.6, 1.0], [81.7, 1.0], [81.8, 1.0], [81.9, 1.0], [82.0, 1.0], [82.1, 1.0], [82.2, 1.0], [82.3, 1.0], [82.4, 1.0], [82.5, 1.0], [82.6, 1.0], [82.7, 1.0], [82.8, 1.0], [82.9, 1.0], [83.0, 1.0], [83.1, 1.0], [83.2, 1.0], [83.3, 1.0], [83.4, 1.0], [83.5, 1.0], [83.6, 1.0], [83.7, 1.0], [83.8, 1.0], [83.9, 1.0], [84.0, 1.0], [84.1, 1.0], [84.2, 1.0], [84.3, 1.0], [84.4, 1.0], [84.5, 1.0], [84.6, 1.0], [84.7, 1.0], [84.8, 1.0], [84.9, 1.0], [85.0, 1.0], [85.1, 1.0], [85.2, 1.0], [85.3, 1.0], [85.4, 1.0], [85.5, 1.0], [85.6, 1.0], [85.7, 1.0], [85.8, 1.0], [85.9, 1.0], [86.0, 1.0], [86.1, 1.0], [86.2, 1.0], [86.3, 1.0], [86.4, 1.0], [86.5, 1.0], [86.6, 1.0], [86.7, 1.0], [86.8, 1.0], [86.9, 1.0], [87.0, 1.0], [87.1, 1.0], [87.2, 1.0], [87.3, 1.0], [87.4, 1.0], [87.5, 1.0], [87.6, 1.0], [87.7, 1.0], [87.8, 1.0], [87.9, 1.0], [88.0, 1.0], [88.1, 1.0], [88.2, 1.0], [88.3, 1.0], [88.4, 1.0], [88.5, 1.0], [88.6, 1.0], [88.7, 1.0], [88.8, 1.0], [88.9, 1.0], [89.0, 1.0], [89.1, 1.0], [89.2, 1.0], [89.3, 1.0], [89.4, 1.0], [89.5, 1.0], [89.6, 1.0], [89.7, 1.0], [89.8, 1.0], [89.9, 1.0], [90.0, 1.0], [90.1, 1.0], [90.2, 1.0], [90.3, 1.0], [90.4, 1.0], [90.5, 1.0], [90.6, 1.0], [90.7, 1.0], [90.8, 1.0], [90.9, 1.0], [91.0, 1.0], [91.1, 1.0], [91.2, 1.0], [91.3, 1.0], [91.4, 1.0], [91.5, 1.0], [91.6, 1.0], [91.7, 1.0], [91.8, 1.0], [91.9, 1.0], [92.0, 1.0], [92.1, 1.0], [92.2, 1.0], [92.3, 1.0], [92.4, 1.0], [92.5, 1.0], [92.6, 1.0], [92.7, 1.0], [92.8, 1.0], [92.9, 1.0], [93.0, 1.0], [93.1, 1.0], [93.2, 1.0], [93.3, 1.0], [93.4, 1.0], [93.5, 1.0], [93.6, 1.0], [93.7, 1.0], [93.8, 1.0], [93.9, 1.0], [94.0, 1.0], [94.1, 1.0], [94.2, 1.0], [94.3, 1.0], [94.4, 1.0], [94.5, 1.0], [94.6, 1.0], [94.7, 1.0], [94.8, 1.0], [94.9, 1.0], [95.0, 1.0], [95.1, 1.0], [95.2, 1.0], [95.3, 1.0], [95.4, 1.0], [95.5, 1.0], [95.6, 1.0], [95.7, 1.0], [95.8, 1.0], [95.9, 1.0], [96.0, 1.0], [96.1, 1.0], [96.2, 1.0], [96.3, 1.0], [96.4, 1.0], [96.5, 1.0], [96.6, 1.0], [96.7, 1.0], [96.8, 1.0], [96.9, 1.0], [97.0, 1.0], [97.1, 1.0], [97.2, 1.0], [97.3, 1.0], [97.4, 1.0], [97.5, 1.0], [97.6, 1.0], [97.7, 1.0], [97.8, 1.0], [97.9, 1.0], [98.0, 2.0], [98.1, 2.0], [98.2, 2.0], [98.3, 2.0], [98.4, 2.0], [98.5, 9.0], [98.6, 9.0], [98.7, 9.0], [98.8, 9.0], [98.9, 9.0], [99.0, 9.0], [99.1, 9.0], [99.2, 9.0], [99.3, 9.0], [99.4, 9.0], [99.5, 15.0], [99.6, 15.0], [99.7, 15.0], [99.8, 15.0], [99.9, 15.0]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[0.0, 4609.0], [0.1, 4609.0], [0.2, 4609.0], [0.3, 4609.0], [0.4, 4609.0], [0.5, 5071.0], [0.6, 5071.0], [0.7, 5071.0], [0.8, 5071.0], [0.9, 5071.0], [1.0, 5071.0], [1.1, 5071.0], [1.2, 5071.0], [1.3, 5071.0], [1.4, 5071.0], [1.5, 5140.0], [1.6, 5140.0], [1.7, 5140.0], [1.8, 5140.0], [1.9, 5140.0], [2.0, 5427.0], [2.1, 5427.0], [2.2, 5427.0], [2.3, 5427.0], [2.4, 5427.0], [2.5, 5604.0], [2.6, 5604.0], [2.7, 5604.0], [2.8, 5604.0], [2.9, 5604.0], [3.0, 5901.0], [3.1, 5901.0], [3.2, 5901.0], [3.3, 5901.0], [3.4, 5901.0], [3.5, 5943.0], [3.6, 5943.0], [3.7, 5943.0], [3.8, 5943.0], [3.9, 5943.0], [4.0, 6149.0], [4.1, 6149.0], [4.2, 6149.0], [4.3, 6149.0], [4.4, 6149.0], [4.5, 6278.0], [4.6, 6278.0], [4.7, 6278.0], [4.8, 6278.0], [4.9, 6278.0], [5.0, 6385.0], [5.1, 6385.0], [5.2, 6385.0], [5.3, 6385.0], [5.4, 6385.0], [5.5, 6394.0], [5.6, 6394.0], [5.7, 6394.0], [5.8, 6394.0], [5.9, 6394.0], [6.0, 6437.0], [6.1, 6437.0], [6.2, 6437.0], [6.3, 6437.0], [6.4, 6437.0], [6.5, 6450.0], [6.6, 6450.0], [6.7, 6450.0], [6.8, 6450.0], [6.9, 6450.0], [7.0, 6465.0], [7.1, 6465.0], [7.2, 6465.0], [7.3, 6465.0], [7.4, 6465.0], [7.5, 6480.0], [7.6, 6480.0], [7.7, 6480.0], [7.8, 6480.0], [7.9, 6480.0], [8.0, 6496.0], [8.1, 6496.0], [8.2, 6496.0], [8.3, 6496.0], [8.4, 6496.0], [8.5, 6503.0], [8.6, 6503.0], [8.7, 6503.0], [8.8, 6503.0], [8.9, 6503.0], [9.0, 6548.0], [9.1, 6548.0], [9.2, 6548.0], [9.3, 6548.0], [9.4, 6548.0], [9.5, 6562.0], [9.6, 6562.0], [9.7, 6562.0], [9.8, 6562.0], [9.9, 6562.0], [10.0, 6565.0], [10.1, 6565.0], [10.2, 6565.0], [10.3, 6565.0], [10.4, 6565.0], [10.5, 6600.0], [10.6, 6600.0], [10.7, 6600.0], [10.8, 6600.0], [10.9, 6600.0], [11.0, 6611.0], [11.1, 6611.0], [11.2, 6611.0], [11.3, 6611.0], [11.4, 6611.0], [11.5, 6622.0], [11.6, 6622.0], [11.7, 6622.0], [11.8, 6622.0], [11.9, 6622.0], [12.0, 6623.0], [12.1, 6623.0], [12.2, 6623.0], [12.3, 6623.0], [12.4, 6623.0], [12.5, 6637.0], [12.6, 6637.0], [12.7, 6637.0], [12.8, 6637.0], [12.9, 6637.0], [13.0, 6651.0], [13.1, 6651.0], [13.2, 6651.0], [13.3, 6651.0], [13.4, 6651.0], [13.5, 6657.0], [13.6, 6657.0], [13.7, 6657.0], [13.8, 6657.0], [13.9, 6657.0], [14.0, 6661.0], [14.1, 6661.0], [14.2, 6661.0], [14.3, 6661.0], [14.4, 6661.0], [14.5, 6673.0], [14.6, 6673.0], [14.7, 6673.0], [14.8, 6673.0], [14.9, 6673.0], [15.0, 6680.0], [15.1, 6680.0], [15.2, 6680.0], [15.3, 6680.0], [15.4, 6680.0], [15.5, 6684.0], [15.6, 6684.0], [15.7, 6684.0], [15.8, 6684.0], [15.9, 6684.0], [16.0, 6697.0], [16.1, 6697.0], [16.2, 6697.0], [16.3, 6697.0], [16.4, 6697.0], [16.5, 6721.0], [16.6, 6721.0], [16.7, 6721.0], [16.8, 6721.0], [16.9, 6721.0], [17.0, 6787.0], [17.1, 6787.0], [17.2, 6787.0], [17.3, 6787.0], [17.4, 6787.0], [17.5, 6800.0], [17.6, 6800.0], [17.7, 6800.0], [17.8, 6800.0], [17.9, 6800.0], [18.0, 6802.0], [18.1, 6802.0], [18.2, 6802.0], [18.3, 6802.0], [18.4, 6802.0], [18.5, 6812.0], [18.6, 6812.0], [18.7, 6812.0], [18.8, 6812.0], [18.9, 6812.0], [19.0, 6822.0], [19.1, 6822.0], [19.2, 6822.0], [19.3, 6822.0], [19.4, 6822.0], [19.5, 6833.0], [19.6, 6833.0], [19.7, 6833.0], [19.8, 6833.0], [19.9, 6833.0], [20.0, 6857.0], [20.1, 6857.0], [20.2, 6857.0], [20.3, 6857.0], [20.4, 6857.0], [20.5, 6872.0], [20.6, 6872.0], [20.7, 6872.0], [20.8, 6872.0], [20.9, 6872.0], [21.0, 6921.0], [21.1, 6921.0], [21.2, 6921.0], [21.3, 6921.0], [21.4, 6921.0], [21.5, 6929.0], [21.6, 6929.0], [21.7, 6929.0], [21.8, 6929.0], [21.9, 6929.0], [22.0, 6934.0], [22.1, 6934.0], [22.2, 6934.0], [22.3, 6934.0], [22.4, 6934.0], [22.5, 6936.0], [22.6, 6936.0], [22.7, 6936.0], [22.8, 6936.0], [22.9, 6936.0], [23.0, 6944.0], [23.1, 6944.0], [23.2, 6944.0], [23.3, 6944.0], [23.4, 6944.0], [23.5, 6950.0], [23.6, 6950.0], [23.7, 6950.0], [23.8, 6950.0], [23.9, 6950.0], [24.0, 6981.0], [24.1, 6981.0], [24.2, 6981.0], [24.3, 6981.0], [24.4, 6981.0], [24.5, 6995.0], [24.6, 6995.0], [24.7, 6995.0], [24.8, 6995.0], [24.9, 6995.0], [25.0, 6995.0], [25.1, 6995.0], [25.2, 6995.0], [25.3, 6995.0], [25.4, 6995.0], [25.5, 7000.0], [25.6, 7000.0], [25.7, 7000.0], [25.8, 7000.0], [25.9, 7000.0], [26.0, 7033.0], [26.1, 7033.0], [26.2, 7033.0], [26.3, 7033.0], [26.4, 7033.0], [26.5, 7048.0], [26.6, 7048.0], [26.7, 7048.0], [26.8, 7048.0], [26.9, 7048.0], [27.0, 7058.0], [27.1, 7058.0], [27.2, 7058.0], [27.3, 7058.0], [27.4, 7058.0], [27.5, 7073.0], [27.6, 7073.0], [27.7, 7073.0], [27.8, 7073.0], [27.9, 7073.0], [28.0, 7101.0], [28.1, 7101.0], [28.2, 7101.0], [28.3, 7101.0], [28.4, 7101.0], [28.5, 7102.0], [28.6, 7102.0], [28.7, 7102.0], [28.8, 7102.0], [28.9, 7102.0], [29.0, 7142.0], [29.1, 7142.0], [29.2, 7142.0], [29.3, 7142.0], [29.4, 7142.0], [29.5, 7177.0], [29.6, 7177.0], [29.7, 7177.0], [29.8, 7177.0], [29.9, 7177.0], [30.0, 7193.0], [30.1, 7193.0], [30.2, 7193.0], [30.3, 7193.0], [30.4, 7193.0], [30.5, 7252.0], [30.6, 7252.0], [30.7, 7252.0], [30.8, 7252.0], [30.9, 7252.0], [31.0, 7276.0], [31.1, 7276.0], [31.2, 7276.0], [31.3, 7276.0], [31.4, 7276.0], [31.5, 7277.0], [31.6, 7277.0], [31.7, 7277.0], [31.8, 7277.0], [31.9, 7277.0], [32.0, 7280.0], [32.1, 7280.0], [32.2, 7280.0], [32.3, 7280.0], [32.4, 7280.0], [32.5, 7310.0], [32.6, 7310.0], [32.7, 7310.0], [32.8, 7310.0], [32.9, 7310.0], [33.0, 7314.0], [33.1, 7314.0], [33.2, 7314.0], [33.3, 7314.0], [33.4, 7314.0], [33.5, 7324.0], [33.6, 7324.0], [33.7, 7324.0], [33.8, 7324.0], [33.9, 7324.0], [34.0, 7358.0], [34.1, 7358.0], [34.2, 7358.0], [34.3, 7358.0], [34.4, 7358.0], [34.5, 7383.0], [34.6, 7383.0], [34.7, 7383.0], [34.8, 7383.0], [34.9, 7383.0], [35.0, 7399.0], [35.1, 7399.0], [35.2, 7399.0], [35.3, 7399.0], [35.4, 7399.0], [35.5, 7424.0], [35.6, 7424.0], [35.7, 7424.0], [35.8, 7424.0], [35.9, 7424.0], [36.0, 7436.0], [36.1, 7436.0], [36.2, 7436.0], [36.3, 7436.0], [36.4, 7436.0], [36.5, 7437.0], [36.6, 7437.0], [36.7, 7437.0], [36.8, 7437.0], [36.9, 7437.0], [37.0, 7439.0], [37.1, 7439.0], [37.2, 7439.0], [37.3, 7439.0], [37.4, 7439.0], [37.5, 7446.0], [37.6, 7446.0], [37.7, 7446.0], [37.8, 7446.0], [37.9, 7446.0], [38.0, 7449.0], [38.1, 7449.0], [38.2, 7449.0], [38.3, 7449.0], [38.4, 7449.0], [38.5, 7456.0], [38.6, 7456.0], [38.7, 7456.0], [38.8, 7456.0], [38.9, 7456.0], [39.0, 7477.0], [39.1, 7477.0], [39.2, 7477.0], [39.3, 7477.0], [39.4, 7477.0], [39.5, 7480.0], [39.6, 7480.0], [39.7, 7480.0], [39.8, 7480.0], [39.9, 7480.0], [40.0, 7492.0], [40.1, 7492.0], [40.2, 7492.0], [40.3, 7492.0], [40.4, 7492.0], [40.5, 7496.0], [40.6, 7496.0], [40.7, 7496.0], [40.8, 7496.0], [40.9, 7496.0], [41.0, 7501.0], [41.1, 7501.0], [41.2, 7501.0], [41.3, 7501.0], [41.4, 7501.0], [41.5, 7515.0], [41.6, 7515.0], [41.7, 7515.0], [41.8, 7515.0], [41.9, 7515.0], [42.0, 7527.0], [42.1, 7527.0], [42.2, 7527.0], [42.3, 7527.0], [42.4, 7527.0], [42.5, 7533.0], [42.6, 7533.0], [42.7, 7533.0], [42.8, 7533.0], [42.9, 7533.0], [43.0, 7546.0], [43.1, 7546.0], [43.2, 7546.0], [43.3, 7546.0], [43.4, 7546.0], [43.5, 7549.0], [43.6, 7549.0], [43.7, 7549.0], [43.8, 7549.0], [43.9, 7549.0], [44.0, 7550.0], [44.1, 7550.0], [44.2, 7550.0], [44.3, 7550.0], [44.4, 7550.0], [44.5, 7553.0], [44.6, 7553.0], [44.7, 7553.0], [44.8, 7553.0], [44.9, 7553.0], [45.0, 7569.0], [45.1, 7569.0], [45.2, 7569.0], [45.3, 7569.0], [45.4, 7569.0], [45.5, 7573.0], [45.6, 7573.0], [45.7, 7573.0], [45.8, 7573.0], [45.9, 7573.0], [46.0, 7575.0], [46.1, 7575.0], [46.2, 7575.0], [46.3, 7575.0], [46.4, 7575.0], [46.5, 7586.0], [46.6, 7586.0], [46.7, 7586.0], [46.8, 7586.0], [46.9, 7586.0], [47.0, 7609.0], [47.1, 7609.0], [47.2, 7609.0], [47.3, 7609.0], [47.4, 7609.0], [47.5, 7659.0], [47.6, 7659.0], [47.7, 7659.0], [47.8, 7659.0], [47.9, 7659.0], [48.0, 7659.0], [48.1, 7659.0], [48.2, 7659.0], [48.3, 7659.0], [48.4, 7659.0], [48.5, 7669.0], [48.6, 7669.0], [48.7, 7669.0], [48.8, 7669.0], [48.9, 7669.0], [49.0, 7669.0], [49.1, 7669.0], [49.2, 7669.0], [49.3, 7669.0], [49.4, 7669.0], [49.5, 7689.0], [49.6, 7689.0], [49.7, 7689.0], [49.8, 7689.0], [49.9, 7689.0], [50.0, 7759.0], [50.1, 7759.0], [50.2, 7759.0], [50.3, 7759.0], [50.4, 7759.0], [50.5, 7767.0], [50.6, 7767.0], [50.7, 7767.0], [50.8, 7767.0], [50.9, 7767.0], [51.0, 7769.0], [51.1, 7769.0], [51.2, 7769.0], [51.3, 7769.0], [51.4, 7769.0], [51.5, 7770.0], [51.6, 7770.0], [51.7, 7770.0], [51.8, 7770.0], [51.9, 7770.0], [52.0, 7792.0], [52.1, 7792.0], [52.2, 7792.0], [52.3, 7792.0], [52.4, 7792.0], [52.5, 7802.0], [52.6, 7802.0], [52.7, 7802.0], [52.8, 7802.0], [52.9, 7802.0], [53.0, 7823.0], [53.1, 7823.0], [53.2, 7823.0], [53.3, 7823.0], [53.4, 7823.0], [53.5, 7837.0], [53.6, 7837.0], [53.7, 7837.0], [53.8, 7837.0], [53.9, 7837.0], [54.0, 7843.0], [54.1, 7843.0], [54.2, 7843.0], [54.3, 7843.0], [54.4, 7843.0], [54.5, 7847.0], [54.6, 7847.0], [54.7, 7847.0], [54.8, 7847.0], [54.9, 7847.0], [55.0, 7855.0], [55.1, 7855.0], [55.2, 7855.0], [55.3, 7855.0], [55.4, 7855.0], [55.5, 7870.0], [55.6, 7870.0], [55.7, 7870.0], [55.8, 7870.0], [55.9, 7870.0], [56.0, 7899.0], [56.1, 7899.0], [56.2, 7899.0], [56.3, 7899.0], [56.4, 7899.0], [56.5, 7899.0], [56.6, 7899.0], [56.7, 7899.0], [56.8, 7899.0], [56.9, 7899.0], [57.0, 7932.0], [57.1, 7932.0], [57.2, 7932.0], [57.3, 7932.0], [57.4, 7932.0], [57.5, 7937.0], [57.6, 7937.0], [57.7, 7937.0], [57.8, 7937.0], [57.9, 7937.0], [58.0, 7952.0], [58.1, 7952.0], [58.2, 7952.0], [58.3, 7952.0], [58.4, 7952.0], [58.5, 7962.0], [58.6, 7962.0], [58.7, 7962.0], [58.8, 7962.0], [58.9, 7962.0], [59.0, 7972.0], [59.1, 7972.0], [59.2, 7972.0], [59.3, 7972.0], [59.4, 7972.0], [59.5, 7989.0], [59.6, 7989.0], [59.7, 7989.0], [59.8, 7989.0], [59.9, 7989.0], [60.0, 8008.0], [60.1, 8008.0], [60.2, 8008.0], [60.3, 8008.0], [60.4, 8008.0], [60.5, 8072.0], [60.6, 8072.0], [60.7, 8072.0], [60.8, 8072.0], [60.9, 8072.0], [61.0, 8077.0], [61.1, 8077.0], [61.2, 8077.0], [61.3, 8077.0], [61.4, 8077.0], [61.5, 8081.0], [61.6, 8081.0], [61.7, 8081.0], [61.8, 8081.0], [61.9, 8081.0], [62.0, 8087.0], [62.1, 8087.0], [62.2, 8087.0], [62.3, 8087.0], [62.4, 8087.0], [62.5, 8108.0], [62.6, 8108.0], [62.7, 8108.0], [62.8, 8108.0], [62.9, 8108.0], [63.0, 8111.0], [63.1, 8111.0], [63.2, 8111.0], [63.3, 8111.0], [63.4, 8111.0], [63.5, 8117.0], [63.6, 8117.0], [63.7, 8117.0], [63.8, 8117.0], [63.9, 8117.0], [64.0, 8132.0], [64.1, 8132.0], [64.2, 8132.0], [64.3, 8132.0], [64.4, 8132.0], [64.5, 8141.0], [64.6, 8141.0], [64.7, 8141.0], [64.8, 8141.0], [64.9, 8141.0], [65.0, 8161.0], [65.1, 8161.0], [65.2, 8161.0], [65.3, 8161.0], [65.4, 8161.0], [65.5, 8161.0], [65.6, 8161.0], [65.7, 8161.0], [65.8, 8161.0], [65.9, 8161.0], [66.0, 8178.0], [66.1, 8178.0], [66.2, 8178.0], [66.3, 8178.0], [66.4, 8178.0], [66.5, 8179.0], [66.6, 8179.0], [66.7, 8179.0], [66.8, 8179.0], [66.9, 8179.0], [67.0, 8185.0], [67.1, 8185.0], [67.2, 8185.0], [67.3, 8185.0], [67.4, 8185.0], [67.5, 8250.0], [67.6, 8250.0], [67.7, 8250.0], [67.8, 8250.0], [67.9, 8250.0], [68.0, 8300.0], [68.1, 8300.0], [68.2, 8300.0], [68.3, 8300.0], [68.4, 8300.0], [68.5, 8305.0], [68.6, 8305.0], [68.7, 8305.0], [68.8, 8305.0], [68.9, 8305.0], [69.0, 8315.0], [69.1, 8315.0], [69.2, 8315.0], [69.3, 8315.0], [69.4, 8315.0], [69.5, 8332.0], [69.6, 8332.0], [69.7, 8332.0], [69.8, 8332.0], [69.9, 8332.0], [70.0, 8350.0], [70.1, 8350.0], [70.2, 8350.0], [70.3, 8350.0], [70.4, 8350.0], [70.5, 8352.0], [70.6, 8352.0], [70.7, 8352.0], [70.8, 8352.0], [70.9, 8352.0], [71.0, 8398.0], [71.1, 8398.0], [71.2, 8398.0], [71.3, 8398.0], [71.4, 8398.0], [71.5, 8408.0], [71.6, 8408.0], [71.7, 8408.0], [71.8, 8408.0], [71.9, 8408.0], [72.0, 8427.0], [72.1, 8427.0], [72.2, 8427.0], [72.3, 8427.0], [72.4, 8427.0], [72.5, 8432.0], [72.6, 8432.0], [72.7, 8432.0], [72.8, 8432.0], [72.9, 8432.0], [73.0, 8445.0], [73.1, 8445.0], [73.2, 8445.0], [73.3, 8445.0], [73.4, 8445.0], [73.5, 8541.0], [73.6, 8541.0], [73.7, 8541.0], [73.8, 8541.0], [73.9, 8541.0], [74.0, 8553.0], [74.1, 8553.0], [74.2, 8553.0], [74.3, 8553.0], [74.4, 8553.0], [74.5, 8584.0], [74.6, 8584.0], [74.7, 8584.0], [74.8, 8584.0], [74.9, 8584.0], [75.0, 8592.0], [75.1, 8592.0], [75.2, 8592.0], [75.3, 8592.0], [75.4, 8592.0], [75.5, 8599.0], [75.6, 8599.0], [75.7, 8599.0], [75.8, 8599.0], [75.9, 8599.0], [76.0, 8627.0], [76.1, 8627.0], [76.2, 8627.0], [76.3, 8627.0], [76.4, 8627.0], [76.5, 8630.0], [76.6, 8630.0], [76.7, 8630.0], [76.8, 8630.0], [76.9, 8630.0], [77.0, 8642.0], [77.1, 8642.0], [77.2, 8642.0], [77.3, 8642.0], [77.4, 8642.0], [77.5, 8699.0], [77.6, 8699.0], [77.7, 8699.0], [77.8, 8699.0], [77.9, 8699.0], [78.0, 8701.0], [78.1, 8701.0], [78.2, 8701.0], [78.3, 8701.0], [78.4, 8701.0], [78.5, 8743.0], [78.6, 8743.0], [78.7, 8743.0], [78.8, 8743.0], [78.9, 8743.0], [79.0, 8791.0], [79.1, 8791.0], [79.2, 8791.0], [79.3, 8791.0], [79.4, 8791.0], [79.5, 8836.0], [79.6, 8836.0], [79.7, 8836.0], [79.8, 8836.0], [79.9, 8836.0], [80.0, 8838.0], [80.1, 8838.0], [80.2, 8838.0], [80.3, 8838.0], [80.4, 8838.0], [80.5, 8848.0], [80.6, 8848.0], [80.7, 8848.0], [80.8, 8848.0], [80.9, 8848.0], [81.0, 8849.0], [81.1, 8849.0], [81.2, 8849.0], [81.3, 8849.0], [81.4, 8849.0], [81.5, 8872.0], [81.6, 8872.0], [81.7, 8872.0], [81.8, 8872.0], [81.9, 8872.0], [82.0, 8894.0], [82.1, 8894.0], [82.2, 8894.0], [82.3, 8894.0], [82.4, 8894.0], [82.5, 9071.0], [82.6, 9071.0], [82.7, 9071.0], [82.8, 9071.0], [82.9, 9071.0], [83.0, 9088.0], [83.1, 9088.0], [83.2, 9088.0], [83.3, 9088.0], [83.4, 9088.0], [83.5, 9140.0], [83.6, 9140.0], [83.7, 9140.0], [83.8, 9140.0], [83.9, 9140.0], [84.0, 9157.0], [84.1, 9157.0], [84.2, 9157.0], [84.3, 9157.0], [84.4, 9157.0], [84.5, 9176.0], [84.6, 9176.0], [84.7, 9176.0], [84.8, 9176.0], [84.9, 9176.0], [85.0, 9221.0], [85.1, 9221.0], [85.2, 9221.0], [85.3, 9221.0], [85.4, 9221.0], [85.5, 9242.0], [85.6, 9242.0], [85.7, 9242.0], [85.8, 9242.0], [85.9, 9242.0], [86.0, 9428.0], [86.1, 9428.0], [86.2, 9428.0], [86.3, 9428.0], [86.4, 9428.0], [86.5, 10376.0], [86.6, 10376.0], [86.7, 10376.0], [86.8, 10376.0], [86.9, 10376.0], [87.0, 10485.0], [87.1, 10485.0], [87.2, 10485.0], [87.3, 10485.0], [87.4, 10485.0], [87.5, 10844.0], [87.6, 10844.0], [87.7, 10844.0], [87.8, 10844.0], [87.9, 10844.0], [88.0, 11361.0], [88.1, 11361.0], [88.2, 11361.0], [88.3, 11361.0], [88.4, 11361.0], [88.5, 11633.0], [88.6, 11633.0], [88.7, 11633.0], [88.8, 11633.0], [88.9, 11633.0], [89.0, 11647.0], [89.1, 11647.0], [89.2, 11647.0], [89.3, 11647.0], [89.4, 11647.0], [89.5, 11654.0], [89.6, 11654.0], [89.7, 11654.0], [89.8, 11654.0], [89.9, 11654.0], [90.0, 11930.0], [90.1, 11930.0], [90.2, 11930.0], [90.3, 11930.0], [90.4, 11930.0], [90.5, 12053.0], [90.6, 12053.0], [90.7, 12053.0], [90.8, 12053.0], [90.9, 12053.0], [91.0, 12171.0], [91.1, 12171.0], [91.2, 12171.0], [91.3, 12171.0], [91.4, 12171.0], [91.5, 12321.0], [91.6, 12321.0], [91.7, 12321.0], [91.8, 12321.0], [91.9, 12321.0], [92.0, 12334.0], [92.1, 12334.0], [92.2, 12334.0], [92.3, 12334.0], [92.4, 12334.0], [92.5, 12833.0], [92.6, 12833.0], [92.7, 12833.0], [92.8, 12833.0], [92.9, 12833.0], [93.0, 13110.0], [93.1, 13110.0], [93.2, 13110.0], [93.3, 13110.0], [93.4, 13110.0], [93.5, 15472.0], [93.6, 15472.0], [93.7, 15472.0], [93.8, 15472.0], [93.9, 15472.0], [94.0, 15638.0], [94.1, 15638.0], [94.2, 15638.0], [94.3, 15638.0], [94.4, 15638.0], [94.5, 16596.0], [94.6, 16596.0], [94.7, 16596.0], [94.8, 16596.0], [94.9, 16596.0], [95.0, 17980.0], [95.1, 17980.0], [95.2, 17980.0], [95.3, 17980.0], [95.4, 17980.0], [95.5, 18079.0], [95.6, 18079.0], [95.7, 18079.0], [95.8, 18079.0], [95.9, 18079.0], [96.0, 18156.0], [96.1, 18156.0], [96.2, 18156.0], [96.3, 18156.0], [96.4, 18156.0], [96.5, 18254.0], [96.6, 18254.0], [96.7, 18254.0], [96.8, 18254.0], [96.9, 18254.0], [97.0, 18270.0], [97.1, 18270.0], [97.2, 18270.0], [97.3, 18270.0], [97.4, 18270.0], [97.5, 18813.0], [97.6, 18813.0], [97.7, 18813.0], [97.8, 18813.0], [97.9, 18813.0], [98.0, 19094.0], [98.1, 19094.0], [98.2, 19094.0], [98.3, 19094.0], [98.4, 19094.0], [98.5, 19983.0], [98.6, 19983.0], [98.7, 19983.0], [98.8, 19983.0], [98.9, 19983.0], [99.0, 20618.0], [99.1, 20618.0], [99.2, 20618.0], [99.3, 20618.0], [99.4, 20618.0], [99.5, 22514.0], [99.6, 22514.0], [99.7, 22514.0], [99.8, 22514.0], [99.9, 22514.0]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[0.0, 6786.0], [0.1, 6786.0], [0.2, 6786.0], [0.3, 6786.0], [0.4, 6786.0], [0.5, 7036.0], [0.6, 7036.0], [0.7, 7036.0], [0.8, 7036.0], [0.9, 7036.0], [1.0, 7221.0], [1.1, 7221.0], [1.2, 7221.0], [1.3, 7221.0], [1.4, 7221.0], [1.5, 7261.0], [1.6, 7261.0], [1.7, 7261.0], [1.8, 7261.0], [1.9, 7261.0], [2.0, 7384.0], [2.1, 7384.0], [2.2, 7384.0], [2.3, 7384.0], [2.4, 7384.0], [2.5, 7392.0], [2.6, 7392.0], [2.7, 7392.0], [2.8, 7392.0], [2.9, 7392.0], [3.0, 7421.0], [3.1, 7421.0], [3.2, 7421.0], [3.3, 7421.0], [3.4, 7421.0], [3.5, 7425.0], [3.6, 7425.0], [3.7, 7425.0], [3.8, 7425.0], [3.9, 7425.0], [4.0, 7479.0], [4.1, 7479.0], [4.2, 7479.0], [4.3, 7479.0], [4.4, 7479.0], [4.5, 7553.0], [4.6, 7553.0], [4.7, 7553.0], [4.8, 7553.0], [4.9, 7553.0], [5.0, 7809.0], [5.1, 7809.0], [5.2, 7809.0], [5.3, 7809.0], [5.4, 7809.0], [5.5, 7985.0], [5.6, 7985.0], [5.7, 7985.0], [5.8, 7985.0], [5.9, 7985.0], [6.0, 8151.0], [6.1, 8151.0], [6.2, 8151.0], [6.3, 8151.0], [6.4, 8151.0], [6.5, 8484.0], [6.6, 8484.0], [6.7, 8484.0], [6.8, 8484.0], [6.9, 8484.0], [7.0, 8532.0], [7.1, 8532.0], [7.2, 8532.0], [7.3, 8532.0], [7.4, 8532.0], [7.5, 8560.0], [7.6, 8560.0], [7.7, 8560.0], [7.8, 8560.0], [7.9, 8560.0], [8.0, 8745.0], [8.1, 8745.0], [8.2, 8745.0], [8.3, 8745.0], [8.4, 8745.0], [8.5, 8745.0], [8.6, 8745.0], [8.7, 8745.0], [8.8, 8745.0], [8.9, 8745.0], [9.0, 8865.0], [9.1, 8865.0], [9.2, 8865.0], [9.3, 8865.0], [9.4, 8865.0], [9.5, 8866.0], [9.6, 8866.0], [9.7, 8866.0], [9.8, 8866.0], [9.9, 8866.0], [10.0, 8877.0], [10.1, 8877.0], [10.2, 8877.0], [10.3, 8877.0], [10.4, 8877.0], [10.5, 9259.0], [10.6, 9259.0], [10.7, 9259.0], [10.8, 9259.0], [10.9, 9259.0], [11.0, 9330.0], [11.1, 9330.0], [11.2, 9330.0], [11.3, 9330.0], [11.4, 9330.0], [11.5, 9495.0], [11.6, 9495.0], [11.7, 9495.0], [11.8, 9495.0], [11.9, 9495.0], [12.0, 9584.0], [12.1, 9584.0], [12.2, 9584.0], [12.3, 9584.0], [12.4, 9584.0], [12.5, 9754.0], [12.6, 9754.0], [12.7, 9754.0], [12.8, 9754.0], [12.9, 9754.0], [13.0, 9820.0], [13.1, 9820.0], [13.2, 9820.0], [13.3, 9820.0], [13.4, 9820.0], [13.5, 9855.0], [13.6, 9855.0], [13.7, 9855.0], [13.8, 9855.0], [13.9, 9855.0], [14.0, 9857.0], [14.1, 9857.0], [14.2, 9857.0], [14.3, 9857.0], [14.4, 9857.0], [14.5, 9988.0], [14.6, 9988.0], [14.7, 9988.0], [14.8, 9988.0], [14.9, 9988.0], [15.0, 10118.0], [15.1, 10118.0], [15.2, 10118.0], [15.3, 10118.0], [15.4, 10118.0], [15.5, 10261.0], [15.6, 10261.0], [15.7, 10261.0], [15.8, 10261.0], [15.9, 10261.0], [16.0, 10326.0], [16.1, 10326.0], [16.2, 10326.0], [16.3, 10326.0], [16.4, 10326.0], [16.5, 10333.0], [16.6, 10333.0], [16.7, 10333.0], [16.8, 10333.0], [16.9, 10333.0], [17.0, 10347.0], [17.1, 10347.0], [17.2, 10347.0], [17.3, 10347.0], [17.4, 10347.0], [17.5, 10423.0], [17.6, 10423.0], [17.7, 10423.0], [17.8, 10423.0], [17.9, 10423.0], [18.0, 10432.0], [18.1, 10432.0], [18.2, 10432.0], [18.3, 10432.0], [18.4, 10432.0], [18.5, 10434.0], [18.6, 10434.0], [18.7, 10434.0], [18.8, 10434.0], [18.9, 10434.0], [19.0, 10605.0], [19.1, 10605.0], [19.2, 10605.0], [19.3, 10605.0], [19.4, 10605.0], [19.5, 10780.0], [19.6, 10780.0], [19.7, 10780.0], [19.8, 10780.0], [19.9, 10780.0], [20.0, 10793.0], [20.1, 10793.0], [20.2, 10793.0], [20.3, 10793.0], [20.4, 10793.0], [20.5, 10935.0], [20.6, 10935.0], [20.7, 10935.0], [20.8, 10935.0], [20.9, 10935.0], [21.0, 11465.0], [21.1, 11465.0], [21.2, 11465.0], [21.3, 11465.0], [21.4, 11465.0], [21.5, 11583.0], [21.6, 11583.0], [21.7, 11583.0], [21.8, 11583.0], [21.9, 11583.0], [22.0, 11849.0], [22.1, 11849.0], [22.2, 11849.0], [22.3, 11849.0], [22.4, 11849.0], [22.5, 12610.0], [22.6, 12610.0], [22.7, 12610.0], [22.8, 12610.0], [22.9, 12610.0], [23.0, 12844.0], [23.1, 12844.0], [23.2, 12844.0], [23.3, 12844.0], [23.4, 12844.0], [23.5, 16379.0], [23.6, 16379.0], [23.7, 16379.0], [23.8, 16379.0], [23.9, 16379.0], [24.0, 16430.0], [24.1, 16430.0], [24.2, 16430.0], [24.3, 16430.0], [24.4, 16430.0], [24.5, 16482.0], [24.6, 16482.0], [24.7, 16482.0], [24.8, 16482.0], [24.9, 16482.0], [25.0, 16504.0], [25.1, 16504.0], [25.2, 16504.0], [25.3, 16504.0], [25.4, 16504.0], [25.5, 16826.0], [25.6, 16826.0], [25.7, 16826.0], [25.8, 16826.0], [25.9, 16826.0], [26.0, 17398.0], [26.1, 17398.0], [26.2, 17398.0], [26.3, 17398.0], [26.4, 17398.0], [26.5, 17404.0], [26.6, 17404.0], [26.7, 17404.0], [26.8, 17404.0], [26.9, 17404.0], [27.0, 17877.0], [27.1, 17877.0], [27.2, 17877.0], [27.3, 17877.0], [27.4, 17877.0], [27.5, 18194.0], [27.6, 18194.0], [27.7, 18194.0], [27.8, 18194.0], [27.9, 18194.0], [28.0, 18254.0], [28.1, 18254.0], [28.2, 18254.0], [28.3, 18254.0], [28.4, 18254.0], [28.5, 18479.0], [28.6, 18479.0], [28.7, 18479.0], [28.8, 18479.0], [28.9, 18479.0], [29.0, 18554.0], [29.1, 18554.0], [29.2, 18554.0], [29.3, 18554.0], [29.4, 18554.0], [29.5, 18611.0], [29.6, 18611.0], [29.7, 18611.0], [29.8, 18611.0], [29.9, 18611.0], [30.0, 18613.0], [30.1, 18613.0], [30.2, 18613.0], [30.3, 18613.0], [30.4, 18613.0], [30.5, 18625.0], [30.6, 18625.0], [30.7, 18625.0], [30.8, 18625.0], [30.9, 18625.0], [31.0, 18629.0], [31.1, 18629.0], [31.2, 18629.0], [31.3, 18629.0], [31.4, 18629.0], [31.5, 18712.0], [31.6, 18712.0], [31.7, 18712.0], [31.8, 18712.0], [31.9, 18712.0], [32.0, 18748.0], [32.1, 18748.0], [32.2, 18748.0], [32.3, 18748.0], [32.4, 18748.0], [32.5, 18781.0], [32.6, 18781.0], [32.7, 18781.0], [32.8, 18781.0], [32.9, 18781.0], [33.0, 18880.0], [33.1, 18880.0], [33.2, 18880.0], [33.3, 18880.0], [33.4, 18880.0], [33.5, 18894.0], [33.6, 18894.0], [33.7, 18894.0], [33.8, 18894.0], [33.9, 18894.0], [34.0, 18894.0], [34.1, 18894.0], [34.2, 18894.0], [34.3, 18894.0], [34.4, 18894.0], [34.5, 18989.0], [34.6, 18989.0], [34.7, 18989.0], [34.8, 18989.0], [34.9, 18989.0], [35.0, 19037.0], [35.1, 19037.0], [35.2, 19037.0], [35.3, 19037.0], [35.4, 19037.0], [35.5, 19050.0], [35.6, 19050.0], [35.7, 19050.0], [35.8, 19050.0], [35.9, 19050.0], [36.0, 19062.0], [36.1, 19062.0], [36.2, 19062.0], [36.3, 19062.0], [36.4, 19062.0], [36.5, 19151.0], [36.6, 19151.0], [36.7, 19151.0], [36.8, 19151.0], [36.9, 19151.0], [37.0, 19291.0], [37.1, 19291.0], [37.2, 19291.0], [37.3, 19291.0], [37.4, 19291.0], [37.5, 19297.0], [37.6, 19297.0], [37.7, 19297.0], [37.8, 19297.0], [37.9, 19297.0], [38.0, 19329.0], [38.1, 19329.0], [38.2, 19329.0], [38.3, 19329.0], [38.4, 19329.0], [38.5, 19399.0], [38.6, 19399.0], [38.7, 19399.0], [38.8, 19399.0], [38.9, 19399.0], [39.0, 19437.0], [39.1, 19437.0], [39.2, 19437.0], [39.3, 19437.0], [39.4, 19437.0], [39.5, 19522.0], [39.6, 19522.0], [39.7, 19522.0], [39.8, 19522.0], [39.9, 19522.0], [40.0, 19561.0], [40.1, 19561.0], [40.2, 19561.0], [40.3, 19561.0], [40.4, 19561.0], [40.5, 19568.0], [40.6, 19568.0], [40.7, 19568.0], [40.8, 19568.0], [40.9, 19568.0], [41.0, 19570.0], [41.1, 19570.0], [41.2, 19570.0], [41.3, 19570.0], [41.4, 19570.0], [41.5, 19624.0], [41.6, 19624.0], [41.7, 19624.0], [41.8, 19624.0], [41.9, 19624.0], [42.0, 19666.0], [42.1, 19666.0], [42.2, 19666.0], [42.3, 19666.0], [42.4, 19666.0], [42.5, 19762.0], [42.6, 19762.0], [42.7, 19762.0], [42.8, 19762.0], [42.9, 19762.0], [43.0, 19789.0], [43.1, 19789.0], [43.2, 19789.0], [43.3, 19789.0], [43.4, 19789.0], [43.5, 19802.0], [43.6, 19802.0], [43.7, 19802.0], [43.8, 19802.0], [43.9, 19802.0], [44.0, 19823.0], [44.1, 19823.0], [44.2, 19823.0], [44.3, 19823.0], [44.4, 19823.0], [44.5, 19882.0], [44.6, 19882.0], [44.7, 19882.0], [44.8, 19882.0], [44.9, 19882.0], [45.0, 19885.0], [45.1, 19885.0], [45.2, 19885.0], [45.3, 19885.0], [45.4, 19885.0], [45.5, 19898.0], [45.6, 19898.0], [45.7, 19898.0], [45.8, 19898.0], [45.9, 19898.0], [46.0, 19940.0], [46.1, 19940.0], [46.2, 19940.0], [46.3, 19940.0], [46.4, 19940.0], [46.5, 20015.0], [46.6, 20015.0], [46.7, 20015.0], [46.8, 20015.0], [46.9, 20015.0], [47.0, 20030.0], [47.1, 20030.0], [47.2, 20030.0], [47.3, 20030.0], [47.4, 20030.0], [47.5, 20045.0], [47.6, 20045.0], [47.7, 20045.0], [47.8, 20045.0], [47.9, 20045.0], [48.0, 20050.0], [48.1, 20050.0], [48.2, 20050.0], [48.3, 20050.0], [48.4, 20050.0], [48.5, 20059.0], [48.6, 20059.0], [48.7, 20059.0], [48.8, 20059.0], [48.9, 20059.0], [49.0, 20134.0], [49.1, 20134.0], [49.2, 20134.0], [49.3, 20134.0], [49.4, 20134.0], [49.5, 20147.0], [49.6, 20147.0], [49.7, 20147.0], [49.8, 20147.0], [49.9, 20147.0], [50.0, 20162.0], [50.1, 20162.0], [50.2, 20162.0], [50.3, 20162.0], [50.4, 20162.0], [50.5, 20170.0], [50.6, 20170.0], [50.7, 20170.0], [50.8, 20170.0], [50.9, 20170.0], [51.0, 20177.0], [51.1, 20177.0], [51.2, 20177.0], [51.3, 20177.0], [51.4, 20177.0], [51.5, 20193.0], [51.6, 20193.0], [51.7, 20193.0], [51.8, 20193.0], [51.9, 20193.0], [52.0, 20201.0], [52.1, 20201.0], [52.2, 20201.0], [52.3, 20201.0], [52.4, 20201.0], [52.5, 20204.0], [52.6, 20204.0], [52.7, 20204.0], [52.8, 20204.0], [52.9, 20204.0], [53.0, 20211.0], [53.1, 20211.0], [53.2, 20211.0], [53.3, 20211.0], [53.4, 20211.0], [53.5, 20213.0], [53.6, 20213.0], [53.7, 20213.0], [53.8, 20213.0], [53.9, 20213.0], [54.0, 20217.0], [54.1, 20217.0], [54.2, 20217.0], [54.3, 20217.0], [54.4, 20217.0], [54.5, 20257.0], [54.6, 20257.0], [54.7, 20257.0], [54.8, 20257.0], [54.9, 20257.0], [55.0, 20259.0], [55.1, 20259.0], [55.2, 20259.0], [55.3, 20259.0], [55.4, 20259.0], [55.5, 20268.0], [55.6, 20268.0], [55.7, 20268.0], [55.8, 20268.0], [55.9, 20268.0], [56.0, 20289.0], [56.1, 20289.0], [56.2, 20289.0], [56.3, 20289.0], [56.4, 20289.0], [56.5, 20331.0], [56.6, 20331.0], [56.7, 20331.0], [56.8, 20331.0], [56.9, 20331.0], [57.0, 20370.0], [57.1, 20370.0], [57.2, 20370.0], [57.3, 20370.0], [57.4, 20370.0], [57.5, 20413.0], [57.6, 20413.0], [57.7, 20413.0], [57.8, 20413.0], [57.9, 20413.0], [58.0, 20448.0], [58.1, 20448.0], [58.2, 20448.0], [58.3, 20448.0], [58.4, 20448.0], [58.5, 20470.0], [58.6, 20470.0], [58.7, 20470.0], [58.8, 20470.0], [58.9, 20470.0], [59.0, 20529.0], [59.1, 20529.0], [59.2, 20529.0], [59.3, 20529.0], [59.4, 20529.0], [59.5, 20577.0], [59.6, 20577.0], [59.7, 20577.0], [59.8, 20577.0], [59.9, 20577.0], [60.0, 20588.0], [60.1, 20588.0], [60.2, 20588.0], [60.3, 20588.0], [60.4, 20588.0], [60.5, 20610.0], [60.6, 20610.0], [60.7, 20610.0], [60.8, 20610.0], [60.9, 20610.0], [61.0, 20623.0], [61.1, 20623.0], [61.2, 20623.0], [61.3, 20623.0], [61.4, 20623.0], [61.5, 20635.0], [61.6, 20635.0], [61.7, 20635.0], [61.8, 20635.0], [61.9, 20635.0], [62.0, 20668.0], [62.1, 20668.0], [62.2, 20668.0], [62.3, 20668.0], [62.4, 20668.0], [62.5, 20747.0], [62.6, 20747.0], [62.7, 20747.0], [62.8, 20747.0], [62.9, 20747.0], [63.0, 20754.0], [63.1, 20754.0], [63.2, 20754.0], [63.3, 20754.0], [63.4, 20754.0], [63.5, 20777.0], [63.6, 20777.0], [63.7, 20777.0], [63.8, 20777.0], [63.9, 20777.0], [64.0, 20793.0], [64.1, 20793.0], [64.2, 20793.0], [64.3, 20793.0], [64.4, 20793.0], [64.5, 20845.0], [64.6, 20845.0], [64.7, 20845.0], [64.8, 20845.0], [64.9, 20845.0], [65.0, 20882.0], [65.1, 20882.0], [65.2, 20882.0], [65.3, 20882.0], [65.4, 20882.0], [65.5, 20925.0], [65.6, 20925.0], [65.7, 20925.0], [65.8, 20925.0], [65.9, 20925.0], [66.0, 20956.0], [66.1, 20956.0], [66.2, 20956.0], [66.3, 20956.0], [66.4, 20956.0], [66.5, 21134.0], [66.6, 21134.0], [66.7, 21134.0], [66.8, 21134.0], [66.9, 21134.0], [67.0, 21176.0], [67.1, 21176.0], [67.2, 21176.0], [67.3, 21176.0], [67.4, 21176.0], [67.5, 21190.0], [67.6, 21190.0], [67.7, 21190.0], [67.8, 21190.0], [67.9, 21190.0], [68.0, 21207.0], [68.1, 21207.0], [68.2, 21207.0], [68.3, 21207.0], [68.4, 21207.0], [68.5, 21241.0], [68.6, 21241.0], [68.7, 21241.0], [68.8, 21241.0], [68.9, 21241.0], [69.0, 21241.0], [69.1, 21241.0], [69.2, 21241.0], [69.3, 21241.0], [69.4, 21241.0], [69.5, 21259.0], [69.6, 21259.0], [69.7, 21259.0], [69.8, 21259.0], [69.9, 21259.0], [70.0, 21363.0], [70.1, 21363.0], [70.2, 21363.0], [70.3, 21363.0], [70.4, 21363.0], [70.5, 21463.0], [70.6, 21463.0], [70.7, 21463.0], [70.8, 21463.0], [70.9, 21463.0], [71.0, 21501.0], [71.1, 21501.0], [71.2, 21501.0], [71.3, 21501.0], [71.4, 21501.0], [71.5, 21513.0], [71.6, 21513.0], [71.7, 21513.0], [71.8, 21513.0], [71.9, 21513.0], [72.0, 21562.0], [72.1, 21562.0], [72.2, 21562.0], [72.3, 21562.0], [72.4, 21562.0], [72.5, 21925.0], [72.6, 21925.0], [72.7, 21925.0], [72.8, 21925.0], [72.9, 21925.0], [73.0, 22214.0], [73.1, 22214.0], [73.2, 22214.0], [73.3, 22214.0], [73.4, 22214.0], [73.5, 22220.0], [73.6, 22220.0], [73.7, 22220.0], [73.8, 22220.0], [73.9, 22220.0], [74.0, 22344.0], [74.1, 22344.0], [74.2, 22344.0], [74.3, 22344.0], [74.4, 22344.0], [74.5, 22909.0], [74.6, 22909.0], [74.7, 22909.0], [74.8, 22909.0], [74.9, 22909.0], [75.0, 22911.0], [75.1, 22911.0], [75.2, 22911.0], [75.3, 22911.0], [75.4, 22911.0], [75.5, 23011.0], [75.6, 23011.0], [75.7, 23011.0], [75.8, 23011.0], [75.9, 23011.0], [76.0, 23029.0], [76.1, 23029.0], [76.2, 23029.0], [76.3, 23029.0], [76.4, 23029.0], [76.5, 23098.0], [76.6, 23098.0], [76.7, 23098.0], [76.8, 23098.0], [76.9, 23098.0], [77.0, 23295.0], [77.1, 23295.0], [77.2, 23295.0], [77.3, 23295.0], [77.4, 23295.0], [77.5, 23369.0], [77.6, 23369.0], [77.7, 23369.0], [77.8, 23369.0], [77.9, 23369.0], [78.0, 23604.0], [78.1, 23604.0], [78.2, 23604.0], [78.3, 23604.0], [78.4, 23604.0], [78.5, 23621.0], [78.6, 23621.0], [78.7, 23621.0], [78.8, 23621.0], [78.9, 23621.0], [79.0, 23699.0], [79.1, 23699.0], [79.2, 23699.0], [79.3, 23699.0], [79.4, 23699.0], [79.5, 23740.0], [79.6, 23740.0], [79.7, 23740.0], [79.8, 23740.0], [79.9, 23740.0], [80.0, 23761.0], [80.1, 23761.0], [80.2, 23761.0], [80.3, 23761.0], [80.4, 23761.0], [80.5, 23825.0], [80.6, 23825.0], [80.7, 23825.0], [80.8, 23825.0], [80.9, 23825.0], [81.0, 23875.0], [81.1, 23875.0], [81.2, 23875.0], [81.3, 23875.0], [81.4, 23875.0], [81.5, 23911.0], [81.6, 23911.0], [81.7, 23911.0], [81.8, 23911.0], [81.9, 23911.0], [82.0, 23996.0], [82.1, 23996.0], [82.2, 23996.0], [82.3, 23996.0], [82.4, 23996.0], [82.5, 24079.0], [82.6, 24079.0], [82.7, 24079.0], [82.8, 24079.0], [82.9, 24079.0], [83.0, 24091.0], [83.1, 24091.0], [83.2, 24091.0], [83.3, 24091.0], [83.4, 24091.0], [83.5, 24144.0], [83.6, 24144.0], [83.7, 24144.0], [83.8, 24144.0], [83.9, 24144.0], [84.0, 24144.0], [84.1, 24144.0], [84.2, 24144.0], [84.3, 24144.0], [84.4, 24144.0], [84.5, 24191.0], [84.6, 24191.0], [84.7, 24191.0], [84.8, 24191.0], [84.9, 24191.0], [85.0, 24214.0], [85.1, 24214.0], [85.2, 24214.0], [85.3, 24214.0], [85.4, 24214.0], [85.5, 24237.0], [85.6, 24237.0], [85.7, 24237.0], [85.8, 24237.0], [85.9, 24237.0], [86.0, 24283.0], [86.1, 24283.0], [86.2, 24283.0], [86.3, 24283.0], [86.4, 24283.0], [86.5, 24285.0], [86.6, 24285.0], [86.7, 24285.0], [86.8, 24285.0], [86.9, 24285.0], [87.0, 24320.0], [87.1, 24320.0], [87.2, 24320.0], [87.3, 24320.0], [87.4, 24320.0], [87.5, 24532.0], [87.6, 24532.0], [87.7, 24532.0], [87.8, 24532.0], [87.9, 24532.0], [88.0, 24791.0], [88.1, 24791.0], [88.2, 24791.0], [88.3, 24791.0], [88.4, 24791.0], [88.5, 24836.0], [88.6, 24836.0], [88.7, 24836.0], [88.8, 24836.0], [88.9, 24836.0], [89.0, 24871.0], [89.1, 24871.0], [89.2, 24871.0], [89.3, 24871.0], [89.4, 24871.0], [89.5, 25100.0], [89.6, 25100.0], [89.7, 25100.0], [89.8, 25100.0], [89.9, 25100.0], [90.0, 25115.0], [90.1, 25115.0], [90.2, 25115.0], [90.3, 25115.0], [90.4, 25115.0], [90.5, 25252.0], [90.6, 25252.0], [90.7, 25252.0], [90.8, 25252.0], [90.9, 25252.0], [91.0, 25507.0], [91.1, 25507.0], [91.2, 25507.0], [91.3, 25507.0], [91.4, 25507.0], [91.5, 25626.0], [91.6, 25626.0], [91.7, 25626.0], [91.8, 25626.0], [91.9, 25626.0], [92.0, 26019.0], [92.1, 26019.0], [92.2, 26019.0], [92.3, 26019.0], [92.4, 26019.0], [92.5, 26277.0], [92.6, 26277.0], [92.7, 26277.0], [92.8, 26277.0], [92.9, 26277.0], [93.0, 26539.0], [93.1, 26539.0], [93.2, 26539.0], [93.3, 26539.0], [93.4, 26539.0], [93.5, 26687.0], [93.6, 26687.0], [93.7, 26687.0], [93.8, 26687.0], [93.9, 26687.0], [94.0, 26700.0], [94.1, 26700.0], [94.2, 26700.0], [94.3, 26700.0], [94.4, 26700.0], [94.5, 26944.0], [94.6, 26944.0], [94.7, 26944.0], [94.8, 26944.0], [94.9, 26944.0], [95.0, 27087.0], [95.1, 27087.0], [95.2, 27087.0], [95.3, 27087.0], [95.4, 27087.0], [95.5, 27195.0], [95.6, 27195.0], [95.7, 27195.0], [95.8, 27195.0], [95.9, 27195.0], [96.0, 27339.0], [96.1, 27339.0], [96.2, 27339.0], [96.3, 27339.0], [96.4, 27339.0], [96.5, 27366.0], [96.6, 27366.0], [96.7, 27366.0], [96.8, 27366.0], [96.9, 27366.0], [97.0, 27421.0], [97.1, 27421.0], [97.2, 27421.0], [97.3, 27421.0], [97.4, 27421.0], [97.5, 27550.0], [97.6, 27550.0], [97.7, 27550.0], [97.8, 27550.0], [97.9, 27550.0], [98.0, 27571.0], [98.1, 27571.0], [98.2, 27571.0], [98.3, 27571.0], [98.4, 27571.0], [98.5, 28421.0], [98.6, 28421.0], [98.7, 28421.0], [98.8, 28421.0], [98.9, 28421.0], [99.0, 28482.0], [99.1, 28482.0], [99.2, 28482.0], [99.3, 28482.0], [99.4, 28482.0], [99.5, 28763.0], [99.6, 28763.0], [99.7, 28763.0], [99.8, 28763.0], [99.9, 28763.0]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[0.0, 12533.0], [0.1, 12533.0], [0.2, 12533.0], [0.3, 12533.0], [0.4, 12533.0], [0.5, 14372.0], [0.6, 14372.0], [0.7, 14372.0], [0.8, 14372.0], [0.9, 14372.0], [1.0, 14476.0], [1.1, 14476.0], [1.2, 14476.0], [1.3, 14476.0], [1.4, 14476.0], [1.5, 14611.0], [1.6, 14611.0], [1.7, 14611.0], [1.8, 14611.0], [1.9, 14611.0], [2.0, 14698.0], [2.1, 14698.0], [2.2, 14698.0], [2.3, 14698.0], [2.4, 14698.0], [2.5, 14731.0], [2.6, 14731.0], [2.7, 14731.0], [2.8, 14731.0], [2.9, 14731.0], [3.0, 15121.0], [3.1, 15121.0], [3.2, 15121.0], [3.3, 15121.0], [3.4, 15121.0], [3.5, 15217.0], [3.6, 15217.0], [3.7, 15217.0], [3.8, 15217.0], [3.9, 15217.0], [4.0, 15466.0], [4.1, 15466.0], [4.2, 15466.0], [4.3, 15466.0], [4.4, 15466.0], [4.5, 15486.0], [4.6, 15486.0], [4.7, 15486.0], [4.8, 15486.0], [4.9, 15486.0], [5.0, 15611.0], [5.1, 15611.0], [5.2, 15611.0], [5.3, 15611.0], [5.4, 15611.0], [5.5, 15636.0], [5.6, 15636.0], [5.7, 15636.0], [5.8, 15636.0], [5.9, 15636.0], [6.0, 15787.0], [6.1, 15787.0], [6.2, 15787.0], [6.3, 15787.0], [6.4, 15787.0], [6.5, 15810.0], [6.6, 15810.0], [6.7, 15810.0], [6.8, 15810.0], [6.9, 15810.0], [7.0, 15821.0], [7.1, 15821.0], [7.2, 15821.0], [7.3, 15821.0], [7.4, 15821.0], [7.5, 15922.0], [7.6, 15922.0], [7.7, 15922.0], [7.8, 15922.0], [7.9, 15922.0], [8.0, 15991.0], [8.1, 15991.0], [8.2, 15991.0], [8.3, 15991.0], [8.4, 15991.0], [8.5, 16111.0], [8.6, 16111.0], [8.7, 16111.0], [8.8, 16111.0], [8.9, 16111.0], [9.0, 16158.0], [9.1, 16158.0], [9.2, 16158.0], [9.3, 16158.0], [9.4, 16158.0], [9.5, 16161.0], [9.6, 16161.0], [9.7, 16161.0], [9.8, 16161.0], [9.9, 16161.0], [10.0, 16415.0], [10.1, 16415.0], [10.2, 16415.0], [10.3, 16415.0], [10.4, 16415.0], [10.5, 16439.0], [10.6, 16439.0], [10.7, 16439.0], [10.8, 16439.0], [10.9, 16439.0], [11.0, 16452.0], [11.1, 16452.0], [11.2, 16452.0], [11.3, 16452.0], [11.4, 16452.0], [11.5, 16474.0], [11.6, 16474.0], [11.7, 16474.0], [11.8, 16474.0], [11.9, 16474.0], [12.0, 16478.0], [12.1, 16478.0], [12.2, 16478.0], [12.3, 16478.0], [12.4, 16478.0], [12.5, 16508.0], [12.6, 16508.0], [12.7, 16508.0], [12.8, 16508.0], [12.9, 16508.0], [13.0, 16727.0], [13.1, 16727.0], [13.2, 16727.0], [13.3, 16727.0], [13.4, 16727.0], [13.5, 16742.0], [13.6, 16742.0], [13.7, 16742.0], [13.8, 16742.0], [13.9, 16742.0], [14.0, 16776.0], [14.1, 16776.0], [14.2, 16776.0], [14.3, 16776.0], [14.4, 16776.0], [14.5, 16800.0], [14.6, 16800.0], [14.7, 16800.0], [14.8, 16800.0], [14.9, 16800.0], [15.0, 17049.0], [15.1, 17049.0], [15.2, 17049.0], [15.3, 17049.0], [15.4, 17049.0], [15.5, 17166.0], [15.6, 17166.0], [15.7, 17166.0], [15.8, 17166.0], [15.9, 17166.0], [16.0, 17228.0], [16.1, 17228.0], [16.2, 17228.0], [16.3, 17228.0], [16.4, 17228.0], [16.5, 17235.0], [16.6, 17235.0], [16.7, 17235.0], [16.8, 17235.0], [16.9, 17235.0], [17.0, 17361.0], [17.1, 17361.0], [17.2, 17361.0], [17.3, 17361.0], [17.4, 17361.0], [17.5, 17385.0], [17.6, 17385.0], [17.7, 17385.0], [17.8, 17385.0], [17.9, 17385.0], [18.0, 17449.0], [18.1, 17449.0], [18.2, 17449.0], [18.3, 17449.0], [18.4, 17449.0], [18.5, 17519.0], [18.6, 17519.0], [18.7, 17519.0], [18.8, 17519.0], [18.9, 17519.0], [19.0, 17615.0], [19.1, 17615.0], [19.2, 17615.0], [19.3, 17615.0], [19.4, 17615.0], [19.5, 17710.0], [19.6, 17710.0], [19.7, 17710.0], [19.8, 17710.0], [19.9, 17710.0], [20.0, 17724.0], [20.1, 17724.0], [20.2, 17724.0], [20.3, 17724.0], [20.4, 17724.0], [20.5, 17760.0], [20.6, 17760.0], [20.7, 17760.0], [20.8, 17760.0], [20.9, 17760.0], [21.0, 18013.0], [21.1, 18013.0], [21.2, 18013.0], [21.3, 18013.0], [21.4, 18013.0], [21.5, 19132.0], [21.6, 19132.0], [21.7, 19132.0], [21.8, 19132.0], [21.9, 19132.0], [22.0, 19273.0], [22.1, 19273.0], [22.2, 19273.0], [22.3, 19273.0], [22.4, 19273.0], [22.5, 19935.0], [22.6, 19935.0], [22.7, 19935.0], [22.8, 19935.0], [22.9, 19935.0], [23.0, 20681.0], [23.1, 20681.0], [23.2, 20681.0], [23.3, 20681.0], [23.4, 20681.0], [23.5, 23301.0], [23.6, 23301.0], [23.7, 23301.0], [23.8, 23301.0], [23.9, 23301.0], [24.0, 23681.0], [24.1, 23681.0], [24.2, 23681.0], [24.3, 23681.0], [24.4, 23681.0], [24.5, 23682.0], [24.6, 23682.0], [24.7, 23682.0], [24.8, 23682.0], [24.9, 23682.0], [25.0, 23865.0], [25.1, 23865.0], [25.2, 23865.0], [25.3, 23865.0], [25.4, 23865.0], [25.5, 24233.0], [25.6, 24233.0], [25.7, 24233.0], [25.8, 24233.0], [25.9, 24233.0], [26.0, 24511.0], [26.1, 24511.0], [26.2, 24511.0], [26.3, 24511.0], [26.4, 24511.0], [26.5, 24804.0], [26.6, 24804.0], [26.7, 24804.0], [26.8, 24804.0], [26.9, 24804.0], [27.0, 25076.0], [27.1, 25076.0], [27.2, 25076.0], [27.3, 25076.0], [27.4, 25076.0], [27.5, 25192.0], [27.6, 25192.0], [27.7, 25192.0], [27.8, 25192.0], [27.9, 25192.0], [28.0, 25245.0], [28.1, 25245.0], [28.2, 25245.0], [28.3, 25245.0], [28.4, 25245.0], [28.5, 25590.0], [28.6, 25590.0], [28.7, 25590.0], [28.8, 25590.0], [28.9, 25590.0], [29.0, 25680.0], [29.1, 25680.0], [29.2, 25680.0], [29.3, 25680.0], [29.4, 25680.0], [29.5, 25906.0], [29.6, 25906.0], [29.7, 25906.0], [29.8, 25906.0], [29.9, 25906.0], [30.0, 25917.0], [30.1, 25917.0], [30.2, 25917.0], [30.3, 25917.0], [30.4, 25917.0], [30.5, 26100.0], [30.6, 26100.0], [30.7, 26100.0], [30.8, 26100.0], [30.9, 26100.0], [31.0, 26239.0], [31.1, 26239.0], [31.2, 26239.0], [31.3, 26239.0], [31.4, 26239.0], [31.5, 26283.0], [31.6, 26283.0], [31.7, 26283.0], [31.8, 26283.0], [31.9, 26283.0], [32.0, 26303.0], [32.1, 26303.0], [32.2, 26303.0], [32.3, 26303.0], [32.4, 26303.0], [32.5, 26349.0], [32.6, 26349.0], [32.7, 26349.0], [32.8, 26349.0], [32.9, 26349.0], [33.0, 26401.0], [33.1, 26401.0], [33.2, 26401.0], [33.3, 26401.0], [33.4, 26401.0], [33.5, 26412.0], [33.6, 26412.0], [33.7, 26412.0], [33.8, 26412.0], [33.9, 26412.0], [34.0, 26417.0], [34.1, 26417.0], [34.2, 26417.0], [34.3, 26417.0], [34.4, 26417.0], [34.5, 26509.0], [34.6, 26509.0], [34.7, 26509.0], [34.8, 26509.0], [34.9, 26509.0], [35.0, 26517.0], [35.1, 26517.0], [35.2, 26517.0], [35.3, 26517.0], [35.4, 26517.0], [35.5, 26595.0], [35.6, 26595.0], [35.7, 26595.0], [35.8, 26595.0], [35.9, 26595.0], [36.0, 26608.0], [36.1, 26608.0], [36.2, 26608.0], [36.3, 26608.0], [36.4, 26608.0], [36.5, 26613.0], [36.6, 26613.0], [36.7, 26613.0], [36.8, 26613.0], [36.9, 26613.0], [37.0, 26620.0], [37.1, 26620.0], [37.2, 26620.0], [37.3, 26620.0], [37.4, 26620.0], [37.5, 26673.0], [37.6, 26673.0], [37.7, 26673.0], [37.8, 26673.0], [37.9, 26673.0], [38.0, 26685.0], [38.1, 26685.0], [38.2, 26685.0], [38.3, 26685.0], [38.4, 26685.0], [38.5, 26731.0], [38.6, 26731.0], [38.7, 26731.0], [38.8, 26731.0], [38.9, 26731.0], [39.0, 26756.0], [39.1, 26756.0], [39.2, 26756.0], [39.3, 26756.0], [39.4, 26756.0], [39.5, 26823.0], [39.6, 26823.0], [39.7, 26823.0], [39.8, 26823.0], [39.9, 26823.0], [40.0, 26856.0], [40.1, 26856.0], [40.2, 26856.0], [40.3, 26856.0], [40.4, 26856.0], [40.5, 26894.0], [40.6, 26894.0], [40.7, 26894.0], [40.8, 26894.0], [40.9, 26894.0], [41.0, 26897.0], [41.1, 26897.0], [41.2, 26897.0], [41.3, 26897.0], [41.4, 26897.0], [41.5, 26914.0], [41.6, 26914.0], [41.7, 26914.0], [41.8, 26914.0], [41.9, 26914.0], [42.0, 27038.0], [42.1, 27038.0], [42.2, 27038.0], [42.3, 27038.0], [42.4, 27038.0], [42.5, 27155.0], [42.6, 27155.0], [42.7, 27155.0], [42.8, 27155.0], [42.9, 27155.0], [43.0, 27172.0], [43.1, 27172.0], [43.2, 27172.0], [43.3, 27172.0], [43.4, 27172.0], [43.5, 27381.0], [43.6, 27381.0], [43.7, 27381.0], [43.8, 27381.0], [43.9, 27381.0], [44.0, 27401.0], [44.1, 27401.0], [44.2, 27401.0], [44.3, 27401.0], [44.4, 27401.0], [44.5, 27538.0], [44.6, 27538.0], [44.7, 27538.0], [44.8, 27538.0], [44.9, 27538.0], [45.0, 27605.0], [45.1, 27605.0], [45.2, 27605.0], [45.3, 27605.0], [45.4, 27605.0], [45.5, 27679.0], [45.6, 27679.0], [45.7, 27679.0], [45.8, 27679.0], [45.9, 27679.0], [46.0, 27679.0], [46.1, 27679.0], [46.2, 27679.0], [46.3, 27679.0], [46.4, 27679.0], [46.5, 27719.0], [46.6, 27719.0], [46.7, 27719.0], [46.8, 27719.0], [46.9, 27719.0], [47.0, 27755.0], [47.1, 27755.0], [47.2, 27755.0], [47.3, 27755.0], [47.4, 27755.0], [47.5, 27770.0], [47.6, 27770.0], [47.7, 27770.0], [47.8, 27770.0], [47.9, 27770.0], [48.0, 27806.0], [48.1, 27806.0], [48.2, 27806.0], [48.3, 27806.0], [48.4, 27806.0], [48.5, 27810.0], [48.6, 27810.0], [48.7, 27810.0], [48.8, 27810.0], [48.9, 27810.0], [49.0, 27965.0], [49.1, 27965.0], [49.2, 27965.0], [49.3, 27965.0], [49.4, 27965.0], [49.5, 28022.0], [49.6, 28022.0], [49.7, 28022.0], [49.8, 28022.0], [49.9, 28022.0], [50.0, 28023.0], [50.1, 28023.0], [50.2, 28023.0], [50.3, 28023.0], [50.4, 28023.0], [50.5, 28060.0], [50.6, 28060.0], [50.7, 28060.0], [50.8, 28060.0], [50.9, 28060.0], [51.0, 28104.0], [51.1, 28104.0], [51.2, 28104.0], [51.3, 28104.0], [51.4, 28104.0], [51.5, 28292.0], [51.6, 28292.0], [51.7, 28292.0], [51.8, 28292.0], [51.9, 28292.0], [52.0, 28338.0], [52.1, 28338.0], [52.2, 28338.0], [52.3, 28338.0], [52.4, 28338.0], [52.5, 28343.0], [52.6, 28343.0], [52.7, 28343.0], [52.8, 28343.0], [52.9, 28343.0], [53.0, 28358.0], [53.1, 28358.0], [53.2, 28358.0], [53.3, 28358.0], [53.4, 28358.0], [53.5, 28361.0], [53.6, 28361.0], [53.7, 28361.0], [53.8, 28361.0], [53.9, 28361.0], [54.0, 28386.0], [54.1, 28386.0], [54.2, 28386.0], [54.3, 28386.0], [54.4, 28386.0], [54.5, 28421.0], [54.6, 28421.0], [54.7, 28421.0], [54.8, 28421.0], [54.9, 28421.0], [55.0, 28421.0], [55.1, 28421.0], [55.2, 28421.0], [55.3, 28421.0], [55.4, 28421.0], [55.5, 28436.0], [55.6, 28436.0], [55.7, 28436.0], [55.8, 28436.0], [55.9, 28436.0], [56.0, 28444.0], [56.1, 28444.0], [56.2, 28444.0], [56.3, 28444.0], [56.4, 28444.0], [56.5, 28452.0], [56.6, 28452.0], [56.7, 28452.0], [56.8, 28452.0], [56.9, 28452.0], [57.0, 28536.0], [57.1, 28536.0], [57.2, 28536.0], [57.3, 28536.0], [57.4, 28536.0], [57.5, 28548.0], [57.6, 28548.0], [57.7, 28548.0], [57.8, 28548.0], [57.9, 28548.0], [58.0, 28646.0], [58.1, 28646.0], [58.2, 28646.0], [58.3, 28646.0], [58.4, 28646.0], [58.5, 28684.0], [58.6, 28684.0], [58.7, 28684.0], [58.8, 28684.0], [58.9, 28684.0], [59.0, 28716.0], [59.1, 28716.0], [59.2, 28716.0], [59.3, 28716.0], [59.4, 28716.0], [59.5, 28741.0], [59.6, 28741.0], [59.7, 28741.0], [59.8, 28741.0], [59.9, 28741.0], [60.0, 28801.0], [60.1, 28801.0], [60.2, 28801.0], [60.3, 28801.0], [60.4, 28801.0], [60.5, 28856.0], [60.6, 28856.0], [60.7, 28856.0], [60.8, 28856.0], [60.9, 28856.0], [61.0, 28872.0], [61.1, 28872.0], [61.2, 28872.0], [61.3, 28872.0], [61.4, 28872.0], [61.5, 28909.0], [61.6, 28909.0], [61.7, 28909.0], [61.8, 28909.0], [61.9, 28909.0], [62.0, 28945.0], [62.1, 28945.0], [62.2, 28945.0], [62.3, 28945.0], [62.4, 28945.0], [62.5, 28958.0], [62.6, 28958.0], [62.7, 28958.0], [62.8, 28958.0], [62.9, 28958.0], [63.0, 28991.0], [63.1, 28991.0], [63.2, 28991.0], [63.3, 28991.0], [63.4, 28991.0], [63.5, 29044.0], [63.6, 29044.0], [63.7, 29044.0], [63.8, 29044.0], [63.9, 29044.0], [64.0, 29071.0], [64.1, 29071.0], [64.2, 29071.0], [64.3, 29071.0], [64.4, 29071.0], [64.5, 29083.0], [64.6, 29083.0], [64.7, 29083.0], [64.8, 29083.0], [64.9, 29083.0], [65.0, 29110.0], [65.1, 29110.0], [65.2, 29110.0], [65.3, 29110.0], [65.4, 29110.0], [65.5, 29371.0], [65.6, 29371.0], [65.7, 29371.0], [65.8, 29371.0], [65.9, 29371.0], [66.0, 29417.0], [66.1, 29417.0], [66.2, 29417.0], [66.3, 29417.0], [66.4, 29417.0], [66.5, 29439.0], [66.6, 29439.0], [66.7, 29439.0], [66.8, 29439.0], [66.9, 29439.0], [67.0, 29551.0], [67.1, 29551.0], [67.2, 29551.0], [67.3, 29551.0], [67.4, 29551.0], [67.5, 29606.0], [67.6, 29606.0], [67.7, 29606.0], [67.8, 29606.0], [67.9, 29606.0], [68.0, 29793.0], [68.1, 29793.0], [68.2, 29793.0], [68.3, 29793.0], [68.4, 29793.0], [68.5, 29857.0], [68.6, 29857.0], [68.7, 29857.0], [68.8, 29857.0], [68.9, 29857.0], [69.0, 30858.0], [69.1, 30858.0], [69.2, 30858.0], [69.3, 30858.0], [69.4, 30858.0], [69.5, 31265.0], [69.6, 31265.0], [69.7, 31265.0], [69.8, 31265.0], [69.9, 31265.0], [70.0, 31356.0], [70.1, 31356.0], [70.2, 31356.0], [70.3, 31356.0], [70.4, 31356.0], [70.5, 31439.0], [70.6, 31439.0], [70.7, 31439.0], [70.8, 31439.0], [70.9, 31439.0], [71.0, 31447.0], [71.1, 31447.0], [71.2, 31447.0], [71.3, 31447.0], [71.4, 31447.0], [71.5, 31675.0], [71.6, 31675.0], [71.7, 31675.0], [71.8, 31675.0], [71.9, 31675.0], [72.0, 31700.0], [72.1, 31700.0], [72.2, 31700.0], [72.3, 31700.0], [72.4, 31700.0], [72.5, 31711.0], [72.6, 31711.0], [72.7, 31711.0], [72.8, 31711.0], [72.9, 31711.0], [73.0, 31839.0], [73.1, 31839.0], [73.2, 31839.0], [73.3, 31839.0], [73.4, 31839.0], [73.5, 32661.0], [73.6, 32661.0], [73.7, 32661.0], [73.8, 32661.0], [73.9, 32661.0], [74.0, 32715.0], [74.1, 32715.0], [74.2, 32715.0], [74.3, 32715.0], [74.4, 32715.0], [74.5, 32772.0], [74.6, 32772.0], [74.7, 32772.0], [74.8, 32772.0], [74.9, 32772.0], [75.0, 32940.0], [75.1, 32940.0], [75.2, 32940.0], [75.3, 32940.0], [75.4, 32940.0], [75.5, 32952.0], [75.6, 32952.0], [75.7, 32952.0], [75.8, 32952.0], [75.9, 32952.0], [76.0, 33301.0], [76.1, 33301.0], [76.2, 33301.0], [76.3, 33301.0], [76.4, 33301.0], [76.5, 33340.0], [76.6, 33340.0], [76.7, 33340.0], [76.8, 33340.0], [76.9, 33340.0], [77.0, 33431.0], [77.1, 33431.0], [77.2, 33431.0], [77.3, 33431.0], [77.4, 33431.0], [77.5, 33472.0], [77.6, 33472.0], [77.7, 33472.0], [77.8, 33472.0], [77.9, 33472.0], [78.0, 33699.0], [78.1, 33699.0], [78.2, 33699.0], [78.3, 33699.0], [78.4, 33699.0], [78.5, 33924.0], [78.6, 33924.0], [78.7, 33924.0], [78.8, 33924.0], [78.9, 33924.0], [79.0, 34300.0], [79.1, 34300.0], [79.2, 34300.0], [79.3, 34300.0], [79.4, 34300.0], [79.5, 34326.0], [79.6, 34326.0], [79.7, 34326.0], [79.8, 34326.0], [79.9, 34326.0], [80.0, 34599.0], [80.1, 34599.0], [80.2, 34599.0], [80.3, 34599.0], [80.4, 34599.0], [80.5, 34937.0], [80.6, 34937.0], [80.7, 34937.0], [80.8, 34937.0], [80.9, 34937.0], [81.0, 35090.0], [81.1, 35090.0], [81.2, 35090.0], [81.3, 35090.0], [81.4, 35090.0], [81.5, 35201.0], [81.6, 35201.0], [81.7, 35201.0], [81.8, 35201.0], [81.9, 35201.0], [82.0, 35241.0], [82.1, 35241.0], [82.2, 35241.0], [82.3, 35241.0], [82.4, 35241.0], [82.5, 35254.0], [82.6, 35254.0], [82.7, 35254.0], [82.8, 35254.0], [82.9, 35254.0], [83.0, 35276.0], [83.1, 35276.0], [83.2, 35276.0], [83.3, 35276.0], [83.4, 35276.0], [83.5, 35344.0], [83.6, 35344.0], [83.7, 35344.0], [83.8, 35344.0], [83.9, 35344.0], [84.0, 35354.0], [84.1, 35354.0], [84.2, 35354.0], [84.3, 35354.0], [84.4, 35354.0], [84.5, 35376.0], [84.6, 35376.0], [84.7, 35376.0], [84.8, 35376.0], [84.9, 35376.0], [85.0, 35455.0], [85.1, 35455.0], [85.2, 35455.0], [85.3, 35455.0], [85.4, 35455.0], [85.5, 35681.0], [85.6, 35681.0], [85.7, 35681.0], [85.8, 35681.0], [85.9, 35681.0], [86.0, 35840.0], [86.1, 35840.0], [86.2, 35840.0], [86.3, 35840.0], [86.4, 35840.0], [86.5, 35852.0], [86.6, 35852.0], [86.7, 35852.0], [86.8, 35852.0], [86.9, 35852.0], [87.0, 35883.0], [87.1, 35883.0], [87.2, 35883.0], [87.3, 35883.0], [87.4, 35883.0], [87.5, 35932.0], [87.6, 35932.0], [87.7, 35932.0], [87.8, 35932.0], [87.9, 35932.0], [88.0, 36033.0], [88.1, 36033.0], [88.2, 36033.0], [88.3, 36033.0], [88.4, 36033.0], [88.5, 36121.0], [88.6, 36121.0], [88.7, 36121.0], [88.8, 36121.0], [88.9, 36121.0], [89.0, 36148.0], [89.1, 36148.0], [89.2, 36148.0], [89.3, 36148.0], [89.4, 36148.0], [89.5, 36174.0], [89.6, 36174.0], [89.7, 36174.0], [89.8, 36174.0], [89.9, 36174.0], [90.0, 36201.0], [90.1, 36201.0], [90.2, 36201.0], [90.3, 36201.0], [90.4, 36201.0], [90.5, 36202.0], [90.6, 36202.0], [90.7, 36202.0], [90.8, 36202.0], [90.9, 36202.0], [91.0, 36215.0], [91.1, 36215.0], [91.2, 36215.0], [91.3, 36215.0], [91.4, 36215.0], [91.5, 36245.0], [91.6, 36245.0], [91.7, 36245.0], [91.8, 36245.0], [91.9, 36245.0], [92.0, 36317.0], [92.1, 36317.0], [92.2, 36317.0], [92.3, 36317.0], [92.4, 36317.0], [92.5, 36549.0], [92.6, 36549.0], [92.7, 36549.0], [92.8, 36549.0], [92.9, 36549.0], [93.0, 36593.0], [93.1, 36593.0], [93.2, 36593.0], [93.3, 36593.0], [93.4, 36593.0], [93.5, 36663.0], [93.6, 36663.0], [93.7, 36663.0], [93.8, 36663.0], [93.9, 36663.0], [94.0, 36713.0], [94.1, 36713.0], [94.2, 36713.0], [94.3, 36713.0], [94.4, 36713.0], [94.5, 36850.0], [94.6, 36850.0], [94.7, 36850.0], [94.8, 36850.0], [94.9, 36850.0], [95.0, 36973.0], [95.1, 36973.0], [95.2, 36973.0], [95.3, 36973.0], [95.4, 36973.0], [95.5, 37382.0], [95.6, 37382.0], [95.7, 37382.0], [95.8, 37382.0], [95.9, 37382.0], [96.0, 37507.0], [96.1, 37507.0], [96.2, 37507.0], [96.3, 37507.0], [96.4, 37507.0], [96.5, 37654.0], [96.6, 37654.0], [96.7, 37654.0], [96.8, 37654.0], [96.9, 37654.0], [97.0, 37924.0], [97.1, 37924.0], [97.2, 37924.0], [97.3, 37924.0], [97.4, 37924.0], [97.5, 38250.0], [97.6, 38250.0], [97.7, 38250.0], [97.8, 38250.0], [97.9, 38250.0], [98.0, 38950.0], [98.1, 38950.0], [98.2, 38950.0], [98.3, 38950.0], [98.4, 38950.0], [98.5, 39231.0], [98.6, 39231.0], [98.7, 39231.0], [98.8, 39231.0], [98.9, 39231.0], [99.0, 40336.0], [99.1, 40336.0], [99.2, 40336.0], [99.3, 40336.0], [99.4, 40336.0], [99.5, 43704.0], [99.6, 43704.0], [99.7, 43704.0], [99.8, 43704.0], [99.9, 43704.0]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 200.0, "series": [{"data": [[0.0, 200.0]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[4600.0, 1.0], [5000.0, 2.0], [5100.0, 1.0], [5400.0, 1.0], [5600.0, 1.0], [5900.0, 2.0], [6100.0, 1.0], [6200.0, 1.0], [6300.0, 2.0], [6400.0, 5.0], [6600.0, 12.0], [6500.0, 4.0], [6800.0, 7.0], [6900.0, 9.0], [6700.0, 2.0], [7100.0, 5.0], [7000.0, 5.0], [7400.0, 11.0], [7200.0, 4.0], [7300.0, 6.0], [7500.0, 12.0], [7600.0, 6.0], [7800.0, 9.0], [7900.0, 6.0], [7700.0, 5.0], [8100.0, 10.0], [8000.0, 5.0], [8600.0, 4.0], [8200.0, 1.0], [8300.0, 7.0], [8700.0, 3.0], [8500.0, 5.0], [8400.0, 4.0], [8800.0, 6.0], [9200.0, 2.0], [9000.0, 2.0], [9100.0, 3.0], [9400.0, 1.0], [10300.0, 1.0], [10400.0, 1.0], [10800.0, 1.0], [11300.0, 1.0], [11600.0, 3.0], [11900.0, 1.0], [12000.0, 1.0], [12100.0, 1.0], [12300.0, 2.0], [12800.0, 1.0], [13100.0, 1.0], [15400.0, 1.0], [15600.0, 1.0], [16500.0, 1.0], [18200.0, 2.0], [17900.0, 1.0], [18000.0, 1.0], [18100.0, 1.0], [18800.0, 1.0], [19000.0, 1.0], [19900.0, 1.0], [20600.0, 1.0], [22500.0, 1.0]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[6700.0, 1.0], [7000.0, 1.0], [7400.0, 3.0], [7300.0, 2.0], [7200.0, 2.0], [7500.0, 1.0], [7800.0, 1.0], [7900.0, 1.0], [8100.0, 1.0], [8500.0, 2.0], [8700.0, 2.0], [8400.0, 1.0], [9200.0, 1.0], [8800.0, 3.0], [9500.0, 1.0], [9300.0, 1.0], [9400.0, 1.0], [9700.0, 1.0], [9800.0, 3.0], [9900.0, 1.0], [10100.0, 1.0], [10200.0, 1.0], [10300.0, 3.0], [10400.0, 3.0], [10600.0, 1.0], [10700.0, 2.0], [10900.0, 1.0], [11400.0, 1.0], [11500.0, 1.0], [11800.0, 1.0], [12600.0, 1.0], [12800.0, 1.0], [16300.0, 1.0], [16400.0, 2.0], [17400.0, 1.0], [16800.0, 1.0], [16500.0, 1.0], [17300.0, 1.0], [18400.0, 1.0], [18200.0, 1.0], [18100.0, 1.0], [17800.0, 1.0], [19200.0, 2.0], [18500.0, 1.0], [18700.0, 3.0], [18600.0, 4.0], [18800.0, 3.0], [19300.0, 2.0], [19400.0, 1.0], [19000.0, 3.0], [18900.0, 1.0], [19100.0, 1.0], [19700.0, 2.0], [19500.0, 4.0], [20400.0, 3.0], [20300.0, 2.0], [19900.0, 1.0], [19600.0, 2.0], [20000.0, 5.0], [19800.0, 5.0], [20200.0, 9.0], [20100.0, 6.0], [20600.0, 4.0], [21200.0, 4.0], [20500.0, 3.0], [21400.0, 1.0], [20800.0, 2.0], [20700.0, 4.0], [21300.0, 1.0], [20900.0, 2.0], [21500.0, 3.0], [21100.0, 3.0], [22200.0, 2.0], [21900.0, 1.0], [22300.0, 1.0], [22900.0, 2.0], [23200.0, 1.0], [23000.0, 3.0], [23300.0, 1.0], [23600.0, 3.0], [23800.0, 2.0], [24000.0, 2.0], [24200.0, 4.0], [24100.0, 3.0], [23900.0, 2.0], [23700.0, 2.0], [24500.0, 1.0], [24300.0, 1.0], [24800.0, 2.0], [25100.0, 2.0], [25200.0, 1.0], [24700.0, 1.0], [25500.0, 1.0], [25600.0, 1.0], [26500.0, 1.0], [26600.0, 1.0], [26000.0, 1.0], [26200.0, 1.0], [27000.0, 1.0], [27100.0, 1.0], [27300.0, 2.0], [27400.0, 1.0], [27500.0, 2.0], [26700.0, 1.0], [26900.0, 1.0], [28400.0, 2.0], [28700.0, 1.0]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[32900.0, 2.0], [33300.0, 2.0], [33900.0, 1.0], [34300.0, 2.0], [34500.0, 1.0], [34900.0, 1.0], [35900.0, 1.0], [35300.0, 3.0], [36500.0, 2.0], [36100.0, 3.0], [36300.0, 1.0], [36700.0, 1.0], [37500.0, 1.0], [36900.0, 1.0], [37300.0, 1.0], [37900.0, 1.0], [38900.0, 1.0], [40300.0, 1.0], [43700.0, 1.0], [12500.0, 1.0], [14300.0, 1.0], [14700.0, 1.0], [14600.0, 2.0], [14400.0, 1.0], [15200.0, 1.0], [15100.0, 1.0], [15800.0, 2.0], [15600.0, 2.0], [15700.0, 1.0], [15400.0, 2.0], [16100.0, 3.0], [15900.0, 2.0], [17200.0, 2.0], [16700.0, 3.0], [16800.0, 1.0], [16400.0, 5.0], [17000.0, 1.0], [17300.0, 2.0], [17400.0, 1.0], [16500.0, 1.0], [17100.0, 1.0], [17600.0, 1.0], [17700.0, 3.0], [17500.0, 1.0], [18000.0, 1.0], [19100.0, 1.0], [19200.0, 1.0], [19900.0, 1.0], [20600.0, 1.0], [23300.0, 1.0], [23800.0, 1.0], [24500.0, 1.0], [23600.0, 2.0], [24200.0, 1.0], [25500.0, 1.0], [25000.0, 1.0], [24800.0, 1.0], [25200.0, 1.0], [25100.0, 1.0], [26200.0, 2.0], [26300.0, 2.0], [26100.0, 1.0], [25900.0, 2.0], [26600.0, 5.0], [26500.0, 3.0], [25600.0, 1.0], [26400.0, 3.0], [26800.0, 4.0], [27100.0, 2.0], [27400.0, 1.0], [26700.0, 2.0], [27600.0, 3.0], [27500.0, 1.0], [27300.0, 1.0], [26900.0, 1.0], [27000.0, 1.0], [27900.0, 1.0], [28000.0, 3.0], [28100.0, 1.0], [28300.0, 5.0], [28200.0, 1.0], [27700.0, 3.0], [28600.0, 2.0], [28400.0, 5.0], [28500.0, 2.0], [27800.0, 2.0], [28700.0, 2.0], [29000.0, 3.0], [28900.0, 4.0], [29100.0, 1.0], [29500.0, 1.0], [29600.0, 1.0], [29300.0, 1.0], [28800.0, 3.0], [29400.0, 2.0], [29700.0, 1.0], [29800.0, 1.0], [31700.0, 2.0], [31400.0, 2.0], [30800.0, 1.0], [31300.0, 1.0], [31600.0, 1.0], [31200.0, 1.0], [32700.0, 2.0], [32600.0, 1.0], [31800.0, 1.0], [33400.0, 2.0], [33600.0, 1.0], [35200.0, 4.0], [35000.0, 1.0], [36000.0, 1.0], [36600.0, 1.0], [36200.0, 4.0], [35800.0, 3.0], [35600.0, 1.0], [35400.0, 1.0], [36800.0, 1.0], [37600.0, 1.0], [38200.0, 1.0], [39200.0, 1.0]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 43700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 200.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 400.0, "series": [{"data": [[0.0, 200.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 400.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 34.014925373134325, "minX": 1.74842502E12, "maxY": 165.2777777777777, "series": [{"data": [[1.74842508E12, 34.014925373134325], [1.74842502E12, 165.2777777777777]], "isOverall": false, "label": "192.168.1.7-Wallet", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842508E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 43704.0, "series": [{"data": [[98.0, 0.0], [130.0, 9.0], [133.0, 0.0], [135.0, 15.0], [129.0, 0.0], [136.0, 9.0], [138.0, 1.0], [139.0, 0.5], [145.0, 0.4444444444444444], [146.0, 0.5], [149.0, 1.0], [147.0, 0.0], [153.0, 0.0], [156.0, 0.33333333333333337], [158.0, 0.6666666666666667], [159.0, 0.0], [157.0, 0.4], [154.0, 0.5], [163.0, 0.0], [164.0, 0.0], [166.0, 0.5], [161.0, 0.0], [168.0, 1.0], [171.0, 0.0], [172.0, 0.33333333333333337], [174.0, 0.0], [175.0, 0.25], [176.0, 0.0], [184.0, 1.0], [188.0, 0.6666666666666666], [191.0, 0.0], [192.0, 0.0], [193.0, 0.0], [194.0, 1.0], [196.0, 0.0], [197.0, 0.6666666666666666], [198.0, 0.4285714285714286], [199.0, 0.5], [195.0, 1.0], [200.0, 0.4128440366972477]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[186.07499999999993, 0.555]], "isOverall": false, "label": "Send 2FA-Aggregated", "isController": false}, {"data": [[98.0, 22514.0], [130.0, 6465.0], [133.0, 6450.0], [135.0, 6600.0], [129.0, 20618.0], [136.0, 6565.0], [138.0, 6622.0], [139.0, 13427.5], [145.0, 15821.888888888889], [146.0, 6800.5], [149.0, 6787.0], [147.0, 16596.0], [153.0, 7147.5], [156.0, 10752.0], [158.0, 10107.666666666666], [159.0, 11645.5], [157.0, 12122.4], [154.0, 15555.0], [162.0, 6548.0], [164.0, 6480.0], [166.0, 8963.0], [161.0, 10664.5], [168.0, 7501.0], [171.0, 6651.0], [172.0, 7177.0], [174.0, 7577.0], [175.0, 7749.75], [176.0, 7549.0], [184.0, 7669.0], [188.0, 8246.333333333334], [191.0, 8308.5], [192.0, 8227.0], [193.0, 8417.0], [194.0, 7277.0], [196.0, 7962.0], [197.0, 8069.666666666667], [198.0, 7922.142857142858], [199.0, 7911.0], [195.0, 8077.0], [200.0, 7515.522935779816]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[186.0699999999999, 8533.985]], "isOverall": false, "label": "Post Request-code-login-Aggregated", "isController": false}, {"data": [[2.0, 21241.0], [3.0, 20793.0], [4.0, 18613.0], [5.0, 19437.0], [6.0, 19399.0], [7.0, 26277.0], [8.0, 17398.0], [9.0, 18894.0], [10.0, 23740.0], [11.0, 24214.0], [12.0, 17877.0], [13.0, 18194.0], [14.0, 21241.0], [15.0, 18748.0], [16.0, 28421.0], [17.0, 23996.0], [18.0, 25507.0], [19.0, 28763.0], [20.0, 24191.0], [21.0, 23621.0], [22.0, 26944.0], [23.0, 24285.0], [24.0, 28482.0], [25.0, 23699.0], [26.0, 23029.0], [27.0, 20213.0], [28.0, 27550.0], [29.0, 23369.0], [30.0, 27366.0], [31.0, 24320.0], [33.0, 26700.0], [32.0, 24791.0], [35.0, 27571.0], [34.0, 24532.0], [37.0, 27339.0], [36.0, 27421.0], [39.0, 26019.0], [38.0, 27195.0], [41.0, 26687.0], [40.0, 27087.0], [43.0, 25115.0], [42.0, 26539.0], [45.0, 25626.0], [44.0, 25252.0], [47.0, 25100.0], [46.0, 24091.0], [49.0, 24871.0], [48.0, 24836.0], [51.0, 23836.0], [53.0, 23825.0], [52.0, 24144.0], [55.0, 24283.0], [54.0, 24144.0], [57.0, 24079.0], [56.0, 24237.0], [59.0, 23011.0], [58.0, 22911.0], [61.0, 20201.0], [60.0, 22344.0], [63.0, 20448.0], [62.0, 23098.0], [67.0, 23295.0], [66.0, 23604.0], [65.0, 20331.0], [64.0, 21134.0], [71.0, 20747.0], [70.0, 21925.0], [69.0, 20956.0], [68.0, 20211.0], [75.0, 19762.0], [74.0, 20147.0], [73.0, 20204.0], [72.0, 22909.0], [79.0, 21363.0], [78.0, 22214.0], [77.0, 21562.0], [76.0, 23875.0], [83.0, 20777.0], [82.0, 20370.0], [81.0, 21513.0], [80.0, 22220.0], [87.0, 21176.0], [86.0, 20050.0], [85.0, 20390.5], [91.0, 20259.0], [90.0, 20162.0], [89.0, 18712.0], [88.0, 21501.0], [95.0, 20170.0], [94.0, 20754.0], [93.0, 20529.0], [92.0, 20925.0], [99.0, 20193.0], [98.0, 20030.0], [97.0, 19291.0], [96.0, 20668.0], [103.0, 20177.0], [102.0, 20635.0], [101.0, 20134.0], [100.0, 19885.0], [107.0, 19882.0], [106.0, 19802.0], [105.0, 20268.0], [104.0, 20845.0], [111.0, 20610.0], [110.0, 20882.0], [109.0, 20217.0], [108.0, 20588.0], [115.0, 20257.0], [114.0, 19062.0], [113.0, 20045.0], [112.0, 19666.0], [119.0, 19151.0], [118.0, 21463.0], [117.0, 20413.0], [116.0, 19561.0], [123.0, 20289.0], [122.0, 18880.0], [121.0, 19823.0], [120.0, 20577.0], [127.0, 20059.0], [126.0, 20623.0], [125.0, 21207.0], [124.0, 19898.0], [135.0, 18629.0], [134.0, 18989.0], [133.0, 19940.0], [132.0, 19037.0], [131.0, 19789.0], [130.0, 19624.0], [129.0, 20015.0], [128.0, 19570.0], [143.0, 18554.0], [142.0, 18625.0], [141.0, 18894.0], [140.0, 18611.0], [139.0, 20470.0], [138.0, 19297.0], [137.0, 19329.0], [136.0, 19050.0], [151.0, 17404.0], [150.0, 16430.0], [149.0, 16826.0], [148.0, 16504.0], [147.0, 18781.0], [146.0, 18479.0], [145.0, 19568.0], [144.0, 18254.0], [159.0, 11583.0], [158.0, 11849.0], [157.0, 12844.0], [156.0, 9754.0], [155.0, 10333.0], [154.0, 12610.0], [153.0, 16379.0], [152.0, 16482.0], [167.0, 7553.0], [166.0, 7036.0], [165.0, 8866.0], [164.0, 8484.0], [163.0, 8532.0], [162.0, 7261.0], [161.0, 11465.0], [160.0, 7392.0], [175.0, 10261.0], [174.0, 7425.0], [173.0, 6786.0], [172.0, 7384.0], [171.0, 7809.0], [170.0, 7985.0], [169.0, 8745.0], [168.0, 7221.0], [183.0, 10793.0], [182.0, 10780.0], [181.0, 9495.0], [180.0, 10423.0], [179.0, 8877.0], [178.0, 9857.0], [177.0, 8745.0], [176.0, 7421.0], [191.0, 9988.0], [190.0, 10605.0], [189.0, 9330.0], [188.0, 8865.0], [187.0, 10935.0], [186.0, 10432.0], [185.0, 10347.0], [184.0, 10118.0], [199.0, 9584.0], [198.0, 9855.0], [197.0, 8560.0], [196.0, 10326.0], [195.0, 9259.0], [194.0, 9820.0], [193.0, 10434.0], [192.0, 8151.0], [200.0, 7479.0], [1.0, 21190.0]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[100.51000000000003, 18722.935000000005]], "isOverall": false, "label": "Post Authen-Aggregated", "isController": false}, {"data": [[2.0, 40336.0], [3.0, 38950.0], [4.0, 39231.0], [5.0, 38250.0], [6.0, 37654.0], [7.0, 37924.0], [8.0, 37382.0], [9.0, 36973.0], [10.0, 36850.0], [11.0, 36549.0], [12.0, 36148.0], [13.0, 36174.0], [14.0, 36713.0], [15.0, 35344.0], [16.0, 35455.0], [17.0, 36317.0], [18.0, 35883.0], [19.0, 37507.0], [20.0, 36245.0], [21.0, 35254.0], [22.0, 36121.0], [23.0, 36215.0], [24.0, 36593.0], [25.0, 35354.0], [26.0, 35201.0], [27.0, 35852.0], [28.0, 34599.0], [29.0, 36202.0], [30.0, 34300.0], [31.0, 35681.0], [33.0, 35840.0], [32.0, 35276.0], [35.0, 36201.0], [34.0, 35376.0], [37.0, 35932.0], [36.0, 36663.0], [39.0, 35090.0], [38.0, 36033.0], [41.0, 35241.0], [40.0, 33472.0], [43.0, 33699.0], [42.0, 34937.0], [45.0, 34326.0], [44.0, 33431.0], [47.0, 31711.0], [46.0, 32940.0], [49.0, 31265.0], [48.0, 33924.0], [51.0, 32589.5], [53.0, 32661.0], [52.0, 32772.0], [55.0, 32715.0], [54.0, 33301.0], [57.0, 32952.0], [56.0, 31675.0], [59.0, 31439.0], [58.0, 31356.0], [61.0, 28801.0], [60.0, 29417.0], [63.0, 28856.0], [62.0, 30858.0], [67.0, 29857.0], [66.0, 31447.0], [65.0, 28872.0], [64.0, 29439.0], [71.0, 28646.0], [70.0, 29371.0], [69.0, 28909.0], [68.0, 28343.0], [75.0, 27770.0], [74.0, 27806.0], [73.0, 28292.0], [72.0, 29606.0], [79.0, 28421.0], [78.0, 29071.0], [77.0, 29551.0], [76.0, 31700.0], [83.0, 29110.0], [82.0, 27810.0], [81.0, 29083.0], [80.0, 29793.0], [87.0, 28945.0], [86.0, 26731.0], [85.0, 27787.0], [91.0, 28421.0], [90.0, 26823.0], [89.0, 26401.0], [88.0, 28958.0], [95.0, 26673.0], [94.0, 27755.0], [93.0, 27965.0], [92.0, 28452.0], [99.0, 26914.0], [98.0, 27172.0], [97.0, 25192.0], [96.0, 27605.0], [103.0, 28338.0], [102.0, 25245.0], [101.0, 26412.0], [100.0, 27381.0], [107.0, 26685.0], [106.0, 26239.0], [105.0, 26417.0], [104.0, 25917.0], [111.0, 28548.0], [110.0, 28991.0], [109.0, 28358.0], [108.0, 28444.0], [115.0, 28436.0], [114.0, 26595.0], [113.0, 27538.0], [112.0, 26303.0], [119.0, 26509.0], [118.0, 28741.0], [117.0, 28386.0], [116.0, 27679.0], [123.0, 28060.0], [122.0, 25680.0], [121.0, 29044.0], [120.0, 27679.0], [127.0, 27719.0], [126.0, 28022.0], [125.0, 28684.0], [124.0, 26894.0], [135.0, 24233.0], [134.0, 26756.0], [133.0, 26613.0], [132.0, 26517.0], [131.0, 28104.0], [130.0, 26620.0], [129.0, 28716.0], [128.0, 28361.0], [143.0, 26100.0], [142.0, 25906.0], [141.0, 26856.0], [140.0, 23682.0], [139.0, 28023.0], [138.0, 26608.0], [137.0, 27401.0], [136.0, 26897.0], [151.0, 25590.0], [150.0, 24511.0], [149.0, 25076.0], [148.0, 24804.0], [147.0, 26283.0], [146.0, 26349.0], [145.0, 27155.0], [144.0, 23681.0], [159.0, 19132.0], [158.0, 19273.0], [157.0, 20681.0], [156.0, 16439.0], [155.0, 17166.0], [154.0, 19935.0], [153.0, 23301.0], [152.0, 23865.0], [167.0, 15486.0], [166.0, 14611.0], [165.0, 17760.0], [164.0, 15466.0], [163.0, 14476.0], [162.0, 15611.0], [161.0, 18013.0], [160.0, 12533.0], [175.0, 17710.0], [174.0, 15217.0], [173.0, 15636.0], [172.0, 14698.0], [171.0, 16161.0], [170.0, 15787.0], [169.0, 15922.0], [168.0, 15121.0], [183.0, 17615.0], [182.0, 17724.0], [181.0, 15991.0], [180.0, 17235.0], [179.0, 17519.0], [178.0, 16508.0], [177.0, 16415.0], [176.0, 14372.0], [191.0, 16776.0], [190.0, 17228.0], [189.0, 15810.0], [188.0, 16474.0], [187.0, 17385.0], [186.0, 17361.0], [185.0, 17449.0], [184.0, 16742.0], [199.0, 16158.0], [198.0, 16727.0], [197.0, 16111.0], [196.0, 16800.0], [195.0, 16452.0], [194.0, 16478.0], [193.0, 17049.0], [192.0, 15821.0], [200.0, 14731.0], [1.0, 43704.0]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}, {"data": [[100.51000000000003, 27257.475]], "isOverall": false, "label": "AUTHENTICATOR-Aggregated", "isController": true}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 845.3, "minX": 1.74842502E12, "maxY": 8575.85, "series": [{"data": [[1.74842508E12, 3261.6833333333334], [1.74842502E12, 8575.85]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.74842508E12, 845.3], [1.74842502E12, 3811.266666666667]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842508E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 0.555, "minX": 1.74842502E12, "maxY": 34685.29850746269, "series": [{"data": [[1.74842502E12, 0.555]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[1.74842502E12, 8533.985]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[1.74842508E12, 23739.477611940296], [1.74842502E12, 16195.804511278197]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[1.74842508E12, 34685.29850746269], [1.74842502E12, 23515.639097744348]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842508E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74842502E12, "maxY": 34684.77611940299, "series": [{"data": [[1.74842502E12, 0.0]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[1.74842502E12, 8533.95]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[1.74842508E12, 23739.388059701487], [1.74842502E12, 16195.654135338344]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[1.74842508E12, 34684.77611940299], [1.74842502E12, 23514.81954887218]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842508E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74842502E12, "maxY": 91.07462686567165, "series": [{"data": [[1.74842502E12, 0.0]], "isOverall": false, "label": "Send 2FA", "isController": false}, {"data": [[1.74842502E12, 86.19500000000002]], "isOverall": false, "label": "Post Request-code-login", "isController": false}, {"data": [[1.74842508E12, 0.0], [1.74842502E12, 0.0]], "isOverall": false, "label": "Post Authen", "isController": false}, {"data": [[1.74842508E12, 91.07462686567165], [1.74842502E12, 83.73684210526316]], "isOverall": false, "label": "AUTHENTICATOR", "isController": true}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842508E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.74842502E12, "maxY": 28763.0, "series": [{"data": [[1.74842508E12, 28763.0], [1.74842502E12, 23875.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.74842508E12, 27377.0], [1.74842502E12, 19892.8]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.74842508E12, 28763.0], [1.74842502E12, 22115.73999999999]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.74842508E12, 28080.999999999996], [1.74842502E12, 20594.6]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.74842508E12, 17398.0], [1.74842502E12, 0.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.74842508E12, 24091.0], [1.74842502E12, 7276.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842508E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 15.0, "minX": 1.0, "maxY": 26687.0, "series": [{"data": [[8.0, 18972.0], [2.0, 24063.0], [9.0, 20081.0], [11.0, 10844.0], [46.0, 5249.0], [48.0, 2536.0], [12.0, 3758.0], [3.0, 20115.0], [13.0, 11633.0], [14.0, 10385.0], [15.0, 20529.0], [1.0, 15761.5], [16.0, 13881.5], [4.0, 7736.5], [68.0, 2305.0], [19.0, 20177.0], [20.0, 7681.0], [5.0, 26687.0], [21.0, 15.0], [6.0, 20479.0], [26.0, 2951.0], [27.0, 8560.0], [7.0, 21134.0], [30.0, 3248.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 68.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 26687.0, "series": [{"data": [[8.0, 18971.5], [2.0, 24063.0], [9.0, 20081.0], [11.0, 10844.0], [46.0, 5249.0], [48.0, 2535.5], [12.0, 3757.5], [3.0, 20115.0], [13.0, 11633.0], [14.0, 10384.5], [15.0, 20529.0], [1.0, 15761.5], [16.0, 13881.0], [4.0, 7736.0], [68.0, 2304.5], [19.0, 20177.0], [20.0, 7680.0], [5.0, 26687.0], [21.0, 0.0], [6.0, 20479.0], [26.0, 2950.5], [27.0, 8559.0], [7.0, 21134.0], [30.0, 3248.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 68.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.74842502E12, "maxY": 10.0, "series": [{"data": [[1.74842502E12, 10.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842502E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.74842502E12, "maxY": 8.883333333333333, "series": [{"data": [[1.74842508E12, 1.1166666666666667], [1.74842502E12, 8.883333333333333]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.74842508E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.1166666666666667, "minX": 1.74842502E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.74842502E12, 3.3333333333333335]], "isOverall": false, "label": "Post Request-code-login-success", "isController": false}, {"data": [[1.74842508E12, 1.1166666666666667], [1.74842502E12, 2.216666666666667]], "isOverall": false, "label": "AUTHENTICATOR-success", "isController": true}, {"data": [[1.74842502E12, 3.3333333333333335]], "isOverall": false, "label": "Send 2FA-success", "isController": false}, {"data": [[1.74842508E12, 1.1166666666666667], [1.74842502E12, 2.216666666666667]], "isOverall": false, "label": "Post Authen-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842508E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 2.2333333333333334, "minX": 1.74842502E12, "maxY": 11.1, "series": [{"data": [[1.74842508E12, 2.2333333333333334], [1.74842502E12, 11.1]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.74842508E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 25200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

